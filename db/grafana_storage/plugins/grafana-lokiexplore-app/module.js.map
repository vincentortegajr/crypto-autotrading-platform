{"version":3,"file":"module.js","mappings":"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","sources":["webpack://grafana-lokiexplore-app/webpack/runtime/create fake namespace object","webpack://grafana-lokiexplore-app/webpack/runtime/load script","webpack://grafana-lokiexplore-app/./node_modules/grafana-public-path.js","webpack://grafana-lokiexplore-app/./services/extensions/exposedComponents.tsx","webpack://grafana-lokiexplore-app/./module.tsx","webpack://grafana-lokiexplore-app/../node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://grafana-lokiexplore-app/../node_modules/react/jsx-runtime.js","webpack://grafana-lokiexplore-app/./Components/ServiceScene/ServiceSceneConstants.ts","webpack://grafana-lokiexplore-app/./services/enums.ts","webpack://grafana-lokiexplore-app/./services/extensions/links.ts","webpack://grafana-lokiexplore-app/./services/extensions/scenesMethods.ts","webpack://grafana-lokiexplore-app/./services/fieldsTypes.ts","webpack://grafana-lokiexplore-app/./services/filterTypes.ts","webpack://grafana-lokiexplore-app/./services/logger.ts","webpack://grafana-lokiexplore-app/./services/logqlMatchers.ts","webpack://grafana-lokiexplore-app/./services/lokiQuery.ts","webpack://grafana-lokiexplore-app/./services/narrowing.ts","webpack://grafana-lokiexplore-app/./services/operatorHelpers.ts","webpack://grafana-lokiexplore-app/./services/getOperatorDescription.ts","webpack://grafana-lokiexplore-app/./services/operators.ts","webpack://grafana-lokiexplore-app/./services/renderPatternFilters.ts","webpack://grafana-lokiexplore-app/./services/variables.ts","webpack://grafana-lokiexplore-app/../node_modules/void-elements/index.js","webpack://grafana-lokiexplore-app/external amd \"@emotion/css\"","webpack://grafana-lokiexplore-app/external amd \"@grafana/data\"","webpack://grafana-lokiexplore-app/external amd \"@grafana/runtime\"","webpack://grafana-lokiexplore-app/external amd \"@grafana/ui\"","webpack://grafana-lokiexplore-app/external amd \"i18next\"","webpack://grafana-lokiexplore-app/external amd \"lodash\"","webpack://grafana-lokiexplore-app/external amd \"module\"","webpack://grafana-lokiexplore-app/external amd \"react\"","webpack://grafana-lokiexplore-app/external amd \"react-dom\"","webpack://grafana-lokiexplore-app/external amd \"react-redux\"","webpack://grafana-lokiexplore-app/external amd \"react-router\"","webpack://grafana-lokiexplore-app/external amd \"redux\"","webpack://grafana-lokiexplore-app/external amd \"rxjs\"","webpack://grafana-lokiexplore-app/../node_modules/@grafana/i18n/dist/esm/constants.mjs","webpack://grafana-lokiexplore-app/../node_modules/i18next-browser-languagedetector/dist/esm/i18nextBrowserLanguageDetector.js","webpack://grafana-lokiexplore-app/../node_modules/html-parse-stringify/dist/html-parse-stringify.module.js","webpack://grafana-lokiexplore-app/../node_modules/react-i18next/dist/es/utils.js","webpack://grafana-lokiexplore-app/../node_modules/react-i18next/dist/es/unescape.js","webpack://grafana-lokiexplore-app/../node_modules/react-i18next/dist/es/defaults.js","webpack://grafana-lokiexplore-app/../node_modules/react-i18next/dist/es/i18nInstance.js","webpack://grafana-lokiexplore-app/../node_modules/react-i18next/dist/es/TransWithoutContext.js","webpack://grafana-lokiexplore-app/../node_modules/react-i18next/dist/es/initReactI18next.js","webpack://grafana-lokiexplore-app/../node_modules/react-i18next/dist/es/context.js","webpack://grafana-lokiexplore-app/../node_modules/react-i18next/dist/es/Trans.js","webpack://grafana-lokiexplore-app/../node_modules/@grafana/i18n/dist/esm/i18n.mjs","webpack://grafana-lokiexplore-app/../node_modules/@grafana/i18n/dist/esm/languages.mjs","webpack://grafana-lokiexplore-app/../node_modules/@lezer/common/dist/index.js","webpack://grafana-lokiexplore-app/../node_modules/@lezer/lr/dist/index.js","webpack://grafana-lokiexplore-app/../node_modules/@grafana/lezer-logql/index.es.js","webpack://grafana-lokiexplore-app/webpack/bootstrap","webpack://grafana-lokiexplore-app/webpack/runtime/compat get default export","webpack://grafana-lokiexplore-app/webpack/runtime/define property getters","webpack://grafana-lokiexplore-app/webpack/runtime/ensure chunk","webpack://grafana-lokiexplore-app/webpack/runtime/get javascript chunk filename","webpack://grafana-lokiexplore-app/webpack/runtime/global","webpack://grafana-lokiexplore-app/webpack/runtime/hasOwnProperty shorthand","webpack://grafana-lokiexplore-app/webpack/runtime/make namespace object","webpack://grafana-lokiexplore-app/webpack/runtime/node module decorator","webpack://grafana-lokiexplore-app/webpack/runtime/publicPath","webpack://grafana-lokiexplore-app/webpack/runtime/compat","webpack://grafana-lokiexplore-app/webpack/runtime/jsonp chunk loading","webpack://grafana-lokiexplore-app/webpack/startup"],"sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"grafana-lokiexplore-app:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t\tif (script.src.indexOf(window.location.origin + '/') !== 0) {\n\t\t\tscript.crossOrigin = \"anonymous\";\n\t\t}\n\t\tscript.integrity = __webpack_require__.sriHashes[chunkId];\n\t\tscript.crossOrigin = \"anonymous\";\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","\nimport amdMetaModule from 'amd-module';\n\n__webpack_public_path__ =\n  amdMetaModule && amdMetaModule.uri\n    ? amdMetaModule.uri.slice(0, amdMetaModule.uri.lastIndexOf('/') + 1)\n    : 'public/plugins/grafana-lokiexplore-app/';\n","import React, { lazy, Suspense } from 'react';\n\nimport { LinkButton } from '@grafana/ui';\n\nimport { EmbeddedLogsExplorationProps } from 'Components/EmbeddedLogsExploration/types';\nimport { OpenInLogsDrilldownButtonProps } from 'Components/OpenInLogsDrilldownButton/types';\nconst OpenInLogsDrilldownButton = lazy(() => import('Components/OpenInLogsDrilldownButton/OpenInLogsDrilldownButton'));\nconst EmbeddedLogsExploration = lazy(() => import('Components/EmbeddedLogsExploration/EmbeddedLogs'));\n\nexport function SuspendedOpenInLogsDrilldownButton(props: OpenInLogsDrilldownButtonProps) {\n  return (\n    <Suspense\n      fallback={\n        <LinkButton variant=\"secondary\" disabled>\n          Open in Logs Drilldown\n        </LinkButton>\n      }\n    >\n      <OpenInLogsDrilldownButton {...props} />\n    </Suspense>\n  );\n}\n\nexport function SuspendedEmbeddedLogsExploration(props: EmbeddedLogsExplorationProps) {\n  return (\n    <Suspense fallback={<div>Loading Logs Drilldown...</div>}>\n      <EmbeddedLogsExploration {...props} />\n    </Suspense>\n  );\n}\n","import { lazy } from 'react';\n\nimport { AppPlugin } from '@grafana/data';\nimport { initPluginTranslations } from '@grafana/i18n';\n\nimport pluginJson from 'plugin.json';\nimport {\n  SuspendedEmbeddedLogsExploration,\n  SuspendedOpenInLogsDrilldownButton,\n} from 'services/extensions/exposedComponents';\nimport { linkConfigs } from 'services/extensions/links';\n\n// Anything imported in this file is included in the main bundle which is pre-loaded in Grafana\n// Don't add imports to this file without lazy loading\n// Link extensions are the exception as they must be included in the main bundle in order to work in core Grafana\nconst App = lazy(async () => {\n  // Initialize i18n before loading any components\n  await initPluginTranslations(pluginJson.id);\n\n  const { wasmSupported } = await import('services/sorting');\n\n  const { default: initRuntimeDs } = await import('services/datasource');\n  const { default: initChangepoint } = await import('@bsull/augurs/changepoint');\n  const { default: initOutlier } = await import('@bsull/augurs/outlier');\n\n  initRuntimeDs();\n\n  if (wasmSupported()) {\n    await Promise.all([initChangepoint(), initOutlier()]);\n  }\n\n  return import('Components/App');\n});\n\nconst AppConfig = lazy(async () => {\n  return await import('./Components/AppConfig/AppConfig');\n});\n\nexport const plugin = new AppPlugin<{}>().setRootPage(App).addConfigPage({\n  body: AppConfig,\n  icon: 'cog',\n  id: 'configuration',\n  title: 'Configuration',\n});\n\nfor (const linkConfig of linkConfigs) {\n  plugin.addLink(linkConfig);\n}\n\nplugin.exposeComponent({\n  component: SuspendedOpenInLogsDrilldownButton,\n  description: 'A button that opens a logs view in the Logs Drilldown app.',\n  id: `grafana-lokiexplore-app/open-in-explore-logs-button/v1`,\n  title: 'Open in Logs Drilldown button',\n});\n\nplugin.exposeComponent({\n  component: SuspendedEmbeddedLogsExploration,\n  description: 'A component that renders a logs exploration view that can be embedded in other parts of Grafana.',\n  id: `grafana-lokiexplore-app/embedded-logs-exploration/v1`,\n  title: 'Embedded Logs Exploration',\n});\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","export const pageSlugUrlKey = 'pageSlug';\nexport const drilldownLabelUrlKey = 'drillDownLabel';\n","// Circular dependencies can cause enums to return as undefined in jest tests, moving enums here\nexport enum TabNames {\n  logs = 'Logs',\n  labels = 'Labels',\n  fields = 'Fields',\n  patterns = 'Patterns',\n}\n\nexport enum PageSlugs {\n  explore = 'explore',\n  logs = 'logs',\n  labels = 'labels',\n  patterns = 'patterns',\n  fields = 'fields',\n  embed = 'embed',\n}\n\nexport enum ValueSlugs {\n  field = 'field',\n  label = 'label',\n}\n","// Warning: This file (and any imports) are included in the main bundle with Grafana in order to provide link extension support in Grafana core, in an effort to keep Grafana loading quickly, please do not add any unnecessary imports to this file and run the bundle analyzer before committing any changes!\nimport { map as lodashMap } from 'lodash';\n\nimport {\n  CustomVariableModel,\n  PluginExtensionAddedLinkConfig,\n  PluginExtensionPanelContext,\n  PluginExtensionPoints,\n  QueryVariableModel,\n} from '@grafana/data';\nimport { getTemplateSrv, locationService } from '@grafana/runtime';\n\nimport pluginJson from '../../plugin.json';\nimport { LabelType } from '../fieldsTypes';\nimport { FieldFilter, IndexedLabelFilter, LineFilterType, PatternFilterOp, PatternFilterType } from '../filterTypes';\nimport { getMatcherFromQuery } from '../logqlMatchers';\nimport { LokiQuery } from '../lokiQuery';\nimport { isOperatorInclusive } from '../operatorHelpers';\nimport { renderPatternFilters } from '../renderPatternFilters';\nimport { escapeLabelValueInExactSelector, lokiSpecialRegexEscape } from './scenesMethods';\nimport {\n  addAdHocFilterUserInputPrefix,\n  AdHocFieldValue,\n  AppliedPattern,\n  EMPTY_VARIABLE_VALUE,\n  LEVEL_VARIABLE_VALUE,\n  SERVICE_NAME,\n  stripAdHocFilterUserInputPrefix,\n  VAR_DATASOURCE,\n  VAR_FIELDS,\n  VAR_LABELS,\n  VAR_LEVELS,\n  VAR_LINE_FILTERS,\n  VAR_METADATA,\n  VAR_PATTERNS,\n} from 'services/variables';\n\nconst PRODUCT_NAME = 'Grafana Logs Drilldown';\nconst title = `Open in ${PRODUCT_NAME}`;\nconst description = `Open current query in the ${PRODUCT_NAME} view`;\nconst icon = 'gf-logs';\n\nexport const ExtensionPoints = {\n  MetricInvestigation: 'grafana-lokiexplore-app/investigation/v1',\n} as const;\n\nexport type LinkConfigs = Array<PluginExtensionAddedLinkConfig<PluginExtensionPanelContext>>;\n\nexport const linkConfigs: LinkConfigs = [\n  {\n    targets: [\n      PluginExtensionPoints.DashboardPanelMenu,\n      PluginExtensionPoints.ExploreToolbarAction,\n      'grafana-metricsdrilldown-app/open-in-logs-drilldown/v1',\n      'grafana-assistant-app/navigateToDrilldown/v1',\n    ],\n    title,\n    description,\n    icon,\n    path: createAppUrl(),\n    configure: contextToLink,\n  },\n];\n\nfunction stringifyValues(value?: string): string {\n  if (!value) {\n    return EMPTY_VARIABLE_VALUE;\n  }\n  return value;\n}\n\n// Why are there twice as many escape chars in the url as expected?\nexport function replaceEscapeChars(value?: string): string | undefined {\n  return value?.replace(/\\\\\\\\/g, '\\\\');\n}\n\nexport function stringifyAdHocValues(value?: string): string {\n  if (!value) {\n    return EMPTY_VARIABLE_VALUE;\n  }\n\n  // All label values from explore are already escaped, so we mark them as custom values to prevent them from getting escaped again when rendering the LogQL\n  return addAdHocFilterUserInputPrefix(replaceEscapeChars(value));\n}\n\nexport function stringifyAdHocValueLabels(value?: string): string {\n  if (!value) {\n    return EMPTY_VARIABLE_VALUE;\n  }\n\n  return escapeURLDelimiters(replaceEscapeChars(value));\n}\n\nfunction setUrlParamsFromFieldFilters(fields: FieldFilter[], params: URLSearchParams) {\n  for (const field of fields) {\n    if (field.type === LabelType.StructuredMetadata) {\n      if (field.key === LEVEL_VARIABLE_VALUE) {\n        params = appendUrlParameter(\n          UrlParameters.Levels,\n          `${field.key}|${field.operator}|${escapeURLDelimiters(stringifyValues(field.value))}`,\n          params\n        );\n      } else {\n        params = appendUrlParameter(\n          UrlParameters.Metadata,\n          `${field.key}|${field.operator}|${escapeURLDelimiters(\n            stringifyAdHocValues(field.value)\n          )},${escapeURLDelimiters(replaceEscapeChars(field.value))}`,\n          params\n        );\n      }\n    } else {\n      const fieldValue: AdHocFieldValue = {\n        value: field.value,\n        parser: field.parser,\n      };\n\n      const adHocFilterURLString = `${field.key}|${field.operator}|${escapeURLDelimiters(\n        stringifyAdHocValues(JSON.stringify(fieldValue))\n      )},${stringifyAdHocValueLabels(fieldValue.value)}`;\n\n      params = appendUrlParameter(UrlParameters.Fields, adHocFilterURLString, params);\n    }\n  }\n  return params;\n}\n\nfunction setUrlParamsFromLabelFilters(labelFilters: IndexedLabelFilter[], params: URLSearchParams) {\n  for (const labelFilter of labelFilters) {\n    // skip non-indexed filters for now\n    if (labelFilter.type !== LabelType.Indexed) {\n      continue;\n    }\n\n    const labelsAdHocFilterURLString = `${labelFilter.key}|${labelFilter.operator}|${escapeURLDelimiters(\n      stringifyAdHocValues(labelFilter.value)\n    )},${escapeURLDelimiters(replaceEscapeChars(labelFilter.value))}`;\n\n    params = appendUrlParameter(UrlParameters.Labels, labelsAdHocFilterURLString, params);\n  }\n  return params;\n}\n\nfunction setLineFilterUrlParams(lineFilters: LineFilterType[], params: URLSearchParams) {\n  for (const lineFilter of lineFilters) {\n    params = appendUrlParameter(\n      UrlParameters.LineFilters,\n      `${lineFilter.key}|${escapeURLDelimiters(lineFilter.operator)}|${escapeURLDelimiters(\n        stringifyValues(lineFilter.value)\n      )}`,\n      params\n    );\n  }\n  return params;\n}\n\nexport function setUrlParamsFromPatterns(patternFilters: PatternFilterType[], params: URLSearchParams) {\n  const patterns: AppliedPattern[] = [];\n\n  for (const field of patternFilters) {\n    patterns.push({\n      type: field.operator === PatternFilterOp.match ? 'include' : 'exclude',\n      pattern: stringifyValues(field.value),\n    });\n  }\n\n  let patternsString = renderPatternFilters(patterns);\n\n  params = appendUrlParameter(UrlParameters.Patterns, JSON.stringify(patterns), params);\n  return appendUrlParameter(UrlParameters.PatternsVariable, patternsString, params);\n}\n\nfunction contextToLink<T extends PluginExtensionPanelContext>(context?: T) {\n  if (!context || !context.targets) {\n    return undefined;\n  }\n  const lokiQuery = context.targets.find((target) => target.datasource?.type === 'loki') as LokiQuery | undefined;\n  const templateSrv = getTemplateSrv();\n  const dataSourceUid = templateSrv.replace(lokiQuery?.datasource?.uid, context.scopedVars);\n\n  if (!lokiQuery || !dataSourceUid) {\n    return undefined;\n  }\n\n  // if there is no loki expression but the datasource is loki, then return createAppUrl()\n  if (!lokiQuery?.expr) {\n    return { path: createAppUrl() };\n  }\n\n  const expr = templateSrv.replace(lokiQuery.expr, context.scopedVars, interpolateQueryExpr);\n  const { fields, labelFilters, lineFilters, patternFilters } = getMatcherFromQuery(expr, context, lokiQuery);\n  const labelSelector = labelFilters.find((selector) => isOperatorInclusive(selector.operator));\n\n  // If there's no label selector, return a link to the service selection\n  // @todo it would be better if we could change the button copy (or tooltip) depending on the link destination\n  if (!labelSelector) {\n    return {\n      path: createAppUrl(),\n    };\n  }\n\n  // If there are a bunch of values for the same field, the value slug can get really long, let's just use the first one in the URL\n  const urlLabelValue = labelSelector.value.split('|')[0];\n  const labelValue = replaceSlash(urlLabelValue);\n  let labelName = labelSelector.key === SERVICE_NAME ? 'service' : labelSelector.key;\n  // sort `primary label` first\n  labelFilters.sort((a) => (a.key === labelName ? -1 : 1));\n\n  let params = setUrlParameter(UrlParameters.DatasourceId, dataSourceUid, new URLSearchParams());\n  params = setUrlParameter(UrlParameters.TimeRangeFrom, context.timeRange.from.valueOf().toString(), params);\n  params = setUrlParameter(UrlParameters.TimeRangeTo, context.timeRange.to.valueOf().toString(), params);\n  params = setUrlParamsFromLabelFilters(labelFilters, params);\n\n  if (lineFilters) {\n    params = setLineFilterUrlParams(lineFilters, params);\n  }\n  if (fields?.length) {\n    params = setUrlParamsFromFieldFilters(fields, params);\n  }\n  if (patternFilters?.length) {\n    params = setUrlParamsFromPatterns(patternFilters, params);\n  }\n\n  return {\n    path: createAppUrl(`/explore/${labelName}/${labelValue}/logs`, params),\n  };\n}\n\nexport function createAppUrl(path = '/explore', urlParams?: URLSearchParams): string {\n  return `/a/${pluginJson.id}${path}${urlParams ? `?${urlParams.toString()}` : ''}`;\n}\n\nexport const UrlParameters = {\n  DatasourceId: `var-${VAR_DATASOURCE}`,\n  TimeRangeFrom: 'from',\n  TimeRangeTo: 'to',\n  Labels: `var-${VAR_LABELS}`,\n  Fields: `var-${VAR_FIELDS}`,\n  Metadata: `var-${VAR_METADATA}`,\n  Levels: `var-${VAR_LEVELS}`,\n  LineFilters: `var-${VAR_LINE_FILTERS}`,\n  Patterns: VAR_PATTERNS,\n  PatternsVariable: `var-${VAR_PATTERNS}`,\n} as const;\nexport type UrlParameterType = (typeof UrlParameters)[keyof typeof UrlParameters];\n\nexport function setUrlParameter(key: UrlParameterType, value: string, initalParams?: URLSearchParams): URLSearchParams {\n  const searchParams = new URLSearchParams(initalParams?.toString() ?? locationService.getSearch());\n  searchParams.set(key, value);\n\n  return searchParams;\n}\n\nexport function appendUrlParameter(\n  key: UrlParameterType,\n  value: string,\n  initalParams?: URLSearchParams\n): URLSearchParams {\n  const location = locationService.getLocation();\n  const searchParams = new URLSearchParams(initalParams?.toString() ?? location.search);\n  searchParams.append(key, value);\n\n  return searchParams;\n}\n\nexport function replaceSlash(parameter: string): string {\n  return (\n    stripAdHocFilterUserInputPrefix(parameter)\n      // back-slash is converted to forward-slash in the URL, replace that char\n      .replace(/\\//g, '-')\n      .replace(/\\\\/g, '-')\n  );\n}\n\n// Manually copied over from @grafana/scenes so we don't need to import scenes to build links\nfunction escapeUrlCommaDelimiters(value: string | undefined): string {\n  if (value === null || value === undefined) {\n    return '';\n  }\n\n  // Replace the comma due to using it as a value/label separator\n  return /,/g[Symbol.replace](value, '__gfc__');\n}\n\nexport function escapeUrlPipeDelimiters(value: string | undefined): string {\n  if (value === null || value === undefined) {\n    return '';\n  }\n\n  // Replace the pipe due to using it as a filter separator\n  return (value = /\\|/g[Symbol.replace](value, '__gfp__'));\n}\n\nexport function escapeURLDelimiters(value: string | undefined): string {\n  return escapeUrlCommaDelimiters(escapeUrlPipeDelimiters(value));\n}\n\n// Copied from interpolateQueryExpr in loki datasource, as we can't return a promise in the link extension config we can't fetch the datasource from the datasource srv, so we're forced to duplicate this method\nexport function interpolateQueryExpr(value: string | unknown[], variable: QueryVariableModel | CustomVariableModel) {\n  // if no multi or include all do not regexEscape\n  if (!variable.multi && !variable.includeAll) {\n    return value;\n  }\n\n  if (typeof value === 'string') {\n    return escapeLabelValueInExactSelector(value);\n  }\n\n  const escapedValues = lodashMap(value, lokiSpecialRegexEscape);\n  return escapedValues.join('|');\n}\n","// Warning, this file is included in the main module.tsx bundle, and doesn't contain any imports to keep that bundle size small. Don't add imports to this file!\n\n/**\n * Methods copied from scenes that we want in the module (to generate links which cannot be lazy loaded), without including all of scenes.\n * See https://github.com/grafana/scenes/issues/1046\n */\n// based on the openmetrics-documentation, the 3 symbols we have to handle are:\n// - \\n ... the newline character\n// - \\  ... the backslash character\n// - \"  ... the double-quote character\nexport function escapeLabelValueInExactSelector(labelValue: string): string {\n  return labelValue.replace(/\\\\/g, '\\\\\\\\').replace(/\\n/g, '\\\\n').replace(/\"/g, '\\\\\"');\n}\n\n// Pulled from loki datasource\nexport function lokiSpecialRegexEscape<T>(value: T) {\n  if (typeof value === 'string') {\n    return value.replace(/\\\\/g, '\\\\\\\\\\\\\\\\').replace(/[$^*{}\\[\\]+?.()|]/g, '\\\\\\\\$&');\n  }\n  return value;\n}\n","// copied from public/app/plugins/datasource/loki/types.ts\nexport enum LabelType {\n  Indexed = 'I',\n  StructuredMetadata = 'S',\n  Parsed = 'P',\n}\n","// Warning: This file (and any imports) are included in the main bundle with Grafana in order to provide link extension support in Grafana core, in an effort to keep Grafana loading quickly, please do not add any unnecessary imports to this file and run the bundle analyzer before committing any changes!\n\nimport { LabelType } from './fieldsTypes';\nimport { ParserType } from './variables';\n\nexport type FilterOpType = LabelFilterOp | NumericFilterOp;\nexport enum LabelFilterOp {\n  Equal = '=',\n  NotEqual = '!=',\n  RegexEqual = '=~',\n  RegexNotEqual = '!~',\n}\n// Line filter doesn't have an operator, so we add an empty space to keep it in URL state\nexport enum LineFormatFilterOp {\n  Empty = ' ',\n}\n\nexport enum NumericFilterOp {\n  gt = '>',\n  lt = '<',\n  gte = '>=',\n  lte = '<=',\n}\nexport const FilterOp = { ...LabelFilterOp, ...NumericFilterOp };\n\nexport type IndexedLabelFilter = {\n  key: string;\n  operator: FilterOpType;\n  type?: LabelType;\n  value: string;\n};\n\nexport type FieldFilter = {\n  key: string;\n  operator: FilterOpType;\n  parser?: ParserType;\n  type?: LabelType;\n  value: string;\n};\n\nexport type LineFilterType = {\n  key: string;\n  operator: LineFilterOp;\n  value: string;\n};\n\nexport type PatternFilterType = {\n  operator: PatternFilterOp;\n  value: string;\n};\n\nexport enum LineFilterOp {\n  match = '|=',\n  negativeMatch = `!=`,\n  regex = '|~',\n  negativeRegex = `!~`,\n}\n\nexport enum PatternFilterOp {\n  match = '|>',\n  negativeMatch = '!>',\n}\n\nexport enum LineFilterCaseSensitive {\n  caseSensitive = 'caseSensitive',\n  caseInsensitive = 'caseInsensitive',\n}\n","import { LogContext } from '@grafana/faro-web-sdk';\nimport { FetchError, logError, logInfo, logWarning } from '@grafana/runtime';\n\nimport packageJson from '../../package.json';\nimport pluginJson from '../plugin.json';\nimport { isRecord } from './narrowing';\n\nconst defaultContext = {\n  app: pluginJson.id,\n  version: packageJson.version,\n};\n\nexport const logger = {\n  error: (err: Error | unknown, context?: LogContext) => {\n    const ctx = { ...defaultContext, ...context };\n    console.error(err, ctx);\n    attemptFaroErr(err, ctx);\n  },\n  info: (msg: string, context?: LogContext) => {\n    const ctx = { ...defaultContext, ...context };\n    console.log(msg, ctx);\n    attemptFaroInfo(msg, ctx);\n  },\n  warn: (msg: string, context?: LogContext) => {\n    const ctx = { ...defaultContext, ...context };\n    console.warn(msg, ctx);\n    attemptFaroWarn(msg, ctx);\n  },\n};\n\nconst attemptFaroInfo = (msg: string, context?: LogContext) => {\n  try {\n    logInfo(msg, context);\n  } catch (e) {\n    console.warn('Failed to log faro event!');\n  }\n};\n\nconst attemptFaroWarn = (msg: string, context?: LogContext) => {\n  try {\n    logWarning(msg, context);\n  } catch (e) {\n    console.warn('Failed to log faro warning!', { context, msg });\n  }\n};\n/**\n * Checks unknown error for properties from Records like FetchError and adds them to the context\n * @param err\n * @param context\n */\nfunction populateFetchErrorContext(err: unknown | FetchError, context: LogContext) {\n  if (typeof err === 'object' && err !== null) {\n    if (isRecord(err)) {\n      Object.keys(err).forEach((key: string) => {\n        const value = err[key];\n        if (typeof value === 'string' || typeof value === 'boolean' || typeof value === 'number') {\n          context[key] = value.toString();\n        }\n      });\n    }\n\n    if (hasData(err)) {\n      if (typeof err.data === 'object' && err.data !== null) {\n        try {\n          context.data = JSON.stringify(err.data);\n        } catch (e) {\n          // do nothing\n        }\n      } else if (typeof err.data === 'string' || typeof err.data === 'boolean' || typeof err.data === 'number') {\n        context.data = err.data.toString();\n      }\n    }\n  }\n}\n\nconst attemptFaroErr = (err: Error | FetchError | unknown, context2: LogContext) => {\n  let context = context2;\n  try {\n    populateFetchErrorContext(err, context);\n\n    if (err instanceof Error) {\n      logError(err, context);\n    } else if (typeof err === 'string') {\n      logError(new Error(err), context);\n    } else if (err && typeof err === 'object') {\n      if (context.msg) {\n        logError(new Error(context.msg), context);\n      } else {\n        logError(new Error('error object'), context);\n      }\n    } else {\n      logError(new Error('unknown error'), context);\n    }\n  } catch (e) {\n    console.error('Failed to log faro error!', { context, err });\n  }\n};\n\nconst hasData = (value: object): value is { data: unknown } => {\n  return 'data' in value;\n};\n","// Warning: This file (and any imports) are included in the main bundle with Grafana in order to provide link extension support in Grafana core, in an effort to keep Grafana loading quickly, please do not add any unnecessary imports to this file and run the bundle analyzer before committing any changes!\n\nimport { NodeType, SyntaxNode, Tree } from '@lezer/common';\n\nimport { PluginExtensionPanelContext } from '@grafana/data';\nimport {\n  Bytes,\n  Duration,\n  Eq,\n  FilterOp,\n  Gte,\n  Gtr,\n  Identifier,\n  Json,\n  LabelFilter,\n  LineFilter,\n  Logfmt,\n  Lss,\n  Lte,\n  Matcher,\n  Neq,\n  Npa,\n  Nre,\n  Number,\n  OrFilter,\n  parser,\n  PipeExact,\n  PipeMatch,\n  PipePattern,\n  Re,\n  Selector,\n  String,\n} from '@grafana/lezer-logql';\n\nimport { LabelType } from './fieldsTypes';\nimport {\n  FieldFilter,\n  FilterOp as FilterOperator,\n  FilterOpType,\n  IndexedLabelFilter,\n  LineFilterCaseSensitive,\n  LineFilterOp,\n  LineFilterType,\n  PatternFilterOp,\n  PatternFilterType,\n} from './filterTypes';\nimport { getLabelTypeFromFrame, LokiQuery } from './lokiQuery';\nimport { ParserType } from './variables';\n\nexport class NodePosition {\n  from: number;\n  to: number;\n  type?: NodeType;\n  syntaxNode?: SyntaxNode;\n\n  constructor(from: number, to: number, syntaxNode?: SyntaxNode, type?: NodeType) {\n    this.from = from;\n    this.to = to;\n    this.type = type;\n    this.syntaxNode = syntaxNode;\n  }\n\n  static fromNode(node: SyntaxNode): NodePosition {\n    return new NodePosition(node.from, node.to, node, node.type);\n  }\n\n  contains(position: NodePosition): boolean {\n    return this.from <= position.from && this.to >= position.to;\n  }\n\n  getExpression(query: string): string {\n    return query.substring(this.from, this.to);\n  }\n}\n\nexport function getNodesFromQuery(query: string, nodeTypes?: number[]): SyntaxNode[] {\n  const nodes: SyntaxNode[] = [];\n  const tree: Tree = parser.parse(query);\n  tree.iterate({\n    enter: (node): false | void => {\n      if (nodeTypes === undefined || nodeTypes.includes(node.type.id)) {\n        nodes.push(node.node);\n      }\n    },\n  });\n  return nodes;\n}\n\nfunction getAllPositionsInNodeByType(node: SyntaxNode, type: number): NodePosition[] {\n  if (node.type.id === type) {\n    return [NodePosition.fromNode(node)];\n  }\n\n  const positions: NodePosition[] = [];\n  let pos = 0;\n  let child = node.childAfter(pos);\n  while (child) {\n    positions.push(...getAllPositionsInNodeByType(child, type));\n    pos = child.to;\n    child = node.childAfter(pos);\n  }\n  return positions;\n}\n\nfunction parseLabelFilters(query: string) {\n  const filters: IndexedLabelFilter[] = [];\n  // `Matcher` will select field filters as well as indexed label filters\n  const allMatcher = getNodesFromQuery(query, [Matcher]);\n  for (const matcher of allMatcher) {\n    const identifierPosition = getAllPositionsInNodeByType(matcher, Identifier);\n    if (!identifierPosition || identifierPosition.length === 0) {\n      continue;\n    }\n\n    const valuePosition = getAllPositionsInNodeByType(matcher, String);\n    const operator = query.substring(identifierPosition[0].to, valuePosition[0].from);\n    const key = identifierPosition[0].getExpression(query);\n    const value = valuePosition.map((position) => query.substring(position.from + 1, position.to - 1))[0];\n\n    if (\n      !key ||\n      !value ||\n      (operator !== FilterOperator.NotEqual &&\n        operator !== FilterOperator.Equal &&\n        operator !== FilterOperator.RegexEqual &&\n        operator !== FilterOperator.RegexNotEqual)\n    ) {\n      continue;\n    }\n\n    filters.push({\n      key,\n      operator,\n      type: LabelType.Indexed,\n      value,\n    });\n  }\n  return filters;\n}\n\nfunction parseNonPatternFilters(\n  lineFilterValue: string,\n  quoteString: string,\n  lineFilters: LineFilterType[],\n  index: number,\n  operator: LineFilterOp\n) {\n  const isRegexSelector = operator === LineFilterOp.regex || operator === LineFilterOp.negativeRegex;\n  const isCaseInsensitive = lineFilterValue.includes('(?i)') && isRegexSelector;\n\n  // If quoteString is `, we shouldn't need to un-escape anything\n  // But if the quoteString is \", we'll need to remove double escape chars, as these values are re-escaped when building the query expression (but not stored in the value/url)\n  if (quoteString === '\"' && isRegexSelector) {\n    // replace \\\\ with \\\n    const replaceDoubleEscape = new RegExp(/\\\\\\\\/, 'g');\n    lineFilterValue = lineFilterValue.replace(replaceDoubleEscape, '\\\\');\n  } else if (quoteString === '\"') {\n    // replace \\\\\\\" => \"\n    const replaceDoubleQuoteEscape = new RegExp(`\\\\\\\\\\\"`, 'g');\n    lineFilterValue = lineFilterValue.replace(replaceDoubleQuoteEscape, '\"');\n    const replaceDoubleEscape = new RegExp(/\\\\\\\\/, 'g');\n    lineFilterValue = lineFilterValue.replace(replaceDoubleEscape, '\\\\');\n  }\n\n  if (isCaseInsensitive) {\n    // If `(?i)` exists in a regex it would need to be escaped to match log lines containing `(?i)`, so it should be safe to replace all instances of `(?i)` in the line filter?\n    lineFilterValue = lineFilterValue.replace('(?i)', '');\n  }\n\n  lineFilters.push({\n    key: isCaseInsensitive\n      ? LineFilterCaseSensitive.caseInsensitive.toString()\n      : LineFilterCaseSensitive.caseSensitive.toString() + ',' + index.toString(),\n    operator: operator,\n    value: lineFilterValue,\n  });\n\n  return lineFilterValue;\n}\n\nfunction parsePatternFilters(lineFilterValue: string, patternFilters: PatternFilterType[], operator: PatternFilterOp) {\n  const replaceDoubleQuoteEscape = new RegExp(/\\\\\"/, 'g');\n  lineFilterValue = lineFilterValue.replace(replaceDoubleQuoteEscape, '\"');\n  patternFilters.push({\n    operator,\n    value: lineFilterValue,\n  });\n}\n\nfunction parseLineFilters(query: string) {\n  const lineFilters: LineFilterType[] = [];\n  const patternFilters: PatternFilterType[] = [];\n  const allLineFilters = getNodesFromQuery(query, [LineFilter]);\n  for (const [index, matcher] of allLineFilters.entries()) {\n    const equal = getAllPositionsInNodeByType(matcher, PipeExact);\n    const pipeRegExp = getAllPositionsInNodeByType(matcher, PipeMatch);\n    const notEqual = getAllPositionsInNodeByType(matcher, Neq);\n    const notEqualRegExp = getAllPositionsInNodeByType(matcher, Nre);\n    const patternInclude = getAllPositionsInNodeByType(matcher, PipePattern);\n    const patternExclude = getAllPositionsInNodeByType(matcher, Npa);\n\n    const lineFilterValueNodes = getStringsFromLineFilter(matcher);\n\n    for (const lineFilterValueNode of lineFilterValueNodes) {\n      const quoteString = query.substring(lineFilterValueNode?.from + 1, lineFilterValueNode?.from);\n\n      // Remove quotes\n      let lineFilterValue = query.substring(lineFilterValueNode?.from + 1, lineFilterValueNode?.to - 1);\n\n      if (lineFilterValue.length) {\n        let operator;\n        if (equal.length) {\n          operator = LineFilterOp.match;\n        } else if (notEqual.length) {\n          operator = LineFilterOp.negativeMatch;\n        } else if (notEqualRegExp.length) {\n          operator = LineFilterOp.negativeRegex;\n        } else if (pipeRegExp.length) {\n          operator = LineFilterOp.regex;\n        } else if (patternInclude.length) {\n          operator = PatternFilterOp.match;\n        } else if (patternExclude.length) {\n          operator = PatternFilterOp.negativeMatch;\n        } else {\n          console.warn('unknown line filter', {\n            query: query.substring(matcher.from, matcher.to),\n          });\n\n          continue;\n        }\n\n        if (!(operator === PatternFilterOp.match || operator === PatternFilterOp.negativeMatch)) {\n          parseNonPatternFilters(lineFilterValue, quoteString, lineFilters, index, operator);\n        } else {\n          parsePatternFilters(lineFilterValue, patternFilters, operator);\n        }\n      }\n    }\n  }\n  return { lineFilters, patternFilters };\n}\n\nfunction getNumericFieldOperator(matcher: SyntaxNode) {\n  if (getAllPositionsInNodeByType(matcher, Lte).length) {\n    return FilterOperator.lte;\n  } else if (getAllPositionsInNodeByType(matcher, Lss).length) {\n    return FilterOperator.lt;\n  } else if (getAllPositionsInNodeByType(matcher, Gte).length) {\n    return FilterOperator.gte;\n  } else if (getAllPositionsInNodeByType(matcher, Gtr).length) {\n    return FilterOperator.gt;\n  }\n\n  console.warn('unknown numeric operator');\n\n  return undefined;\n}\n\nfunction getStringFieldOperator(matcher: SyntaxNode) {\n  if (getAllPositionsInNodeByType(matcher, Eq).length) {\n    return FilterOperator.Equal; // =\n  } else if (getAllPositionsInNodeByType(matcher, Neq).length) {\n    return FilterOperator.NotEqual; // !=\n  } else if (getAllPositionsInNodeByType(matcher, Re).length) {\n    return FilterOperator.RegexEqual; // =~\n  } else if (getAllPositionsInNodeByType(matcher, Nre).length) {\n    return FilterOperator.RegexNotEqual; // !~\n  }\n\n  return undefined;\n}\n\nfunction parseFields(query: string, context?: PluginExtensionPanelContext, lokiQuery?: LokiQuery) {\n  const fields: FieldFilter[] = [];\n  const dataFrame = context?.data?.series.find((frame) => frame.refId === lokiQuery?.refId);\n  // We do not currently support \"or\" in Grafana Logs Drilldown, so grab the left hand side LabelFilter leaf nodes as this will be the first filter expression in a given pipeline stage\n  const allFields = getNodesFromQuery(query, [LabelFilter]);\n  for (const matcher of allFields) {\n    const position = NodePosition.fromNode(matcher);\n    const expression = position.getExpression(query);\n    const isParentNode = matcher.getChild(LabelFilter);\n\n    // If the Label filter contains other Label Filter nodes, we want to skip this node so we only add the leaf LabelFilter nodes\n    if (isParentNode) {\n      continue;\n    }\n\n    // Skip error expression, it will get added automatically when Grafana Logs Drilldown adds a parser\n    if (expression.substring(0, 9) === `__error__`) {\n      continue;\n    }\n\n    // @todo we need to use detected_fields API to get the \"right\" parser for a specific field\n    // Currently we just check to see if there is a parser before the current node, this means that queries that are placing metadata filters after the parser will query the metadata field as a parsed field, which will lead to degraded performance\n    const logFmtParser = getNodesFromQuery(query.substring(0, matcher.node.to), [Logfmt]);\n    const jsonParser = getNodesFromQuery(query.substring(0, matcher.node.to), [Json]);\n\n    // field filter key\n    const fieldNameNode = getAllPositionsInNodeByType(matcher, Identifier);\n    const fieldName = fieldNameNode[0]?.getExpression(query);\n\n    // field filter value\n    const fieldStringValue = getAllPositionsInNodeByType(matcher, String);\n    const fieldNumberValue = getAllPositionsInNodeByType(matcher, Number);\n    const fieldBytesValue = getAllPositionsInNodeByType(matcher, Bytes);\n    const fieldDurationValue = getAllPositionsInNodeByType(matcher, Duration);\n\n    let fieldValue: string, operator: FilterOpType | undefined;\n    if (fieldStringValue.length) {\n      operator = getStringFieldOperator(matcher);\n      // Strip out quotes\n      fieldValue = query.substring(fieldStringValue[0].from + 1, fieldStringValue[0].to - 1);\n    } else if (fieldNumberValue.length) {\n      fieldValue = fieldNumberValue[0].getExpression(query);\n      operator = getNumericFieldOperator(matcher);\n    } else if (fieldDurationValue.length) {\n      operator = getNumericFieldOperator(matcher);\n      fieldValue = fieldDurationValue[0].getExpression(query);\n    } else if (fieldBytesValue.length) {\n      operator = getNumericFieldOperator(matcher);\n      fieldValue = fieldBytesValue[0].getExpression(query);\n    } else {\n      continue;\n    }\n\n    // Label type\n    let labelType: LabelType | undefined;\n    if (dataFrame) {\n      // @todo if the field label is not in the first line, we'll always add this filter as a field filter\n      // Also negative filters that exclude all values of a field will always fail to get a label type for that exclusion filter?\n      labelType = getLabelTypeFromFrame(fieldName, dataFrame) ?? undefined;\n    }\n\n    if (operator) {\n      let parser: ParserType | undefined;\n      if (logFmtParser.length && jsonParser.length) {\n        parser = 'mixed';\n      } else if (logFmtParser.length) {\n        parser = 'logfmt';\n      } else if (jsonParser.length) {\n        parser = 'json';\n      } else {\n        // If there is no parser in the query, the field would have to be metadata or an invalid query?\n        labelType = LabelType.StructuredMetadata;\n      }\n\n      fields.push({\n        key: fieldName,\n        operator: operator,\n        parser,\n        type: labelType ?? LabelType.Parsed,\n        value: fieldValue,\n      });\n    }\n  }\n  return fields;\n}\n\nexport function getMatcherFromQuery(\n  query: string,\n  context?: PluginExtensionPanelContext,\n  lokiQuery?: LokiQuery\n): {\n  fields?: FieldFilter[];\n  labelFilters: IndexedLabelFilter[];\n  lineFilters?: LineFilterType[];\n  patternFilters?: PatternFilterType[];\n} {\n  const filter: IndexedLabelFilter[] = [];\n  const selector = getNodesFromQuery(query, [Selector]);\n\n  if (selector.length === 0) {\n    return { labelFilters: filter };\n  }\n\n  // Get the stream selector portion of the query\n  const selectorQuery = getAllPositionsInNodeByType(selector[0], Selector)[0].getExpression(query);\n  const labelFilters = parseLabelFilters(selectorQuery);\n  const fields = parseFields(query, context, lokiQuery);\n  const { lineFilters, patternFilters } = parseLineFilters(query);\n\n  return { fields, labelFilters, lineFilters, patternFilters };\n}\n\nexport function isQueryWithNode(query: string, nodeType: number): boolean {\n  let isQueryWithNode = false;\n  const tree = parser.parse(query);\n  tree.iterate({\n    enter: ({ type }): false | void => {\n      if (type.id === nodeType) {\n        isQueryWithNode = true;\n        return false;\n      }\n    },\n  });\n  return isQueryWithNode;\n}\n\n/**\n * Parses the query and looks for error nodes. If there is at least one, it returns true.\n * Grafana variables are considered errors, so if you need to validate a query\n * with variables you should interpolate it first.\n */\nexport const ErrorId = 0;\nexport function isValidQuery(query: string): boolean {\n  return isQueryWithNode(query, ErrorId) === false;\n}\n\nfunction getStringsFromLineFilter(filter: SyntaxNode): SyntaxNode[] {\n  const nodes: SyntaxNode[] = [];\n  let node: SyntaxNode | null = filter;\n  do {\n    const string = node.getChild(String);\n    if (string && !node.getChild(FilterOp)) {\n      nodes.push(string);\n    }\n    node = node.getChild(OrFilter);\n  } while (node != null);\n\n  return nodes;\n}\n","// Warning: This file (and any imports) are included in the main bundle with Grafana in order to provide link extension support in Grafana core, in an effort to keep Grafana loading quickly, please do not add any unnecessary imports to this file and run the bundle analyzer before committing any changes!\nimport { DataFrame, DataSourceJsonData, ScopedVars, TimeRange } from '@grafana/data';\nimport { DataSourceWithBackend } from '@grafana/runtime';\nimport { DataSourceRef } from '@grafana/schema';\n\nimport { LabelType } from './fieldsTypes';\n\nexport enum LokiQueryDirection {\n  Backward = 'backward',\n  Forward = 'forward',\n  Scan = 'scan',\n}\n\nexport type LokiQuery = {\n  datasource?: DataSourceRef;\n  direction?: LokiQueryDirection;\n  editorMode?: string;\n  expr: string;\n  legendFormat?: string;\n  maxLines?: number;\n  queryType?: LokiQueryType;\n  refId: string;\n  step?: string;\n  supportingQueryType?: string;\n};\n\nexport type LokiQueryType = 'instant' | 'range' | 'stream' | string;\n\nexport type LokiDatasource = DataSourceWithBackend<LokiQuery, DataSourceJsonData> & {\n  maxLines?: number;\n} & {\n  getTimeRangeParams: (timeRange: TimeRange) => { end: number; start: number };\n  // @todo delete after min supported grafana is upgraded to >=11.6\n  interpolateString?: (string: string, scopedVars?: ScopedVars) => string;\n};\n\nexport function getLabelTypeFromFrame(labelKey: string, frame: DataFrame, index = 0): null | LabelType {\n  const typeField = frame.fields.find((field) => field.name === 'labelTypes')?.values[index];\n  if (!typeField) {\n    return null;\n  }\n  switch (typeField[labelKey]) {\n    case 'I':\n      return LabelType.Indexed;\n    case 'S':\n      return LabelType.StructuredMetadata;\n    case 'P':\n      return LabelType.Parsed;\n    default:\n      return null;\n  }\n}\n","import { LogsSortOrder, RawTimeRange, UrlQueryMap } from '@grafana/data';\n\nimport { drilldownLabelUrlKey, pageSlugUrlKey } from '../Components/ServiceScene/ServiceSceneConstants';\nimport { SelectedTableRow } from '../Components/Table/LogLineCellComponent';\nimport { JSONDerivedFieldLink } from './derivedFields';\nimport { PageSlugs, TabNames, ValueSlugs } from './enums';\nimport { LabelFilterOp, NumericFilterOp } from './filterTypes';\nimport { LogsVisualizationType } from './store';\nimport { FieldValue, ParserType } from './variables';\n\nconst isObj = (o: unknown): o is object => typeof o === 'object' && o !== null;\n\nexport function hasProp<K extends PropertyKey>(data: object, prop: K): data is Record<K, unknown> {\n  return prop in data;\n}\n\nconst isString = (s: unknown) => (typeof s === 'string' && s) || '';\n\nexport const isRecord = (obj: unknown): obj is Record<string, unknown> => typeof obj === 'object';\n\nexport function unknownToStrings(a: unknown): string[] {\n  let strings: string[] = [];\n  if (Array.isArray(a)) {\n    for (let i = 0; i < a.length; i++) {\n      strings.push(isString(a[i]));\n    }\n  }\n  return strings;\n}\n\nexport function narrowSelectedTableRow(o: unknown): SelectedTableRow | false {\n  const narrowed = isObj(o) && hasProp(o, 'row') && hasProp(o, 'id') && o;\n\n  if (narrowed) {\n    const row = typeof narrowed.row === 'number' && narrowed.row;\n    const id = typeof narrowed.id === 'string' && narrowed.id;\n    if (id !== false && row !== false) {\n      return { id, row };\n    }\n  }\n\n  return false;\n}\n\nexport function narrowLogsVisualizationType(o: unknown): LogsVisualizationType | false {\n  return typeof o === 'string' && (o === 'logs' || o === 'table' || o === 'json') && o;\n}\nexport function narrowLogsSortOrder(o: unknown): LogsSortOrder | false {\n  if (typeof o === 'string' && o === LogsSortOrder.Ascending.toString()) {\n    return LogsSortOrder.Ascending;\n  }\n\n  if (typeof o === 'string' && o === LogsSortOrder.Descending.toString()) {\n    return LogsSortOrder.Descending;\n  }\n\n  return false;\n}\n\nexport function narrowFieldValue(o: unknown): FieldValue | false {\n  const narrowed = isObj(o) && hasProp(o, 'value') && hasProp(o, 'parser') && o;\n\n  if (narrowed) {\n    const parser: ParserType | false =\n      typeof narrowed.parser === 'string' &&\n      (narrowed.parser === 'logfmt' ||\n        narrowed.parser === 'json' ||\n        narrowed.parser === 'mixed' ||\n        narrowed.parser === 'structuredMetadata') &&\n      narrowed.parser;\n    const value = typeof narrowed.value === 'string' && narrowed.value;\n\n    if (parser !== false && value !== false) {\n      return { parser, value };\n    }\n  }\n\n  return false;\n}\n\nexport function narrowRecordStringNumber(o: unknown): Record<string, number> | false {\n  const narrowed = isObj(o) && isRecord(o) && o;\n\n  if (narrowed) {\n    const keys = Object.keys(narrowed);\n    const returnRecord: Record<string, number> = {};\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const value = narrowed[keys[i]];\n      if (typeof value === 'number') {\n        returnRecord[key] = value;\n      }\n    }\n\n    return returnRecord;\n  }\n\n  return false;\n}\n\nexport function narrowTimeRange(unknownRange: unknown): RawTimeRange | undefined {\n  const range = isObj(unknownRange) && hasProp(unknownRange, 'to') && hasProp(unknownRange, 'from') && unknownRange;\n  if (range) {\n    const to = isString(range.to);\n    const from = isString(range.from);\n    if (to && from) {\n      return { from, to };\n    }\n  }\n\n  return undefined;\n}\n\nexport function narrowErrorMessage(e: unknown): string | undefined {\n  const msg = isObj(e) && hasProp(e, 'error') && isString(e.error);\n  if (msg) {\n    return msg;\n  }\n  return undefined;\n}\n\nexport function narrowFilterOperator(op: string): LabelFilterOp | NumericFilterOp {\n  switch (op) {\n    case LabelFilterOp.Equal:\n    case LabelFilterOp.NotEqual:\n    case LabelFilterOp.RegexEqual:\n    case LabelFilterOp.RegexNotEqual:\n    case NumericFilterOp.gt:\n    case NumericFilterOp.gte:\n    case NumericFilterOp.lt:\n    case NumericFilterOp.lte:\n      return op;\n    default:\n      throw new NarrowingError('operator is invalid!');\n  }\n}\n\nexport function narrowTabName(input: unknown): TabNames | false {\n  return (\n    (input === TabNames.fields ||\n      input === TabNames.labels ||\n      input === TabNames.logs ||\n      input === TabNames.patterns) &&\n    input\n  );\n}\n\nexport function narrowPageOrValueSlug(input: unknown): ValueSlugs | PageSlugs | false {\n  return narrowPageSlug(input) || narrowValueSlug(input);\n}\n\nexport function narrowValueSlug(input: unknown): ValueSlugs | false {\n  return (input === ValueSlugs.field || input === ValueSlugs.label) && input;\n}\n\nexport function narrowPageSlug(input: unknown): PageSlugs | false {\n  if (typeof input === 'string') {\n    input = input.toLowerCase();\n  }\n  return (\n    (input === PageSlugs.fields ||\n      input === PageSlugs.labels ||\n      input === PageSlugs.logs ||\n      input === PageSlugs.patterns) &&\n    input\n  );\n}\n\nexport function narrowDrilldownLabelFromSearchParams(searchParams: UrlQueryMap) {\n  return Array.isArray(searchParams[drilldownLabelUrlKey]) &&\n    searchParams[drilldownLabelUrlKey][0] &&\n    typeof searchParams[drilldownLabelUrlKey][0] === 'string'\n    ? searchParams[drilldownLabelUrlKey][0]\n    : typeof searchParams[drilldownLabelUrlKey] === 'string' && searchParams[drilldownLabelUrlKey];\n}\n\nexport function narrowPageSlugFromSearchParams(searchParams: UrlQueryMap) {\n  return narrowPageOrValueSlug(\n    Array.isArray(searchParams[pageSlugUrlKey]) ? searchParams[pageSlugUrlKey][0] : searchParams[pageSlugUrlKey]\n  );\n}\n\nexport function narrowJsonDerivedFieldLinkPayload(payload: unknown): JSONDerivedFieldLink | false {\n  if (isObj(payload) && hasProp(payload, 'href') && hasProp(payload, 'name')) {\n    const href = isString(payload.href);\n    const name = isString(payload.name);\n    return {\n      href,\n      name,\n    };\n  }\n  return false;\n}\n\nexport class NarrowingError extends Error {}\n","import { FilterOp, FilterOpType, NumericFilterOp } from './filterTypes';\nimport { numericOperatorArray } from './operators';\n\nexport const isOperatorInclusive = (op: string | FilterOpType): boolean => {\n  return op === FilterOp.Equal || op === FilterOp.RegexEqual;\n};\nexport const isOperatorExclusive = (op: string | FilterOpType): boolean => {\n  return op === FilterOp.NotEqual || op === FilterOp.RegexNotEqual;\n};\nexport const isOperatorRegex = (op: string | FilterOpType): boolean => {\n  return op === FilterOp.RegexEqual || op === FilterOp.RegexNotEqual;\n};\nexport const isOperatorNumeric = (op: string | NumericFilterOp): boolean => {\n  return numericOperatorArray.includes(op);\n};\n","import { FilterOp, FilterOpType } from './filterTypes';\nimport { logger } from './logger';\n\nexport function getOperatorDescription(op: FilterOpType): string {\n  if (op === FilterOp.NotEqual) {\n    return 'Not equal';\n  }\n  if (op === FilterOp.RegexNotEqual) {\n    return 'Does not match regex';\n  }\n  if (op === FilterOp.Equal) {\n    return 'Equals';\n  }\n  if (op === FilterOp.RegexEqual) {\n    return 'Matches regex';\n  }\n  if (op === FilterOp.lt) {\n    return 'Less than';\n  }\n  if (op === FilterOp.gt) {\n    return 'Greater than';\n  }\n  if (op === FilterOp.gte) {\n    return 'Greater than or equal to';\n  }\n  if (op === FilterOp.lte) {\n    return 'Less than or equal to';\n  }\n\n  const error = new Error('Invalid operator!');\n  logger.error(error, { msg: 'Invalid operator', operator: op });\n  throw error;\n}\n","import { SelectableValue } from '@grafana/data';\n\nimport { FilterOp, LineFilterOp } from './filterTypes';\nimport { getOperatorDescription } from './getOperatorDescription';\n\nexport const operators = [FilterOp.Equal, FilterOp.NotEqual, FilterOp.RegexEqual, FilterOp.RegexNotEqual].map<\n  SelectableValue<string>\n>((value, index, array) => {\n  return {\n    description: getOperatorDescription(value),\n    label: value,\n    value,\n  };\n});\n\nexport const includeOperators = [FilterOp.Equal, FilterOp.RegexEqual].map<SelectableValue<string>>((value) => ({\n  description: getOperatorDescription(value),\n  label: value,\n  value,\n}));\n\nexport const numericOperatorArray = [FilterOp.gt, FilterOp.gte, FilterOp.lt, FilterOp.lte];\n\nexport const numericOperators = numericOperatorArray.map<SelectableValue<string>>((value) => ({\n  description: getOperatorDescription(value),\n  label: value,\n  value,\n}));\n\nexport const lineFilterOperators: SelectableValue[] = [\n  { label: 'match', value: LineFilterOp.match },\n  { label: 'negativeMatch', value: LineFilterOp.negativeMatch },\n  { label: 'regex', value: LineFilterOp.regex },\n  { label: 'negativeRegex', value: LineFilterOp.negativeRegex },\n];\n","// Warning, this file is included in the main module.tsx bundle, and doesn't contain many imports to keep that bundle size small. Don't add imports to this file!\nimport { escapeLabelValueInExactSelector } from './extensions/scenesMethods';\nimport { AppliedPattern } from './variables';\n\nexport function renderPatternFilters(patterns: AppliedPattern[]) {\n  const excludePatterns = patterns.filter((pattern) => pattern.type === 'exclude');\n  const excludePatternsLine = excludePatterns\n    .map((p) => `!> \"${escapeLabelValueInExactSelector(p.pattern)}\"`)\n    .join(' ')\n    .trim();\n\n  const includePatterns = patterns.filter((pattern) => pattern.type === 'include');\n  let includePatternsLine = '';\n  if (includePatterns.length > 0) {\n    if (includePatterns.length === 1) {\n      includePatternsLine = `|> \"${escapeLabelValueInExactSelector(includePatterns[0].pattern)}\"`;\n    } else {\n      includePatternsLine = `|> ${includePatterns\n        .map((p) => `\"${escapeLabelValueInExactSelector(p.pattern)}\"`)\n        .join(' or ')}`;\n    }\n  }\n  return `${excludePatternsLine} ${includePatternsLine}`.trim();\n}\n","// Warning, this file is included in the main module.tsx bundle, and doesn't contain any imports to keep that bundle size small. Don't add imports to this file!\n\nimport { AdHocFilterWithLabels } from '@grafana/scenes';\n\nexport interface FieldValue {\n  parser: ParserType;\n  value: string;\n}\n\nexport interface AdHocFieldValue {\n  parser?: ParserType;\n  value?: string;\n}\nexport interface AppliedPattern {\n  pattern: string;\n  type: 'exclude' | 'include';\n}\n\nexport type ParserType = 'json' | 'logfmt' | 'mixed' | 'structuredMetadata';\nexport type DetectedFieldType = 'boolean' | 'bytes' | 'duration' | 'float' | 'int' | 'string';\nexport type AdHocFilterWithLabelsMeta = { parser?: ParserType; type?: DetectedFieldType };\nexport type AdHocFiltersWithLabelsAndMeta = AdHocFilterWithLabels<AdHocFilterWithLabelsMeta>;\n\nexport type LogsQueryOptions = {\n  fieldExpressionToAdd?: string;\n  fieldType?: DetectedFieldType;\n  jsonParserPropToAdd?: string;\n  labelExpressionToAdd?: string;\n  parser?: ParserType;\n  structuredMetadataToAdd?: string;\n};\n\nexport const VAR_LABELS = 'filters';\nexport const VAR_LABELS_EXPR = '${filters}';\nexport const VAR_LABELS_REPLICA = 'filters_replica';\nexport const VAR_LABELS_REPLICA_EXPR = '${filters_replica}';\nexport const VAR_FIELDS = 'fields';\nexport const VAR_FIELDS_EXPR = '${fields}';\nexport const PENDING_FIELDS_EXPR = '${pendingFields}';\nexport const PENDING_METADATA_EXPR = '${pendingMetadata}';\nexport const VAR_FIELDS_AND_METADATA = 'all-fields';\nexport const VAR_METADATA = 'metadata';\nexport const VAR_METADATA_EXPR = '${metadata}';\nexport const VAR_PATTERNS = 'patterns';\nexport const VAR_PATTERNS_EXPR = '${patterns}';\nexport const VAR_LEVELS = 'levels';\nexport const VAR_LEVELS_EXPR = '${levels}';\nexport const VAR_FIELD_GROUP_BY = 'fieldBy';\nexport const VAR_LABEL_GROUP_BY = 'labelBy';\nexport const VAR_LABEL_GROUP_BY_EXPR = '${labelBy}';\nexport const VAR_PRIMARY_LABEL_SEARCH = 'primary_label_search';\nexport const VAR_PRIMARY_LABEL_SEARCH_EXPR = '${primary_label_search}';\nexport const VAR_PRIMARY_LABEL = 'primary_label';\nexport const VAR_PRIMARY_LABEL_EXPR = '${primary_label}';\nexport const VAR_DATASOURCE = 'ds';\nexport const VAR_DATASOURCE_EXPR = '${ds}';\nexport const VAR_JSON_FIELDS = 'jsonFields';\nexport const VAR_JSON_FIELDS_EXPR = '${jsonFields}';\n\nexport const VAR_LINE_FORMAT = 'lineFormat';\nexport const VAR_LINE_FORMAT_EXPR = '${lineFormat}';\n\nexport const DETECTED_FIELDS_MIXED_FORMAT_EXPR_NO_JSON_FIELDS = `| json | logfmt | drop __error__, __error_details__`;\nexport const DETECTED_FIELDS_MIXED_FORMAT_EXPR = `| json ${VAR_JSON_FIELDS_EXPR} | logfmt | drop __error__, __error_details__`;\nexport const MIXED_FORMAT_EXPR = `| json ${VAR_JSON_FIELDS_EXPR} | logfmt | drop __error__, __error_details__`;\nexport const JSON_FORMAT_EXPR = `| json ${VAR_JSON_FIELDS_EXPR} | drop __error__, __error_details__`;\n// export const JSON_FORMAT_EXPR_NO_JSON_FIELDS = `| json | drop __error__, __error_details__`;\nexport const LOGS_FORMAT_EXPR = `| logfmt`;\n// This variable is hardcoded to the value of MIXED_FORMAT_EXPR. This is a hack to get logs context working, we don't want to use a variable for a value that doesn't change and cannot be updated by the user.\nexport const VAR_LOGS_FORMAT = 'logsFormat';\nexport const VAR_LOGS_FORMAT_EXPR = '${logsFormat}';\n// The deprecated line filter (custom variable)\nexport const VAR_LINE_FILTER_DEPRECATED = 'lineFilter';\n// The new single value line filter (ad-hoc variable), results are added to VAR_LINE_FILTER_AD_HOC when \"submitted\"\nexport const VAR_LINE_FILTER = 'lineFilterV2';\nexport const VAR_LINE_FILTER_EXPR = '${lineFilterV2}';\n// The new multi value line filter (ad-hoc variable)\nexport const VAR_LINE_FILTERS = 'lineFilters';\nexport const VAR_LINE_FILTERS_EXPR = '${lineFilters}';\nexport const LOG_STREAM_SELECTOR_EXPR = `{${VAR_LABELS_EXPR}} ${VAR_LEVELS_EXPR} ${VAR_METADATA_EXPR} ${VAR_PATTERNS_EXPR} ${VAR_LINE_FILTERS_EXPR} | json ${VAR_JSON_FIELDS_EXPR} | logfmt | drop __error__, __error_details__ ${VAR_FIELDS_EXPR} ${VAR_LINE_FORMAT_EXPR}`;\n// Same as the LOG_STREAM_SELECTOR_EXPR, but without the fields as they will need to be built manually to exclude the current filter value\nexport const DETECTED_FIELD_VALUES_EXPR = `{${VAR_LABELS_EXPR}} ${VAR_LEVELS_EXPR} ${VAR_METADATA_EXPR} ${VAR_PATTERNS_EXPR} ${VAR_LINE_FILTERS_EXPR} ${MIXED_FORMAT_EXPR} ${VAR_FIELDS_EXPR}`;\nexport const DETECTED_FIELD_AND_METADATA_VALUES_EXPR = `{${VAR_LABELS_EXPR}} ${VAR_LEVELS_EXPR} ${PENDING_METADATA_EXPR} ${VAR_PATTERNS_EXPR} ${VAR_LINE_FILTERS_EXPR} ${DETECTED_FIELDS_MIXED_FORMAT_EXPR} ${PENDING_FIELDS_EXPR}`;\nexport const DETECTED_METADATA_VALUES_EXPR = `{${VAR_LABELS_EXPR}} ${VAR_LEVELS_EXPR} ${PENDING_FIELDS_EXPR} ${VAR_PATTERNS_EXPR} ${VAR_LINE_FILTERS_EXPR} ${VAR_LOGS_FORMAT_EXPR} ${VAR_FIELDS_EXPR}`;\nexport const DETECTED_LEVELS_VALUES_EXPR = `{${VAR_LABELS_EXPR}} ${PENDING_FIELDS_EXPR} ${VAR_METADATA_EXPR} ${VAR_PATTERNS_EXPR} ${VAR_LINE_FILTERS_EXPR} ${VAR_LOGS_FORMAT_EXPR} ${VAR_FIELDS_EXPR}`;\nexport const PATTERNS_SAMPLE_SELECTOR_EXPR = `{${VAR_LABELS_EXPR}} ${VAR_METADATA_EXPR} ${VAR_PATTERNS_EXPR} ${VAR_LOGS_FORMAT_EXPR}`;\nexport const PRETTY_LOG_STREAM_SELECTOR_EXPR = `${VAR_LABELS_EXPR} ${VAR_LEVELS_EXPR} ${VAR_METADATA_EXPR} ${VAR_PATTERNS_EXPR} ${VAR_LINE_FILTERS_EXPR} ${VAR_FIELDS_EXPR}`;\nexport const EXPLORATION_DS = { uid: VAR_DATASOURCE_EXPR };\nexport const ALL_VARIABLE_VALUE = '$__all';\nexport const LEVEL_VARIABLE_VALUE = 'detected_level';\nexport const SERVICE_NAME = 'service_name';\nexport const SERVICE_UI_LABEL = 'service';\nexport const VAR_AGGREGATED_METRICS = 'var_aggregated_metrics';\nexport const VAR_AGGREGATED_METRICS_EXPR = '${var_aggregated_metrics}';\nexport const EMPTY_VARIABLE_VALUE = '\"\"';\n\n// Delimiter used at the start of a label value to denote user input that should not be escaped\n// @todo we need ad-hoc-filter meta that is persisted in the URL so we can clean this up.\nexport const USER_INPUT_ADHOC_VALUE_PREFIX = '__CVΩ__';\nexport function stripAdHocFilterUserInputPrefix(value = '') {\n  if (value.startsWith(USER_INPUT_ADHOC_VALUE_PREFIX)) {\n    return value.substring(USER_INPUT_ADHOC_VALUE_PREFIX.length);\n  }\n  return value;\n}\nexport function isAdHocFilterValueUserInput(value = '') {\n  return value.startsWith(USER_INPUT_ADHOC_VALUE_PREFIX);\n}\nexport function addAdHocFilterUserInputPrefix(value = '') {\n  return USER_INPUT_ADHOC_VALUE_PREFIX + value;\n}\n","/**\n * This file automatically generated from `pre-publish.js`.\n * Do not manually edit.\n */\n\nmodule.exports = {\n  \"area\": true,\n  \"base\": true,\n  \"br\": true,\n  \"col\": true,\n  \"embed\": true,\n  \"hr\": true,\n  \"img\": true,\n  \"input\": true,\n  \"link\": true,\n  \"meta\": true,\n  \"param\": true,\n  \"source\": true,\n  \"track\": true,\n  \"wbr\": true\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6089__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7781__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8531__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2007__;","module.exports = __WEBPACK_EXTERNAL_MODULE__211__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3241__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1308__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5959__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8398__;","module.exports = __WEBPACK_EXTERNAL_MODULE__200__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1159__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7694__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1269__;","\"use strict\";\nconst ENGLISH_US = \"en-US\";\nconst FRENCH_FRANCE = \"fr-FR\";\nconst SPANISH_SPAIN = \"es-ES\";\nconst GERMAN_GERMANY = \"de-DE\";\nconst BRAZILIAN_PORTUGUESE = \"pt-BR\";\nconst CHINESE_SIMPLIFIED = \"zh-Hans\";\nconst ITALIAN_ITALY = \"it-IT\";\nconst JAPANESE_JAPAN = \"ja-JP\";\nconst INDONESIAN_INDONESIA = \"id-ID\";\nconst KOREAN_KOREA = \"ko-KR\";\nconst RUSSIAN_RUSSIA = \"ru-RU\";\nconst CZECH_CZECHIA = \"cs-CZ\";\nconst DUTCH_NETHERLANDS = \"nl-NL\";\nconst HUNGARIAN_HUNGARY = \"hu-HU\";\nconst PORTUGUESE_PORTUGAL = \"pt-PT\";\nconst POLISH_POLAND = \"pl-PL\";\nconst SWEDISH_SWEDEN = \"sv-SE\";\nconst TURKISH_TURKEY = \"tr-TR\";\nconst CHINESE_TRADITIONAL = \"zh-Hant\";\nconst DEFAULT_LANGUAGE = ENGLISH_US;\nconst PSEUDO_LOCALE = \"pseudo\";\n\nexport { BRAZILIAN_PORTUGUESE, CHINESE_SIMPLIFIED, CHINESE_TRADITIONAL, CZECH_CZECHIA, DEFAULT_LANGUAGE, DUTCH_NETHERLANDS, ENGLISH_US, FRENCH_FRANCE, GERMAN_GERMANY, HUNGARIAN_HUNGARY, INDONESIAN_INDONESIA, ITALIAN_ITALY, JAPANESE_JAPAN, KOREAN_KOREA, POLISH_POLAND, PORTUGUESE_PORTUGAL, PSEUDO_LOCALE, RUSSIAN_RUSSIA, SPANISH_SPAIN, SWEDISH_SWEDEN, TURKISH_TURKEY };\n//# sourceMappingURL=constants.mjs.map\n","const {\n  slice,\n  forEach\n} = [];\nfunction defaults(obj) {\n  forEach.call(slice.call(arguments, 1), source => {\n    if (source) {\n      for (const prop in source) {\n        if (obj[prop] === undefined) obj[prop] = source[prop];\n      }\n    }\n  });\n  return obj;\n}\nfunction hasXSS(input) {\n  if (typeof input !== 'string') return false;\n\n  // Common XSS attack patterns\n  const xssPatterns = [/<\\s*script.*?>/i, /<\\s*\\/\\s*script\\s*>/i, /<\\s*img.*?on\\w+\\s*=/i, /<\\s*\\w+\\s*on\\w+\\s*=.*?>/i, /javascript\\s*:/i, /vbscript\\s*:/i, /expression\\s*\\(/i, /eval\\s*\\(/i, /alert\\s*\\(/i, /document\\.cookie/i, /document\\.write\\s*\\(/i, /window\\.location/i, /innerHTML/i];\n  return xssPatterns.some(pattern => pattern.test(input));\n}\n\n// eslint-disable-next-line no-control-regex\nconst fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\nconst serializeCookie = function (name, val) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    path: '/'\n  };\n  const opt = options;\n  const value = encodeURIComponent(val);\n  let str = `${name}=${value}`;\n  if (opt.maxAge > 0) {\n    const maxAge = opt.maxAge - 0;\n    if (Number.isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += `; Max-Age=${Math.floor(maxAge)}`;\n  }\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n    str += `; Domain=${opt.domain}`;\n  }\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n    str += `; Path=${opt.path}`;\n  }\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n    str += `; Expires=${opt.expires.toUTCString()}`;\n  }\n  if (opt.httpOnly) str += '; HttpOnly';\n  if (opt.secure) str += '; Secure';\n  if (opt.sameSite) {\n    const sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n  if (opt.partitioned) str += '; Partitioned';\n  return str;\n};\nconst cookie = {\n  create(name, value, minutes, domain) {\n    let cookieOptions = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      path: '/',\n      sameSite: 'strict'\n    };\n    if (minutes) {\n      cookieOptions.expires = new Date();\n      cookieOptions.expires.setTime(cookieOptions.expires.getTime() + minutes * 60 * 1000);\n    }\n    if (domain) cookieOptions.domain = domain;\n    document.cookie = serializeCookie(name, value, cookieOptions);\n  },\n  read(name) {\n    const nameEQ = `${name}=`;\n    const ca = document.cookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  },\n  remove(name, domain) {\n    this.create(name, '', -1, domain);\n  }\n};\nvar cookie$1 = {\n  name: 'cookie',\n  // Deconstruct the options object and extract the lookupCookie property\n  lookup(_ref) {\n    let {\n      lookupCookie\n    } = _ref;\n    if (lookupCookie && typeof document !== 'undefined') {\n      return cookie.read(lookupCookie) || undefined;\n    }\n    return undefined;\n  },\n  // Deconstruct the options object and extract the lookupCookie, cookieMinutes, cookieDomain, and cookieOptions properties\n  cacheUserLanguage(lng, _ref2) {\n    let {\n      lookupCookie,\n      cookieMinutes,\n      cookieDomain,\n      cookieOptions\n    } = _ref2;\n    if (lookupCookie && typeof document !== 'undefined') {\n      cookie.create(lookupCookie, lng, cookieMinutes, cookieDomain, cookieOptions);\n    }\n  }\n};\n\nvar querystring = {\n  name: 'querystring',\n  // Deconstruct the options object and extract the lookupQuerystring property\n  lookup(_ref) {\n    let {\n      lookupQuerystring\n    } = _ref;\n    let found;\n    if (typeof window !== 'undefined') {\n      let {\n        search\n      } = window.location;\n      if (!window.location.search && window.location.hash?.indexOf('?') > -1) {\n        search = window.location.hash.substring(window.location.hash.indexOf('?'));\n      }\n      const query = search.substring(1);\n      const params = query.split('&');\n      for (let i = 0; i < params.length; i++) {\n        const pos = params[i].indexOf('=');\n        if (pos > 0) {\n          const key = params[i].substring(0, pos);\n          if (key === lookupQuerystring) {\n            found = params[i].substring(pos + 1);\n          }\n        }\n      }\n    }\n    return found;\n  }\n};\n\nvar hash = {\n  name: 'hash',\n  // Deconstruct the options object and extract the lookupHash property and the lookupFromHashIndex property\n  lookup(_ref) {\n    let {\n      lookupHash,\n      lookupFromHashIndex\n    } = _ref;\n    let found;\n    if (typeof window !== 'undefined') {\n      const {\n        hash\n      } = window.location;\n      if (hash && hash.length > 2) {\n        const query = hash.substring(1);\n        if (lookupHash) {\n          const params = query.split('&');\n          for (let i = 0; i < params.length; i++) {\n            const pos = params[i].indexOf('=');\n            if (pos > 0) {\n              const key = params[i].substring(0, pos);\n              if (key === lookupHash) {\n                found = params[i].substring(pos + 1);\n              }\n            }\n          }\n        }\n        if (found) return found;\n        if (!found && lookupFromHashIndex > -1) {\n          const language = hash.match(/\\/([a-zA-Z-]*)/g);\n          if (!Array.isArray(language)) return undefined;\n          const index = typeof lookupFromHashIndex === 'number' ? lookupFromHashIndex : 0;\n          return language[index]?.replace('/', '');\n        }\n      }\n    }\n    return found;\n  }\n};\n\nlet hasLocalStorageSupport = null;\nconst localStorageAvailable = () => {\n  if (hasLocalStorageSupport !== null) return hasLocalStorageSupport;\n  try {\n    hasLocalStorageSupport = typeof window !== 'undefined' && window.localStorage !== null;\n    if (!hasLocalStorageSupport) {\n      return false;\n    }\n    const testKey = 'i18next.translate.boo';\n    window.localStorage.setItem(testKey, 'foo');\n    window.localStorage.removeItem(testKey);\n  } catch (e) {\n    hasLocalStorageSupport = false;\n  }\n  return hasLocalStorageSupport;\n};\nvar localStorage = {\n  name: 'localStorage',\n  // Deconstruct the options object and extract the lookupLocalStorage property\n  lookup(_ref) {\n    let {\n      lookupLocalStorage\n    } = _ref;\n    if (lookupLocalStorage && localStorageAvailable()) {\n      return window.localStorage.getItem(lookupLocalStorage) || undefined; // Undefined ensures type consistency with the previous version of this function\n    }\n    return undefined;\n  },\n  // Deconstruct the options object and extract the lookupLocalStorage property\n  cacheUserLanguage(lng, _ref2) {\n    let {\n      lookupLocalStorage\n    } = _ref2;\n    if (lookupLocalStorage && localStorageAvailable()) {\n      window.localStorage.setItem(lookupLocalStorage, lng);\n    }\n  }\n};\n\nlet hasSessionStorageSupport = null;\nconst sessionStorageAvailable = () => {\n  if (hasSessionStorageSupport !== null) return hasSessionStorageSupport;\n  try {\n    hasSessionStorageSupport = typeof window !== 'undefined' && window.sessionStorage !== null;\n    if (!hasSessionStorageSupport) {\n      return false;\n    }\n    const testKey = 'i18next.translate.boo';\n    window.sessionStorage.setItem(testKey, 'foo');\n    window.sessionStorage.removeItem(testKey);\n  } catch (e) {\n    hasSessionStorageSupport = false;\n  }\n  return hasSessionStorageSupport;\n};\nvar sessionStorage = {\n  name: 'sessionStorage',\n  lookup(_ref) {\n    let {\n      lookupSessionStorage\n    } = _ref;\n    if (lookupSessionStorage && sessionStorageAvailable()) {\n      return window.sessionStorage.getItem(lookupSessionStorage) || undefined;\n    }\n    return undefined;\n  },\n  cacheUserLanguage(lng, _ref2) {\n    let {\n      lookupSessionStorage\n    } = _ref2;\n    if (lookupSessionStorage && sessionStorageAvailable()) {\n      window.sessionStorage.setItem(lookupSessionStorage, lng);\n    }\n  }\n};\n\nvar navigator$1 = {\n  name: 'navigator',\n  lookup(options) {\n    const found = [];\n    if (typeof navigator !== 'undefined') {\n      const {\n        languages,\n        userLanguage,\n        language\n      } = navigator;\n      if (languages) {\n        // chrome only; not an array, so can't use .push.apply instead of iterating\n        for (let i = 0; i < languages.length; i++) {\n          found.push(languages[i]);\n        }\n      }\n      if (userLanguage) {\n        found.push(userLanguage);\n      }\n      if (language) {\n        found.push(language);\n      }\n    }\n    return found.length > 0 ? found : undefined;\n  }\n};\n\nvar htmlTag = {\n  name: 'htmlTag',\n  // Deconstruct the options object and extract the htmlTag property\n  lookup(_ref) {\n    let {\n      htmlTag\n    } = _ref;\n    let found;\n    const internalHtmlTag = htmlTag || (typeof document !== 'undefined' ? document.documentElement : null);\n    if (internalHtmlTag && typeof internalHtmlTag.getAttribute === 'function') {\n      found = internalHtmlTag.getAttribute('lang');\n    }\n    return found;\n  }\n};\n\nvar path = {\n  name: 'path',\n  // Deconstruct the options object and extract the lookupFromPathIndex property\n  lookup(_ref) {\n    let {\n      lookupFromPathIndex\n    } = _ref;\n    if (typeof window === 'undefined') return undefined;\n    const language = window.location.pathname.match(/\\/([a-zA-Z-]*)/g);\n    if (!Array.isArray(language)) return undefined;\n    const index = typeof lookupFromPathIndex === 'number' ? lookupFromPathIndex : 0;\n    return language[index]?.replace('/', '');\n  }\n};\n\nvar subdomain = {\n  name: 'subdomain',\n  lookup(_ref) {\n    let {\n      lookupFromSubdomainIndex\n    } = _ref;\n    // If given get the subdomain index else 1\n    const internalLookupFromSubdomainIndex = typeof lookupFromSubdomainIndex === 'number' ? lookupFromSubdomainIndex + 1 : 1;\n    // get all matches if window.location. is existing\n    // first item of match is the match itself and the second is the first group match which should be the first subdomain match\n    // is the hostname no public domain get the or option of localhost\n    const language = typeof window !== 'undefined' && window.location?.hostname?.match(/^(\\w{2,5})\\.(([a-z0-9-]{1,63}\\.[a-z]{2,6})|localhost)/i);\n\n    // if there is no match (null) return undefined\n    if (!language) return undefined;\n    // return the given group match\n    return language[internalLookupFromSubdomainIndex];\n  }\n};\n\n// some environments, throws when accessing document.cookie\nlet canCookies = false;\ntry {\n  // eslint-disable-next-line no-unused-expressions\n  document.cookie;\n  canCookies = true;\n  // eslint-disable-next-line no-empty\n} catch (e) {}\nconst order = ['querystring', 'cookie', 'localStorage', 'sessionStorage', 'navigator', 'htmlTag'];\nif (!canCookies) order.splice(1, 1);\nconst getDefaults = () => ({\n  order,\n  lookupQuerystring: 'lng',\n  lookupCookie: 'i18next',\n  lookupLocalStorage: 'i18nextLng',\n  lookupSessionStorage: 'i18nextLng',\n  // cache user language\n  caches: ['localStorage'],\n  excludeCacheFor: ['cimode'],\n  // cookieMinutes: 10,\n  // cookieDomain: 'myDomain'\n\n  convertDetectedLanguage: l => l\n});\nclass Browser {\n  constructor(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.type = 'languageDetector';\n    this.detectors = {};\n    this.init(services, options);\n  }\n  init() {\n    let services = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      languageUtils: {}\n    };\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let i18nOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.services = services;\n    this.options = defaults(options, this.options || {}, getDefaults());\n    if (typeof this.options.convertDetectedLanguage === 'string' && this.options.convertDetectedLanguage.indexOf('15897') > -1) {\n      this.options.convertDetectedLanguage = l => l.replace('-', '_');\n    }\n\n    // backwards compatibility\n    if (this.options.lookupFromUrlIndex) this.options.lookupFromPathIndex = this.options.lookupFromUrlIndex;\n    this.i18nOptions = i18nOptions;\n    this.addDetector(cookie$1);\n    this.addDetector(querystring);\n    this.addDetector(localStorage);\n    this.addDetector(sessionStorage);\n    this.addDetector(navigator$1);\n    this.addDetector(htmlTag);\n    this.addDetector(path);\n    this.addDetector(subdomain);\n    this.addDetector(hash);\n  }\n  addDetector(detector) {\n    this.detectors[detector.name] = detector;\n    return this;\n  }\n  detect() {\n    let detectionOrder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options.order;\n    let detected = [];\n    detectionOrder.forEach(detectorName => {\n      if (this.detectors[detectorName]) {\n        let lookup = this.detectors[detectorName].lookup(this.options);\n        if (lookup && typeof lookup === 'string') lookup = [lookup];\n        if (lookup) detected = detected.concat(lookup);\n      }\n    });\n    detected = detected.filter(d => d !== undefined && d !== null && !hasXSS(d)).map(d => this.options.convertDetectedLanguage(d));\n    if (this.services && this.services.languageUtils && this.services.languageUtils.getBestMatchFromCodes) return detected; // new i18next v19.5.0\n    return detected.length > 0 ? detected[0] : null; // a little backward compatibility\n  }\n  cacheUserLanguage(lng) {\n    let caches = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.options.caches;\n    if (!caches) return;\n    if (this.options.excludeCacheFor && this.options.excludeCacheFor.indexOf(lng) > -1) return;\n    caches.forEach(cacheName => {\n      if (this.detectors[cacheName]) this.detectors[cacheName].cacheUserLanguage(lng, this.options);\n    });\n  }\n}\nBrowser.type = 'languageDetector';\n\nexport { Browser as default };\n","import e from\"void-elements\";var t=/\\s([^'\"/\\s><]+?)[\\s/>]|([^\\s=]+)=\\s?(\".*?\"|'.*?')/g;function n(n){var r={type:\"tag\",name:\"\",voidElement:!1,attrs:{},children:[]},i=n.match(/<\\/?([^\\s]+?)[/\\s>]/);if(i&&(r.name=i[1],(e[i[1]]||\"/\"===n.charAt(n.length-2))&&(r.voidElement=!0),r.name.startsWith(\"!--\"))){var s=n.indexOf(\"--\\x3e\");return{type:\"comment\",comment:-1!==s?n.slice(4,s):\"\"}}for(var a=new RegExp(t),c=null;null!==(c=a.exec(n));)if(c[0].trim())if(c[1]){var o=c[1].trim(),l=[o,\"\"];o.indexOf(\"=\")>-1&&(l=o.split(\"=\")),r.attrs[l[0]]=l[1],a.lastIndex--}else c[2]&&(r.attrs[c[2]]=c[3].trim().substring(1,c[3].length-1));return r}var r=/<[a-zA-Z0-9\\-\\!\\/](?:\"[^\"]*\"|'[^']*'|[^'\">])*>/g,i=/^\\s*$/,s=Object.create(null);function a(e,t){switch(t.type){case\"text\":return e+t.content;case\"tag\":return e+=\"<\"+t.name+(t.attrs?function(e){var t=[];for(var n in e)t.push(n+'=\"'+e[n]+'\"');return t.length?\" \"+t.join(\" \"):\"\"}(t.attrs):\"\")+(t.voidElement?\"/>\":\">\"),t.voidElement?e:e+t.children.reduce(a,\"\")+\"</\"+t.name+\">\";case\"comment\":return e+\"\\x3c!--\"+t.comment+\"--\\x3e\"}}var c={parse:function(e,t){t||(t={}),t.components||(t.components=s);var a,c=[],o=[],l=-1,m=!1;if(0!==e.indexOf(\"<\")){var u=e.indexOf(\"<\");c.push({type:\"text\",content:-1===u?e:e.substring(0,u)})}return e.replace(r,function(r,s){if(m){if(r!==\"</\"+a.name+\">\")return;m=!1}var u,f=\"/\"!==r.charAt(1),h=r.startsWith(\"\\x3c!--\"),p=s+r.length,d=e.charAt(p);if(h){var v=n(r);return l<0?(c.push(v),c):((u=o[l]).children.push(v),c)}if(f&&(l++,\"tag\"===(a=n(r)).type&&t.components[a.name]&&(a.type=\"component\",m=!0),a.voidElement||m||!d||\"<\"===d||a.children.push({type:\"text\",content:e.slice(p,e.indexOf(\"<\",p))}),0===l&&c.push(a),(u=o[l-1])&&u.children.push(a),o[l]=a),(!f||a.voidElement)&&(l>-1&&(a.voidElement||a.name===r.slice(2,-1))&&(l--,a=-1===l?c:o[l]),!m&&\"<\"!==d&&d)){u=-1===l?c:o[l].children;var x=e.indexOf(\"<\",p),g=e.slice(p,-1===x?void 0:x);i.test(g)&&(g=\" \"),(x>-1&&l+u.length>=0||\" \"!==g)&&u.push({type:\"text\",content:g})}}),c},stringify:function(e){return e.reduce(function(e,t){return e+a(\"\",t)},\"\")}};export default c;\n//# sourceMappingURL=html-parse-stringify.module.js.map\n","export const warn = (i18n, code, msg, rest) => {\n  const args = [msg, {\n    code,\n    ...(rest || {})\n  }];\n  if (i18n?.services?.logger?.forward) {\n    return i18n.services.logger.forward(args, 'warn', 'react-i18next::', true);\n  }\n  if (isString(args[0])) args[0] = `react-i18next:: ${args[0]}`;\n  if (i18n?.services?.logger?.warn) {\n    i18n.services.logger.warn(...args);\n  } else if (console?.warn) {\n    console.warn(...args);\n  }\n};\nconst alreadyWarned = {};\nexport const warnOnce = (i18n, code, msg, rest) => {\n  if (isString(msg) && alreadyWarned[msg]) return;\n  if (isString(msg)) alreadyWarned[msg] = new Date();\n  warn(i18n, code, msg, rest);\n};\nconst loadedClb = (i18n, cb) => () => {\n  if (i18n.isInitialized) {\n    cb();\n  } else {\n    const initialized = () => {\n      setTimeout(() => {\n        i18n.off('initialized', initialized);\n      }, 0);\n      cb();\n    };\n    i18n.on('initialized', initialized);\n  }\n};\nexport const loadNamespaces = (i18n, ns, cb) => {\n  i18n.loadNamespaces(ns, loadedClb(i18n, cb));\n};\nexport const loadLanguages = (i18n, lng, ns, cb) => {\n  if (isString(ns)) ns = [ns];\n  if (i18n.options.preload && i18n.options.preload.indexOf(lng) > -1) return loadNamespaces(i18n, ns, cb);\n  ns.forEach(n => {\n    if (i18n.options.ns.indexOf(n) < 0) i18n.options.ns.push(n);\n  });\n  i18n.loadLanguages(lng, loadedClb(i18n, cb));\n};\nexport const hasLoadedNamespace = (ns, i18n, options = {}) => {\n  if (!i18n.languages || !i18n.languages.length) {\n    warnOnce(i18n, 'NO_LANGUAGES', 'i18n.languages were undefined or empty', {\n      languages: i18n.languages\n    });\n    return true;\n  }\n  return i18n.hasLoadedNamespace(ns, {\n    lng: options.lng,\n    precheck: (i18nInstance, loadNotPending) => {\n      if (options.bindI18n?.indexOf('languageChanging') > -1 && i18nInstance.services.backendConnector.backend && i18nInstance.isLanguageChangingTo && !loadNotPending(i18nInstance.isLanguageChangingTo, ns)) return false;\n    }\n  });\n};\nexport const getDisplayName = Component => Component.displayName || Component.name || (isString(Component) && Component.length > 0 ? Component : 'Unknown');\nexport const isString = obj => typeof obj === 'string';\nexport const isObject = obj => typeof obj === 'object' && obj !== null;","const matchHtmlEntity = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g;\nconst htmlEntities = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"',\n  '&nbsp;': ' ',\n  '&#160;': ' ',\n  '&copy;': '©',\n  '&#169;': '©',\n  '&reg;': '®',\n  '&#174;': '®',\n  '&hellip;': '…',\n  '&#8230;': '…',\n  '&#x2F;': '/',\n  '&#47;': '/'\n};\nconst unescapeHtmlEntity = m => htmlEntities[m];\nexport const unescape = text => text.replace(matchHtmlEntity, unescapeHtmlEntity);","import { unescape } from './unescape.js';\nlet defaultOptions = {\n  bindI18n: 'languageChanged',\n  bindI18nStore: '',\n  transEmptyNodeValue: '',\n  transSupportBasicHtmlNodes: true,\n  transWrapTextNodes: '',\n  transKeepBasicHtmlNodesFor: ['br', 'strong', 'i', 'p'],\n  useSuspense: true,\n  unescape\n};\nexport const setDefaults = (options = {}) => {\n  defaultOptions = {\n    ...defaultOptions,\n    ...options\n  };\n};\nexport const getDefaults = () => defaultOptions;","let i18nInstance;\nexport const setI18n = instance => {\n  i18nInstance = instance;\n};\nexport const getI18n = () => i18nInstance;","import { Fragment, isValidElement, cloneElement, createElement, Children } from 'react';\nimport HTML from 'html-parse-stringify';\nimport { isObject, isString, warn, warnOnce } from './utils.js';\nimport { getDefaults } from './defaults.js';\nimport { getI18n } from './i18nInstance.js';\nconst hasChildren = (node, checkLength) => {\n  if (!node) return false;\n  const base = node.props?.children ?? node.children;\n  if (checkLength) return base.length > 0;\n  return !!base;\n};\nconst getChildren = node => {\n  if (!node) return [];\n  const children = node.props?.children ?? node.children;\n  return node.props?.i18nIsDynamicList ? getAsArray(children) : children;\n};\nconst hasValidReactChildren = children => Array.isArray(children) && children.every(isValidElement);\nconst getAsArray = data => Array.isArray(data) ? data : [data];\nconst mergeProps = (source, target) => {\n  const newTarget = {\n    ...target\n  };\n  newTarget.props = Object.assign(source.props, target.props);\n  return newTarget;\n};\nexport const nodesToString = (children, i18nOptions, i18n, i18nKey) => {\n  if (!children) return '';\n  let stringNode = '';\n  const childrenArray = getAsArray(children);\n  const keepArray = i18nOptions?.transSupportBasicHtmlNodes ? i18nOptions.transKeepBasicHtmlNodesFor ?? [] : [];\n  childrenArray.forEach((child, childIndex) => {\n    if (isString(child)) {\n      stringNode += `${child}`;\n      return;\n    }\n    if (isValidElement(child)) {\n      const {\n        props,\n        type\n      } = child;\n      const childPropsCount = Object.keys(props).length;\n      const shouldKeepChild = keepArray.indexOf(type) > -1;\n      const childChildren = props.children;\n      if (!childChildren && shouldKeepChild && !childPropsCount) {\n        stringNode += `<${type}/>`;\n        return;\n      }\n      if (!childChildren && (!shouldKeepChild || childPropsCount) || props.i18nIsDynamicList) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n        return;\n      }\n      if (shouldKeepChild && childPropsCount === 1 && isString(childChildren)) {\n        stringNode += `<${type}>${childChildren}</${type}>`;\n        return;\n      }\n      const content = nodesToString(childChildren, i18nOptions, i18n, i18nKey);\n      stringNode += `<${childIndex}>${content}</${childIndex}>`;\n      return;\n    }\n    if (child === null) {\n      warn(i18n, 'TRANS_NULL_VALUE', `Passed in a null value as child`, {\n        i18nKey\n      });\n      return;\n    }\n    if (isObject(child)) {\n      const {\n        format,\n        ...clone\n      } = child;\n      const keys = Object.keys(clone);\n      if (keys.length === 1) {\n        const value = format ? `${keys[0]}, ${format}` : keys[0];\n        stringNode += `{{${value}}}`;\n        return;\n      }\n      warn(i18n, 'TRANS_INVALID_OBJ', `Invalid child - Object should only have keys {{ value, format }} (format is optional).`, {\n        i18nKey,\n        child\n      });\n      return;\n    }\n    warn(i18n, 'TRANS_INVALID_VAR', `Passed in a variable like {number} - pass variables for interpolation as full objects like {{number}}.`, {\n      i18nKey,\n      child\n    });\n  });\n  return stringNode;\n};\nconst renderNodes = (children, knownComponentsMap, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) => {\n  if (targetString === '') return [];\n  const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map(keep => `<${keep}`).join('|')).test(targetString);\n  if (!children && !knownComponentsMap && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];\n  const data = knownComponentsMap ?? {};\n  const getData = childs => {\n    const childrenArray = getAsArray(childs);\n    childrenArray.forEach(child => {\n      if (isString(child)) return;\n      if (hasChildren(child)) getData(getChildren(child));else if (isObject(child) && !isValidElement(child)) Object.assign(data, child);\n    });\n  };\n  getData(children);\n  const ast = HTML.parse(`<0>${targetString}</0>`);\n  const opts = {\n    ...data,\n    ...combinedTOpts\n  };\n  const renderInner = (child, node, rootReactNode) => {\n    const childs = getChildren(child);\n    const mappedChildren = mapAST(childs, node.children, rootReactNode);\n    return hasValidReactChildren(childs) && mappedChildren.length === 0 || child.props?.i18nIsDynamicList ? childs : mappedChildren;\n  };\n  const pushTranslatedJSX = (child, inner, mem, i, isVoid) => {\n    if (child.dummy) {\n      child.children = inner;\n      mem.push(cloneElement(child, {\n        key: i\n      }, isVoid ? undefined : inner));\n    } else {\n      mem.push(...Children.map([child], c => {\n        const props = {\n          ...c.props\n        };\n        delete props.i18nIsDynamicList;\n        return createElement(c.type, {\n          ...props,\n          key: i,\n          ref: c.props.ref ?? c.ref\n        }, isVoid ? null : inner);\n      }));\n    }\n  };\n  const mapAST = (reactNode, astNode, rootReactNode) => {\n    const reactNodes = getAsArray(reactNode);\n    const astNodes = getAsArray(astNode);\n    return astNodes.reduce((mem, node, i) => {\n      const translationContent = node.children?.[0]?.content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n      if (node.type === 'tag') {\n        let tmp = reactNodes[parseInt(node.name, 10)];\n        if (!tmp && knownComponentsMap) tmp = knownComponentsMap[node.name];\n        if (rootReactNode.length === 1 && !tmp) tmp = rootReactNode[0][node.name];\n        if (!tmp) tmp = {};\n        const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n          props: node.attrs\n        }, tmp) : tmp;\n        const isElement = isValidElement(child);\n        const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n        const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && isObject(child) && child.dummy && !isElement;\n        const isKnownComponent = isObject(knownComponentsMap) && Object.hasOwnProperty.call(knownComponentsMap, node.name);\n        if (isString(child)) {\n          const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n          mem.push(value);\n        } else if (hasChildren(child) || isValidTranslationWithChildren) {\n          const inner = renderInner(child, node, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (isEmptyTransWithHTML) {\n          const inner = mapAST(reactNodes, node.children, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (isKnownComponent) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }));\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }, inner));\n            }\n          } else if (node.voidElement) {\n            mem.push(`<${node.name} />`);\n          } else {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            mem.push(`<${node.name}>${inner}</${node.name}>`);\n          }\n        } else if (isObject(child) && !isElement) {\n          const content = node.children[0] ? translationContent : null;\n          if (content) mem.push(content);\n        } else {\n          pushTranslatedJSX(child, translationContent, mem, i, node.children.length !== 1 || !translationContent);\n        }\n      } else if (node.type === 'text') {\n        const wrapTextNodes = i18nOptions.transWrapTextNodes;\n        const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n        if (wrapTextNodes) {\n          mem.push(createElement(wrapTextNodes, {\n            key: `${node.name}-${i}`\n          }, content));\n        } else {\n          mem.push(content);\n        }\n      }\n      return mem;\n    }, []);\n  };\n  const result = mapAST([{\n    dummy: true,\n    children: children || []\n  }], ast, getAsArray(children || []));\n  return getChildren(result[0]);\n};\nconst fixComponentProps = (component, index, translation) => {\n  const componentKey = component.key || index;\n  const comp = cloneElement(component, {\n    key: componentKey\n  });\n  if (!comp.props || !comp.props.children || translation.indexOf(`${index}/>`) < 0 && translation.indexOf(`${index} />`) < 0) {\n    return comp;\n  }\n  function Componentized() {\n    return createElement(Fragment, null, comp);\n  }\n  return createElement(Componentized, {\n    key: componentKey\n  });\n};\nconst generateArrayComponents = (components, translation) => components.map((c, index) => fixComponentProps(c, index, translation));\nconst generateObjectComponents = (components, translation) => {\n  const componentMap = {};\n  Object.keys(components).forEach(c => {\n    Object.assign(componentMap, {\n      [c]: fixComponentProps(components[c], c, translation)\n    });\n  });\n  return componentMap;\n};\nconst generateComponents = (components, translation, i18n, i18nKey) => {\n  if (!components) return null;\n  if (Array.isArray(components)) {\n    return generateArrayComponents(components, translation);\n  }\n  if (isObject(components)) {\n    return generateObjectComponents(components, translation);\n  }\n  warnOnce(i18n, 'TRANS_INVALID_COMPONENTS', `<Trans /> \"components\" prop expects an object or array`, {\n    i18nKey\n  });\n  return null;\n};\nconst isComponentsMap = object => {\n  if (!isObject(object)) return false;\n  if (Array.isArray(object)) return false;\n  return Object.keys(object).reduce((acc, key) => acc && Number.isNaN(Number.parseFloat(key)), true);\n};\nexport function Trans({\n  children,\n  count,\n  parent,\n  i18nKey,\n  context,\n  tOptions = {},\n  values,\n  defaults,\n  components,\n  ns,\n  i18n: i18nFromProps,\n  t: tFromProps,\n  shouldUnescape,\n  ...additionalProps\n}) {\n  const i18n = i18nFromProps || getI18n();\n  if (!i18n) {\n    warnOnce(i18n, 'NO_I18NEXT_INSTANCE', `Trans: You need to pass in an i18next instance using i18nextReactModule`, {\n      i18nKey\n    });\n    return children;\n  }\n  const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n  const reactI18nextOptions = {\n    ...getDefaults(),\n    ...i18n.options?.react\n  };\n  let namespaces = ns || t.ns || i18n.options?.defaultNS;\n  namespaces = isString(namespaces) ? [namespaces] : namespaces || ['translation'];\n  const nodeAsString = nodesToString(children, reactI18nextOptions, i18n, i18nKey);\n  const defaultValue = defaults || nodeAsString || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n  const {\n    hashTransKey\n  } = reactI18nextOptions;\n  const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);\n  if (i18n.options?.interpolation?.defaultVariables) {\n    values = values && Object.keys(values).length > 0 ? {\n      ...values,\n      ...i18n.options.interpolation.defaultVariables\n    } : {\n      ...i18n.options.interpolation.defaultVariables\n    };\n  }\n  const interpolationOverride = values || count !== undefined && !i18n.options?.interpolation?.alwaysFormat || !children ? tOptions.interpolation : {\n    interpolation: {\n      ...tOptions.interpolation,\n      prefix: '#$?',\n      suffix: '?$#'\n    }\n  };\n  const combinedTOpts = {\n    ...tOptions,\n    context: context || tOptions.context,\n    count,\n    ...values,\n    ...interpolationOverride,\n    defaultValue,\n    ns: namespaces\n  };\n  const translation = key ? t(key, combinedTOpts) : defaultValue;\n  const generatedComponents = generateComponents(components, translation, i18n, i18nKey);\n  let indexedChildren = generatedComponents || children;\n  let componentsMap = null;\n  if (isComponentsMap(generatedComponents)) {\n    componentsMap = generatedComponents;\n    indexedChildren = children;\n  }\n  const content = renderNodes(indexedChildren, componentsMap, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n  const useAsParent = parent ?? reactI18nextOptions.defaultTransParent;\n  return useAsParent ? createElement(useAsParent, additionalProps, content) : content;\n}","import { setDefaults } from './defaults.js';\nimport { setI18n } from './i18nInstance.js';\nexport const initReactI18next = {\n  type: '3rdParty',\n  init(instance) {\n    setDefaults(instance.options.react);\n    setI18n(instance);\n  }\n};","import { createContext } from 'react';\nimport { getDefaults, setDefaults } from './defaults.js';\nimport { getI18n, setI18n } from './i18nInstance.js';\nimport { initReactI18next } from './initReactI18next.js';\nexport { getDefaults, setDefaults, getI18n, setI18n, initReactI18next };\nexport const I18nContext = createContext();\nexport class ReportNamespaces {\n  constructor() {\n    this.usedNamespaces = {};\n  }\n  addUsedNamespaces(namespaces) {\n    namespaces.forEach(ns => {\n      if (!this.usedNamespaces[ns]) this.usedNamespaces[ns] = true;\n    });\n  }\n  getUsedNamespaces() {\n    return Object.keys(this.usedNamespaces);\n  }\n}\nexport const composeInitialProps = ForComponent => async ctx => {\n  const componentsInitialProps = (await ForComponent.getInitialProps?.(ctx)) ?? {};\n  const i18nInitialProps = getInitialProps();\n  return {\n    ...componentsInitialProps,\n    ...i18nInitialProps\n  };\n};\nexport const getInitialProps = () => {\n  const i18n = getI18n();\n  const namespaces = i18n.reportNamespaces?.getUsedNamespaces() ?? [];\n  const ret = {};\n  const initialI18nStore = {};\n  i18n.languages.forEach(l => {\n    initialI18nStore[l] = {};\n    namespaces.forEach(ns => {\n      initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};\n    });\n  });\n  ret.initialI18nStore = initialI18nStore;\n  ret.initialLanguage = i18n.language;\n  return ret;\n};","import { useContext } from 'react';\nimport { nodesToString, Trans as TransWithoutContext } from './TransWithoutContext.js';\nimport { getI18n, I18nContext } from './context.js';\nexport { nodesToString };\nexport function Trans({\n  children,\n  count,\n  parent,\n  i18nKey,\n  context,\n  tOptions = {},\n  values,\n  defaults,\n  components,\n  ns,\n  i18n: i18nFromProps,\n  t: tFromProps,\n  shouldUnescape,\n  ...additionalProps\n}) {\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = useContext(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  const t = tFromProps || i18n?.t.bind(i18n);\n  return TransWithoutContext({\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions,\n    values,\n    defaults,\n    components,\n    ns: ns || t?.ns || defaultNSFromContext || i18n?.options?.defaultNS,\n    i18n,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  });\n}","import { jsx } from 'react/jsx-runtime';\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { Trans as Trans$1, initReactI18next, getI18n, setDefaults, setI18n } from 'react-i18next';\nimport { PSEUDO_LOCALE, DEFAULT_LANGUAGE } from './constants.mjs';\nimport { initRegionalFormat } from './dates.mjs';\nimport { LANGUAGES } from './languages.mjs';\n\n\"use strict\";\nlet tFunc;\nlet transComponent;\nconst VALID_LANGUAGES = [\n  ...LANGUAGES,\n  {\n    name: \"Pseudo\",\n    code: PSEUDO_LOCALE\n  }\n];\nfunction initTFuncAndTransComponent({ id, ns } = {}) {\n  if (id) {\n    tFunc = getI18nInstance().getFixedT(null, id);\n    transComponent = (props) => /* @__PURE__ */ jsx(Trans$1, { shouldUnescape: true, ns: id, ...props });\n    return;\n  }\n  tFunc = getI18nInstance().t;\n  transComponent = (props) => /* @__PURE__ */ jsx(Trans$1, { shouldUnescape: true, ns, ...props });\n}\nasync function loadNamespacedResources(namespace, language, loaders) {\n  if (!(loaders == null ? void 0 : loaders.length)) {\n    return;\n  }\n  const resolvedLanguage = language === PSEUDO_LOCALE ? DEFAULT_LANGUAGE : language;\n  return Promise.all(\n    loaders.map(async (loader) => {\n      try {\n        const resources = await loader(resolvedLanguage);\n        addResourceBundle(resolvedLanguage, namespace, resources);\n      } catch (error) {\n        console.error(`Error loading resources for namespace ${namespace} and language: ${resolvedLanguage}`, error);\n      }\n    })\n  );\n}\nfunction initDefaultI18nInstance() {\n  var _a;\n  if (((_a = getI18nInstance().options) == null ? void 0 : _a.resources) && typeof getI18nInstance().options.resources === \"object\") {\n    return;\n  }\n  const initPromise = getI18nInstance().use(initReactI18next).init({\n    resources: {},\n    returnEmptyString: false,\n    lng: DEFAULT_LANGUAGE\n    // this should be the locale of the phrases in our source JSX\n  });\n  initTFuncAndTransComponent();\n  return initPromise;\n}\nfunction initDefaultReactI18nInstance() {\n  var _a, _b;\n  if ((_b = (_a = getI18n()) == null ? void 0 : _a.options) == null ? void 0 : _b.react) {\n    return;\n  }\n  const options = {};\n  setDefaults(options);\n  setI18n(getI18nInstance());\n}\nasync function initPluginTranslations(id, loaders) {\n  await initDefaultI18nInstance();\n  initDefaultReactI18nInstance();\n  const language = getResolvedLanguage();\n  initTFuncAndTransComponent({ id });\n  await loadNamespacedResources(id, language, loaders);\n  return { language };\n}\nfunction getI18nInstance() {\n  const instance = i18n;\n  if (instance && instance.default) {\n    return instance.default;\n  }\n  return instance;\n}\nasync function initTranslations({\n  ns,\n  language = DEFAULT_LANGUAGE,\n  module\n}) {\n  var _a, _b;\n  const options = {\n    // We don't bundle any translations, we load them async\n    partialBundledLanguages: true,\n    resources: {},\n    // If translations are empty strings (no translation), fall back to the default value in source code\n    returnEmptyString: false,\n    // Required to ensure that `resolvedLanguage` is set property when an invalid language is passed (such as through 'detect')\n    supportedLngs: VALID_LANGUAGES.map((lang) => lang.code),\n    fallbackLng: DEFAULT_LANGUAGE,\n    ns,\n    postProcess: [\n      // Add pseudo processing even if we aren't necessarily going to use it\n      PSEUDO_LOCALE\n    ]\n  };\n  if (language === \"detect\") {\n    getI18nInstance().use(LanguageDetector);\n    const detection = { order: [\"navigator\"], caches: [] };\n    options.detection = detection;\n  } else {\n    options.lng = (_b = (_a = VALID_LANGUAGES.find((lang) => lang.code === language)) == null ? void 0 : _a.code) != null ? _b : void 0;\n  }\n  if (module) {\n    getI18nInstance().use(module).use(initReactI18next);\n  } else {\n    getI18nInstance().use(initReactI18next);\n  }\n  if (language === PSEUDO_LOCALE) {\n    const { default: Pseudo } = await import('i18next-pseudo');\n    getI18nInstance().use(\n      new Pseudo({\n        languageToPseudo: PSEUDO_LOCALE,\n        enabled: true,\n        wrapped: true\n      })\n    );\n  }\n  await getI18nInstance().init(options);\n  initTFuncAndTransComponent({ ns });\n  return {\n    language: getResolvedLanguage()\n  };\n}\nfunction getLanguage() {\n  var _a;\n  return ((_a = getI18nInstance()) == null ? void 0 : _a.language) || DEFAULT_LANGUAGE;\n}\nfunction getResolvedLanguage() {\n  var _a;\n  return ((_a = getI18nInstance()) == null ? void 0 : _a.resolvedLanguage) || DEFAULT_LANGUAGE;\n}\nfunction getNamespaces() {\n  var _a;\n  return (_a = getI18nInstance()) == null ? void 0 : _a.options.ns;\n}\nasync function changeLanguage(language) {\n  var _a, _b;\n  const validLanguage = (_b = (_a = VALID_LANGUAGES.find((lang) => lang.code === language)) == null ? void 0 : _a.code) != null ? _b : DEFAULT_LANGUAGE;\n  await getI18nInstance().changeLanguage(validLanguage);\n}\nasync function initializeI18n({ language, ns, module }, regionalFormat) {\n  initRegionalFormat(regionalFormat);\n  return initTranslations({ language, ns, module });\n}\nfunction addResourceBundle(language, namespace, resources) {\n  getI18nInstance().addResourceBundle(language, namespace, resources, true, false);\n}\nconst t = (id, defaultMessage, values) => {\n  initDefaultI18nInstance();\n  if (!tFunc) {\n    if (process.env.NODE_ENV !== \"test\") {\n      console.warn(\n        \"t() was called before i18n was initialized. This is probably caused by calling t() in the root module scope, instead of lazily on render\"\n      );\n    }\n    if (process.env.NODE_ENV === \"development\") {\n      throw new Error(\"t() was called before i18n was initialized\");\n    }\n    tFunc = getI18nInstance().t;\n  }\n  return tFunc(id, defaultMessage, values);\n};\nfunction Trans(props) {\n  initDefaultI18nInstance();\n  const Component = transComponent != null ? transComponent : Trans$1;\n  return /* @__PURE__ */ jsx(Component, { shouldUnescape: true, ...props });\n}\n\nexport { Trans, addResourceBundle, changeLanguage, getI18nInstance, getLanguage, getNamespaces, getResolvedLanguage, initDefaultI18nInstance, initDefaultReactI18nInstance, initPluginTranslations, initializeI18n, loadNamespacedResources, t };\n//# sourceMappingURL=i18n.mjs.map\n","import { ENGLISH_US, FRENCH_FRANCE, SPANISH_SPAIN, GERMAN_GERMANY, CHINESE_SIMPLIFIED, BRAZILIAN_PORTUGUESE, CHINESE_TRADITIONAL, ITALIAN_ITALY, JAPANESE_JAPAN, INDONESIAN_INDONESIA, KOREAN_KOREA, RUSSIAN_RUSSIA, CZECH_CZECHIA, DUTCH_NETHERLANDS, HUNGARIAN_HUNGARY, PORTUGUESE_PORTUGAL, POLISH_POLAND, SWEDISH_SWEDEN, TURKISH_TURKEY } from './constants.mjs';\n\n\"use strict\";\nconst LANGUAGES = [\n  { code: ENGLISH_US, name: \"English\" },\n  { code: FRENCH_FRANCE, name: \"Fran\\xE7ais\" },\n  { code: SPANISH_SPAIN, name: \"Espa\\xF1ol\" },\n  { code: GERMAN_GERMANY, name: \"Deutsch\" },\n  { code: CHINESE_SIMPLIFIED, name: \"\\u4E2D\\u6587\\uFF08\\u7B80\\u4F53\\uFF09\" },\n  { code: BRAZILIAN_PORTUGUESE, name: \"Portugu\\xEAs Brasileiro\" },\n  { code: CHINESE_TRADITIONAL, name: \"\\u4E2D\\u6587\\uFF08\\u7E41\\u9AD4\\uFF09\" },\n  { code: ITALIAN_ITALY, name: \"Italiano\" },\n  { code: JAPANESE_JAPAN, name: \"\\u65E5\\u672C\\u8A9E\" },\n  { code: INDONESIAN_INDONESIA, name: \"Bahasa Indonesia\" },\n  { code: KOREAN_KOREA, name: \"\\uD55C\\uAD6D\\uC5B4\" },\n  { code: RUSSIAN_RUSSIA, name: \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\" },\n  { code: CZECH_CZECHIA, name: \"\\u010Ce\\u0161tina\" },\n  { code: DUTCH_NETHERLANDS, name: \"Nederlands\" },\n  { code: HUNGARIAN_HUNGARY, name: \"Magyar\" },\n  { code: PORTUGUESE_PORTUGAL, name: \"Portugu\\xEAs\" },\n  { code: POLISH_POLAND, name: \"Polski\" },\n  { code: SWEDISH_SWEDEN, name: \"Svenska\" },\n  { code: TURKISH_TURKEY, name: \"T\\xFCrk\\xE7e\" }\n];\n\nexport { LANGUAGES };\n//# sourceMappingURL=languages.mjs.map\n","/**\nThe default maximum length of a `TreeBuffer` node.\n*/\nconst DefaultBufferLength = 1024;\nlet nextPropID = 0;\nclass Range {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\n/**\nEach [node type](#common.NodeType) or [individual tree](#common.Tree)\ncan have metadata associated with it in props. Instances of this\nclass represent prop names.\n*/\nclass NodeProp {\n    /**\n    Create a new node prop type.\n    */\n    constructor(config = {}) {\n        this.id = nextPropID++;\n        this.perNode = !!config.perNode;\n        this.deserialize = config.deserialize || (() => {\n            throw new Error(\"This node type doesn't define a deserialize function\");\n        });\n    }\n    /**\n    This is meant to be used with\n    [`NodeSet.extend`](#common.NodeSet.extend) or\n    [`LRParser.configure`](#lr.ParserConfig.props) to compute\n    prop values for each node type in the set. Takes a [match\n    object](#common.NodeType^match) or function that returns undefined\n    if the node type doesn't get this prop, and the prop's value if\n    it does.\n    */\n    add(match) {\n        if (this.perNode)\n            throw new RangeError(\"Can't add per-node props to node types\");\n        if (typeof match != \"function\")\n            match = NodeType.match(match);\n        return (type) => {\n            let result = match(type);\n            return result === undefined ? null : [this, result];\n        };\n    }\n}\n/**\nProp that is used to describe matching delimiters. For opening\ndelimiters, this holds an array of node names (written as a\nspace-separated string when declaring this prop in a grammar)\nfor the node types of closing delimiters that match it.\n*/\nNodeProp.closedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nThe inverse of [`closedBy`](#common.NodeProp^closedBy). This is\nattached to closing delimiters, holding an array of node names\nof types of matching opening delimiters.\n*/\nNodeProp.openedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nUsed to assign node types to groups (for example, all node\ntypes that represent an expression could be tagged with an\n`\"Expression\"` group).\n*/\nNodeProp.group = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nAttached to nodes to indicate these should be\n[displayed](https://codemirror.net/docs/ref/#language.syntaxTree)\nin a bidirectional text isolate, so that direction-neutral\ncharacters on their sides don't incorrectly get associated with\nsurrounding text. You'll generally want to set this for nodes\nthat contain arbitrary text, like strings and comments, and for\nnodes that appear _inside_ arbitrary text, like HTML tags. When\nnot given a value, in a grammar declaration, defaults to\n`\"auto\"`.\n*/\nNodeProp.isolate = new NodeProp({ deserialize: value => {\n        if (value && value != \"rtl\" && value != \"ltr\" && value != \"auto\")\n            throw new RangeError(\"Invalid value for isolate: \" + value);\n        return value || \"auto\";\n    } });\n/**\nThe hash of the [context](#lr.ContextTracker.constructor)\nthat the node was parsed in, if any. Used to limit reuse of\ncontextual nodes.\n*/\nNodeProp.contextHash = new NodeProp({ perNode: true });\n/**\nThe distance beyond the end of the node that the tokenizer\nlooked ahead for any of the tokens inside the node. (The LR\nparser only stores this when it is larger than 25, for\nefficiency reasons.)\n*/\nNodeProp.lookAhead = new NodeProp({ perNode: true });\n/**\nThis per-node prop is used to replace a given node, or part of a\nnode, with another tree. This is useful to include trees from\ndifferent languages in mixed-language parsers.\n*/\nNodeProp.mounted = new NodeProp({ perNode: true });\n/**\nA mounted tree, which can be [stored](#common.NodeProp^mounted) on\na tree node to indicate that parts of its content are\nrepresented by another tree.\n*/\nclass MountedTree {\n    constructor(\n    /**\n    The inner tree.\n    */\n    tree, \n    /**\n    If this is null, this tree replaces the entire node (it will\n    be included in the regular iteration instead of its host\n    node). If not, only the given ranges are considered to be\n    covered by this tree. This is used for trees that are mixed in\n    a way that isn't strictly hierarchical. Such mounted trees are\n    only entered by [`resolveInner`](#common.Tree.resolveInner)\n    and [`enter`](#common.SyntaxNode.enter).\n    */\n    overlay, \n    /**\n    The parser used to create this subtree.\n    */\n    parser) {\n        this.tree = tree;\n        this.overlay = overlay;\n        this.parser = parser;\n    }\n    /**\n    @internal\n    */\n    static get(tree) {\n        return tree && tree.props && tree.props[NodeProp.mounted.id];\n    }\n}\nconst noProps = Object.create(null);\n/**\nEach node in a syntax tree has a node type associated with it.\n*/\nclass NodeType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name of the node type. Not necessarily unique, but if the\n    grammar was written properly, different node types with the\n    same name within a node set should play the same semantic\n    role.\n    */\n    name, \n    /**\n    @internal\n    */\n    props, \n    /**\n    The id of this node in its set. Corresponds to the term ids\n    used in the parser.\n    */\n    id, \n    /**\n    @internal\n    */\n    flags = 0) {\n        this.name = name;\n        this.props = props;\n        this.id = id;\n        this.flags = flags;\n    }\n    /**\n    Define a node type.\n    */\n    static define(spec) {\n        let props = spec.props && spec.props.length ? Object.create(null) : noProps;\n        let flags = (spec.top ? 1 /* NodeFlag.Top */ : 0) | (spec.skipped ? 2 /* NodeFlag.Skipped */ : 0) |\n            (spec.error ? 4 /* NodeFlag.Error */ : 0) | (spec.name == null ? 8 /* NodeFlag.Anonymous */ : 0);\n        let type = new NodeType(spec.name || \"\", props, spec.id, flags);\n        if (spec.props)\n            for (let src of spec.props) {\n                if (!Array.isArray(src))\n                    src = src(type);\n                if (src) {\n                    if (src[0].perNode)\n                        throw new RangeError(\"Can't store a per-node prop on a node type\");\n                    props[src[0].id] = src[1];\n                }\n            }\n        return type;\n    }\n    /**\n    Retrieves a node prop for this type. Will return `undefined` if\n    the prop isn't present on this node.\n    */\n    prop(prop) { return this.props[prop.id]; }\n    /**\n    True when this is the top node of a grammar.\n    */\n    get isTop() { return (this.flags & 1 /* NodeFlag.Top */) > 0; }\n    /**\n    True when this node is produced by a skip rule.\n    */\n    get isSkipped() { return (this.flags & 2 /* NodeFlag.Skipped */) > 0; }\n    /**\n    Indicates whether this is an error node.\n    */\n    get isError() { return (this.flags & 4 /* NodeFlag.Error */) > 0; }\n    /**\n    When true, this node type doesn't correspond to a user-declared\n    named node, for example because it is used to cache repetition.\n    */\n    get isAnonymous() { return (this.flags & 8 /* NodeFlag.Anonymous */) > 0; }\n    /**\n    Returns true when this node's name or one of its\n    [groups](#common.NodeProp^group) matches the given string.\n    */\n    is(name) {\n        if (typeof name == 'string') {\n            if (this.name == name)\n                return true;\n            let group = this.prop(NodeProp.group);\n            return group ? group.indexOf(name) > -1 : false;\n        }\n        return this.id == name;\n    }\n    /**\n    Create a function from node types to arbitrary values by\n    specifying an object whose property names are node or\n    [group](#common.NodeProp^group) names. Often useful with\n    [`NodeProp.add`](#common.NodeProp.add). You can put multiple\n    names, separated by spaces, in a single property name to map\n    multiple node names to a single value.\n    */\n    static match(map) {\n        let direct = Object.create(null);\n        for (let prop in map)\n            for (let name of prop.split(\" \"))\n                direct[name] = map[prop];\n        return (node) => {\n            for (let groups = node.prop(NodeProp.group), i = -1; i < (groups ? groups.length : 0); i++) {\n                let found = direct[i < 0 ? node.name : groups[i]];\n                if (found)\n                    return found;\n            }\n        };\n    }\n}\n/**\nAn empty dummy node type to use when no actual type is available.\n*/\nNodeType.none = new NodeType(\"\", Object.create(null), 0, 8 /* NodeFlag.Anonymous */);\n/**\nA node set holds a collection of node types. It is used to\ncompactly represent trees by storing their type ids, rather than a\nfull pointer to the type object, in a numeric array. Each parser\n[has](#lr.LRParser.nodeSet) a node set, and [tree\nbuffers](#common.TreeBuffer) can only store collections of nodes\nfrom the same set. A set can have a maximum of 2**16 (65536) node\ntypes in it, so that the ids fit into 16-bit typed array slots.\n*/\nclass NodeSet {\n    /**\n    Create a set with the given types. The `id` property of each\n    type should correspond to its position within the array.\n    */\n    constructor(\n    /**\n    The node types in this set, by id.\n    */\n    types) {\n        this.types = types;\n        for (let i = 0; i < types.length; i++)\n            if (types[i].id != i)\n                throw new RangeError(\"Node type ids should correspond to array positions when creating a node set\");\n    }\n    /**\n    Create a copy of this set with some node properties added. The\n    arguments to this method can be created with\n    [`NodeProp.add`](#common.NodeProp.add).\n    */\n    extend(...props) {\n        let newTypes = [];\n        for (let type of this.types) {\n            let newProps = null;\n            for (let source of props) {\n                let add = source(type);\n                if (add) {\n                    if (!newProps)\n                        newProps = Object.assign({}, type.props);\n                    newProps[add[0].id] = add[1];\n                }\n            }\n            newTypes.push(newProps ? new NodeType(type.name, newProps, type.id, type.flags) : type);\n        }\n        return new NodeSet(newTypes);\n    }\n}\nconst CachedNode = new WeakMap(), CachedInnerNode = new WeakMap();\n/**\nOptions that control iteration. Can be combined with the `|`\noperator to enable multiple ones.\n*/\nvar IterMode;\n(function (IterMode) {\n    /**\n    When enabled, iteration will only visit [`Tree`](#common.Tree)\n    objects, not nodes packed into\n    [`TreeBuffer`](#common.TreeBuffer)s.\n    */\n    IterMode[IterMode[\"ExcludeBuffers\"] = 1] = \"ExcludeBuffers\";\n    /**\n    Enable this to make iteration include anonymous nodes (such as\n    the nodes that wrap repeated grammar constructs into a balanced\n    tree).\n    */\n    IterMode[IterMode[\"IncludeAnonymous\"] = 2] = \"IncludeAnonymous\";\n    /**\n    By default, regular [mounted](#common.NodeProp^mounted) nodes\n    replace their base node in iteration. Enable this to ignore them\n    instead.\n    */\n    IterMode[IterMode[\"IgnoreMounts\"] = 4] = \"IgnoreMounts\";\n    /**\n    This option only applies in\n    [`enter`](#common.SyntaxNode.enter)-style methods. It tells the\n    library to not enter mounted overlays if one covers the given\n    position.\n    */\n    IterMode[IterMode[\"IgnoreOverlays\"] = 8] = \"IgnoreOverlays\";\n})(IterMode || (IterMode = {}));\n/**\nA piece of syntax tree. There are two ways to approach these\ntrees: the way they are actually stored in memory, and the\nconvenient way.\n\nSyntax trees are stored as a tree of `Tree` and `TreeBuffer`\nobjects. By packing detail information into `TreeBuffer` leaf\nnodes, the representation is made a lot more memory-efficient.\n\nHowever, when you want to actually work with tree nodes, this\nrepresentation is very awkward, so most client code will want to\nuse the [`TreeCursor`](#common.TreeCursor) or\n[`SyntaxNode`](#common.SyntaxNode) interface instead, which provides\na view on some part of this data structure, and can be used to\nmove around to adjacent nodes.\n*/\nclass Tree {\n    /**\n    Construct a new tree. See also [`Tree.build`](#common.Tree^build).\n    */\n    constructor(\n    /**\n    The type of the top node.\n    */\n    type, \n    /**\n    This node's child nodes.\n    */\n    children, \n    /**\n    The positions (offsets relative to the start of this tree) of\n    the children.\n    */\n    positions, \n    /**\n    The total length of this tree\n    */\n    length, \n    /**\n    Per-node [node props](#common.NodeProp) to associate with this node.\n    */\n    props) {\n        this.type = type;\n        this.children = children;\n        this.positions = positions;\n        this.length = length;\n        /**\n        @internal\n        */\n        this.props = null;\n        if (props && props.length) {\n            this.props = Object.create(null);\n            for (let [prop, value] of props)\n                this.props[typeof prop == \"number\" ? prop : prop.id] = value;\n        }\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let mounted = MountedTree.get(this);\n        if (mounted && !mounted.overlay)\n            return mounted.tree.toString();\n        let children = \"\";\n        for (let ch of this.children) {\n            let str = ch.toString();\n            if (str) {\n                if (children)\n                    children += \",\";\n                children += str;\n            }\n        }\n        return !this.type.name ? children :\n            (/\\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) +\n                (children.length ? \"(\" + children + \")\" : \"\");\n    }\n    /**\n    Get a [tree cursor](#common.TreeCursor) positioned at the top of\n    the tree. Mode can be used to [control](#common.IterMode) which\n    nodes the cursor visits.\n    */\n    cursor(mode = 0) {\n        return new TreeCursor(this.topNode, mode);\n    }\n    /**\n    Get a [tree cursor](#common.TreeCursor) pointing into this tree\n    at the given position and side (see\n    [`moveTo`](#common.TreeCursor.moveTo).\n    */\n    cursorAt(pos, side = 0, mode = 0) {\n        let scope = CachedNode.get(this) || this.topNode;\n        let cursor = new TreeCursor(scope);\n        cursor.moveTo(pos, side);\n        CachedNode.set(this, cursor._tree);\n        return cursor;\n    }\n    /**\n    Get a [syntax node](#common.SyntaxNode) object for the top of the\n    tree.\n    */\n    get topNode() {\n        return new TreeNode(this, 0, 0, null);\n    }\n    /**\n    Get the [syntax node](#common.SyntaxNode) at the given position.\n    If `side` is -1, this will move into nodes that end at the\n    position. If 1, it'll move into nodes that start at the\n    position. With 0, it'll only enter nodes that cover the position\n    from both sides.\n    \n    Note that this will not enter\n    [overlays](#common.MountedTree.overlay), and you often want\n    [`resolveInner`](#common.Tree.resolveInner) instead.\n    */\n    resolve(pos, side = 0) {\n        let node = resolveNode(CachedNode.get(this) || this.topNode, pos, side, false);\n        CachedNode.set(this, node);\n        return node;\n    }\n    /**\n    Like [`resolve`](#common.Tree.resolve), but will enter\n    [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node\n    pointing into the innermost overlaid tree at the given position\n    (with parent links going through all parent structure, including\n    the host trees).\n    */\n    resolveInner(pos, side = 0) {\n        let node = resolveNode(CachedInnerNode.get(this) || this.topNode, pos, side, true);\n        CachedInnerNode.set(this, node);\n        return node;\n    }\n    /**\n    In some situations, it can be useful to iterate through all\n    nodes around a position, including those in overlays that don't\n    directly cover the position. This method gives you an iterator\n    that will produce all nodes, from small to big, around the given\n    position.\n    */\n    resolveStack(pos, side = 0) {\n        return stackIterator(this, pos, side);\n    }\n    /**\n    Iterate over the tree and its children, calling `enter` for any\n    node that touches the `from`/`to` region (if given) before\n    running over such a node's children, and `leave` (if given) when\n    leaving the node. When `enter` returns `false`, that node will\n    not have its children iterated over (or `leave` called).\n    */\n    iterate(spec) {\n        let { enter, leave, from = 0, to = this.length } = spec;\n        let mode = spec.mode || 0, anon = (mode & IterMode.IncludeAnonymous) > 0;\n        for (let c = this.cursor(mode | IterMode.IncludeAnonymous);;) {\n            let entered = false;\n            if (c.from <= to && c.to >= from && (!anon && c.type.isAnonymous || enter(c) !== false)) {\n                if (c.firstChild())\n                    continue;\n                entered = true;\n            }\n            for (;;) {\n                if (entered && leave && (anon || !c.type.isAnonymous))\n                    leave(c);\n                if (c.nextSibling())\n                    break;\n                if (!c.parent())\n                    return;\n                entered = true;\n            }\n        }\n    }\n    /**\n    Get the value of the given [node prop](#common.NodeProp) for this\n    node. Works with both per-node and per-type props.\n    */\n    prop(prop) {\n        return !prop.perNode ? this.type.prop(prop) : this.props ? this.props[prop.id] : undefined;\n    }\n    /**\n    Returns the node's [per-node props](#common.NodeProp.perNode) in a\n    format that can be passed to the [`Tree`](#common.Tree)\n    constructor.\n    */\n    get propValues() {\n        let result = [];\n        if (this.props)\n            for (let id in this.props)\n                result.push([+id, this.props[id]]);\n        return result;\n    }\n    /**\n    Balance the direct children of this tree, producing a copy of\n    which may have children grouped into subtrees with type\n    [`NodeType.none`](#common.NodeType^none).\n    */\n    balance(config = {}) {\n        return this.children.length <= 8 /* Balance.BranchFactor */ ? this :\n            balanceRange(NodeType.none, this.children, this.positions, 0, this.children.length, 0, this.length, (children, positions, length) => new Tree(this.type, children, positions, length, this.propValues), config.makeTree || ((children, positions, length) => new Tree(NodeType.none, children, positions, length)));\n    }\n    /**\n    Build a tree from a postfix-ordered buffer of node information,\n    or a cursor over such a buffer.\n    */\n    static build(data) { return buildTree(data); }\n}\n/**\nThe empty tree\n*/\nTree.empty = new Tree(NodeType.none, [], [], 0);\nclass FlatBufferCursor {\n    constructor(buffer, index) {\n        this.buffer = buffer;\n        this.index = index;\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    get pos() { return this.index; }\n    next() { this.index -= 4; }\n    fork() { return new FlatBufferCursor(this.buffer, this.index); }\n}\n/**\nTree buffers contain (type, start, end, endIndex) quads for each\nnode. In such a buffer, nodes are stored in prefix order (parents\nbefore children, with the endIndex of the parent indicating which\nchildren belong to it).\n*/\nclass TreeBuffer {\n    /**\n    Create a tree buffer.\n    */\n    constructor(\n    /**\n    The buffer's content.\n    */\n    buffer, \n    /**\n    The total length of the group of nodes in the buffer.\n    */\n    length, \n    /**\n    The node set used in this buffer.\n    */\n    set) {\n        this.buffer = buffer;\n        this.length = length;\n        this.set = set;\n    }\n    /**\n    @internal\n    */\n    get type() { return NodeType.none; }\n    /**\n    @internal\n    */\n    toString() {\n        let result = [];\n        for (let index = 0; index < this.buffer.length;) {\n            result.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result.join(\",\");\n    }\n    /**\n    @internal\n    */\n    childString(index) {\n        let id = this.buffer[index], endIndex = this.buffer[index + 3];\n        let type = this.set.types[id], result = type.name;\n        if (/\\W/.test(result) && !type.isError)\n            result = JSON.stringify(result);\n        index += 4;\n        if (endIndex == index)\n            return result;\n        let children = [];\n        while (index < endIndex) {\n            children.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result + \"(\" + children.join(\",\") + \")\";\n    }\n    /**\n    @internal\n    */\n    findChild(startIndex, endIndex, dir, pos, side) {\n        let { buffer } = this, pick = -1;\n        for (let i = startIndex; i != endIndex; i = buffer[i + 3]) {\n            if (checkSide(side, pos, buffer[i + 1], buffer[i + 2])) {\n                pick = i;\n                if (dir > 0)\n                    break;\n            }\n        }\n        return pick;\n    }\n    /**\n    @internal\n    */\n    slice(startI, endI, from) {\n        let b = this.buffer;\n        let copy = new Uint16Array(endI - startI), len = 0;\n        for (let i = startI, j = 0; i < endI;) {\n            copy[j++] = b[i++];\n            copy[j++] = b[i++] - from;\n            let to = copy[j++] = b[i++] - from;\n            copy[j++] = b[i++] - startI;\n            len = Math.max(len, to);\n        }\n        return new TreeBuffer(copy, len, this.set);\n    }\n}\nfunction checkSide(side, pos, from, to) {\n    switch (side) {\n        case -2 /* Side.Before */: return from < pos;\n        case -1 /* Side.AtOrBefore */: return to >= pos && from < pos;\n        case 0 /* Side.Around */: return from < pos && to > pos;\n        case 1 /* Side.AtOrAfter */: return from <= pos && to > pos;\n        case 2 /* Side.After */: return to > pos;\n        case 4 /* Side.DontCare */: return true;\n    }\n}\nfunction resolveNode(node, pos, side, overlays) {\n    var _a;\n    // Move up to a node that actually holds the position, if possible\n    while (node.from == node.to ||\n        (side < 1 ? node.from >= pos : node.from > pos) ||\n        (side > -1 ? node.to <= pos : node.to < pos)) {\n        let parent = !overlays && node instanceof TreeNode && node.index < 0 ? null : node.parent;\n        if (!parent)\n            return node;\n        node = parent;\n    }\n    let mode = overlays ? 0 : IterMode.IgnoreOverlays;\n    // Must go up out of overlays when those do not overlap with pos\n    if (overlays)\n        for (let scan = node, parent = scan.parent; parent; scan = parent, parent = scan.parent) {\n            if (scan instanceof TreeNode && scan.index < 0 && ((_a = parent.enter(pos, side, mode)) === null || _a === void 0 ? void 0 : _a.from) != scan.from)\n                node = parent;\n        }\n    for (;;) {\n        let inner = node.enter(pos, side, mode);\n        if (!inner)\n            return node;\n        node = inner;\n    }\n}\nclass BaseNode {\n    cursor(mode = 0) { return new TreeCursor(this, mode); }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n    resolve(pos, side = 0) {\n        return resolveNode(this, pos, side, false);\n    }\n    resolveInner(pos, side = 0) {\n        return resolveNode(this, pos, side, true);\n    }\n    matchContext(context) {\n        return matchNodeContext(this.parent, context);\n    }\n    enterUnfinishedNodesBefore(pos) {\n        let scan = this.childBefore(pos), node = this;\n        while (scan) {\n            let last = scan.lastChild;\n            if (!last || last.to != scan.to)\n                break;\n            if (last.type.isError && last.from == last.to) {\n                node = scan;\n                scan = last.prevSibling;\n            }\n            else {\n                scan = last;\n            }\n        }\n        return node;\n    }\n    get node() { return this; }\n    get next() { return this.parent; }\n}\nclass TreeNode extends BaseNode {\n    constructor(_tree, from, \n    // Index in parent node, set to -1 if the node is not a direct child of _parent.node (overlay)\n    index, _parent) {\n        super();\n        this._tree = _tree;\n        this.from = from;\n        this.index = index;\n        this._parent = _parent;\n    }\n    get type() { return this._tree.type; }\n    get name() { return this._tree.type.name; }\n    get to() { return this.from + this._tree.length; }\n    nextChild(i, dir, pos, side, mode = 0) {\n        for (let parent = this;;) {\n            for (let { children, positions } = parent._tree, e = dir > 0 ? children.length : -1; i != e; i += dir) {\n                let next = children[i], start = positions[i] + parent.from;\n                if (!checkSide(side, pos, start, start + next.length))\n                    continue;\n                if (next instanceof TreeBuffer) {\n                    if (mode & IterMode.ExcludeBuffers)\n                        continue;\n                    let index = next.findChild(0, next.buffer.length, dir, pos - start, side);\n                    if (index > -1)\n                        return new BufferNode(new BufferContext(parent, next, i, start), null, index);\n                }\n                else if ((mode & IterMode.IncludeAnonymous) || (!next.type.isAnonymous || hasChild(next))) {\n                    let mounted;\n                    if (!(mode & IterMode.IgnoreMounts) && (mounted = MountedTree.get(next)) && !mounted.overlay)\n                        return new TreeNode(mounted.tree, start, i, parent);\n                    let inner = new TreeNode(next, start, i, parent);\n                    return (mode & IterMode.IncludeAnonymous) || !inner.type.isAnonymous ? inner\n                        : inner.nextChild(dir < 0 ? next.children.length - 1 : 0, dir, pos, side);\n                }\n            }\n            if ((mode & IterMode.IncludeAnonymous) || !parent.type.isAnonymous)\n                return null;\n            if (parent.index >= 0)\n                i = parent.index + dir;\n            else\n                i = dir < 0 ? -1 : parent._parent._tree.children.length;\n            parent = parent._parent;\n            if (!parent)\n                return null;\n        }\n    }\n    get firstChild() { return this.nextChild(0, 1, 0, 4 /* Side.DontCare */); }\n    get lastChild() { return this.nextChild(this._tree.children.length - 1, -1, 0, 4 /* Side.DontCare */); }\n    childAfter(pos) { return this.nextChild(0, 1, pos, 2 /* Side.After */); }\n    childBefore(pos) { return this.nextChild(this._tree.children.length - 1, -1, pos, -2 /* Side.Before */); }\n    enter(pos, side, mode = 0) {\n        let mounted;\n        if (!(mode & IterMode.IgnoreOverlays) && (mounted = MountedTree.get(this._tree)) && mounted.overlay) {\n            let rPos = pos - this.from;\n            for (let { from, to } of mounted.overlay) {\n                if ((side > 0 ? from <= rPos : from < rPos) &&\n                    (side < 0 ? to >= rPos : to > rPos))\n                    return new TreeNode(mounted.tree, mounted.overlay[0].from + this.from, -1, this);\n            }\n        }\n        return this.nextChild(0, 1, pos, side, mode);\n    }\n    nextSignificantParent() {\n        let val = this;\n        while (val.type.isAnonymous && val._parent)\n            val = val._parent;\n        return val;\n    }\n    get parent() {\n        return this._parent ? this._parent.nextSignificantParent() : null;\n    }\n    get nextSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index + 1, 1, 0, 4 /* Side.DontCare */) : null;\n    }\n    get prevSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index - 1, -1, 0, 4 /* Side.DontCare */) : null;\n    }\n    get tree() { return this._tree; }\n    toTree() { return this._tree; }\n    /**\n    @internal\n    */\n    toString() { return this._tree.toString(); }\n}\nfunction getChildren(node, type, before, after) {\n    let cur = node.cursor(), result = [];\n    if (!cur.firstChild())\n        return result;\n    if (before != null)\n        for (let found = false; !found;) {\n            found = cur.type.is(before);\n            if (!cur.nextSibling())\n                return result;\n        }\n    for (;;) {\n        if (after != null && cur.type.is(after))\n            return result;\n        if (cur.type.is(type))\n            result.push(cur.node);\n        if (!cur.nextSibling())\n            return after == null ? result : [];\n    }\n}\nfunction matchNodeContext(node, context, i = context.length - 1) {\n    for (let p = node; i >= 0; p = p.parent) {\n        if (!p)\n            return false;\n        if (!p.type.isAnonymous) {\n            if (context[i] && context[i] != p.name)\n                return false;\n            i--;\n        }\n    }\n    return true;\n}\nclass BufferContext {\n    constructor(parent, buffer, index, start) {\n        this.parent = parent;\n        this.buffer = buffer;\n        this.index = index;\n        this.start = start;\n    }\n}\nclass BufferNode extends BaseNode {\n    get name() { return this.type.name; }\n    get from() { return this.context.start + this.context.buffer.buffer[this.index + 1]; }\n    get to() { return this.context.start + this.context.buffer.buffer[this.index + 2]; }\n    constructor(context, _parent, index) {\n        super();\n        this.context = context;\n        this._parent = _parent;\n        this.index = index;\n        this.type = context.buffer.set.types[context.buffer.buffer[index]];\n    }\n    child(dir, pos, side) {\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get firstChild() { return this.child(1, 0, 4 /* Side.DontCare */); }\n    get lastChild() { return this.child(-1, 0, 4 /* Side.DontCare */); }\n    childAfter(pos) { return this.child(1, pos, 2 /* Side.After */); }\n    childBefore(pos) { return this.child(-1, pos, -2 /* Side.Before */); }\n    enter(pos, side, mode = 0) {\n        if (mode & IterMode.ExcludeBuffers)\n            return null;\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], side > 0 ? 1 : -1, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get parent() {\n        return this._parent || this.context.parent.nextSignificantParent();\n    }\n    externalSibling(dir) {\n        return this._parent ? null : this.context.parent.nextChild(this.context.index + dir, dir, 0, 4 /* Side.DontCare */);\n    }\n    get nextSibling() {\n        let { buffer } = this.context;\n        let after = buffer.buffer[this.index + 3];\n        if (after < (this._parent ? buffer.buffer[this._parent.index + 3] : buffer.buffer.length))\n            return new BufferNode(this.context, this._parent, after);\n        return this.externalSibling(1);\n    }\n    get prevSibling() {\n        let { buffer } = this.context;\n        let parentStart = this._parent ? this._parent.index + 4 : 0;\n        if (this.index == parentStart)\n            return this.externalSibling(-1);\n        return new BufferNode(this.context, this._parent, buffer.findChild(parentStart, this.index, -1, 0, 4 /* Side.DontCare */));\n    }\n    get tree() { return null; }\n    toTree() {\n        let children = [], positions = [];\n        let { buffer } = this.context;\n        let startI = this.index + 4, endI = buffer.buffer[this.index + 3];\n        if (endI > startI) {\n            let from = buffer.buffer[this.index + 1];\n            children.push(buffer.slice(startI, endI, from));\n            positions.push(0);\n        }\n        return new Tree(this.type, children, positions, this.to - this.from);\n    }\n    /**\n    @internal\n    */\n    toString() { return this.context.buffer.childString(this.index); }\n}\nfunction iterStack(heads) {\n    if (!heads.length)\n        return null;\n    let pick = 0, picked = heads[0];\n    for (let i = 1; i < heads.length; i++) {\n        let node = heads[i];\n        if (node.from > picked.from || node.to < picked.to) {\n            picked = node;\n            pick = i;\n        }\n    }\n    let next = picked instanceof TreeNode && picked.index < 0 ? null : picked.parent;\n    let newHeads = heads.slice();\n    if (next)\n        newHeads[pick] = next;\n    else\n        newHeads.splice(pick, 1);\n    return new StackIterator(newHeads, picked);\n}\nclass StackIterator {\n    constructor(heads, node) {\n        this.heads = heads;\n        this.node = node;\n    }\n    get next() { return iterStack(this.heads); }\n}\nfunction stackIterator(tree, pos, side) {\n    let inner = tree.resolveInner(pos, side), layers = null;\n    for (let scan = inner instanceof TreeNode ? inner : inner.context.parent; scan; scan = scan.parent) {\n        if (scan.index < 0) { // This is an overlay root\n            let parent = scan.parent;\n            (layers || (layers = [inner])).push(parent.resolve(pos, side));\n            scan = parent;\n        }\n        else {\n            let mount = MountedTree.get(scan.tree);\n            // Relevant overlay branching off\n            if (mount && mount.overlay && mount.overlay[0].from <= pos && mount.overlay[mount.overlay.length - 1].to >= pos) {\n                let root = new TreeNode(mount.tree, mount.overlay[0].from + scan.from, -1, scan);\n                (layers || (layers = [inner])).push(resolveNode(root, pos, side, false));\n            }\n        }\n    }\n    return layers ? iterStack(layers) : inner;\n}\n/**\nA tree cursor object focuses on a given node in a syntax tree, and\nallows you to move to adjacent nodes.\n*/\nclass TreeCursor {\n    /**\n    Shorthand for `.type.name`.\n    */\n    get name() { return this.type.name; }\n    /**\n    @internal\n    */\n    constructor(node, \n    /**\n    @internal\n    */\n    mode = 0) {\n        this.mode = mode;\n        /**\n        @internal\n        */\n        this.buffer = null;\n        this.stack = [];\n        /**\n        @internal\n        */\n        this.index = 0;\n        this.bufferNode = null;\n        if (node instanceof TreeNode) {\n            this.yieldNode(node);\n        }\n        else {\n            this._tree = node.context.parent;\n            this.buffer = node.context;\n            for (let n = node._parent; n; n = n._parent)\n                this.stack.unshift(n.index);\n            this.bufferNode = node;\n            this.yieldBuf(node.index);\n        }\n    }\n    yieldNode(node) {\n        if (!node)\n            return false;\n        this._tree = node;\n        this.type = node.type;\n        this.from = node.from;\n        this.to = node.to;\n        return true;\n    }\n    yieldBuf(index, type) {\n        this.index = index;\n        let { start, buffer } = this.buffer;\n        this.type = type || buffer.set.types[buffer.buffer[index]];\n        this.from = start + buffer.buffer[index + 1];\n        this.to = start + buffer.buffer[index + 2];\n        return true;\n    }\n    /**\n    @internal\n    */\n    yield(node) {\n        if (!node)\n            return false;\n        if (node instanceof TreeNode) {\n            this.buffer = null;\n            return this.yieldNode(node);\n        }\n        this.buffer = node.context;\n        return this.yieldBuf(node.index, node.type);\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();\n    }\n    /**\n    @internal\n    */\n    enterChild(dir, pos, side) {\n        if (!this.buffer)\n            return this.yield(this._tree.nextChild(dir < 0 ? this._tree._tree.children.length - 1 : 0, dir, pos, side, this.mode));\n        let { buffer } = this.buffer;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.buffer.start, side);\n        if (index < 0)\n            return false;\n        this.stack.push(this.index);\n        return this.yieldBuf(index);\n    }\n    /**\n    Move the cursor to this node's first child. When this returns\n    false, the node has no child, and the cursor has not been moved.\n    */\n    firstChild() { return this.enterChild(1, 0, 4 /* Side.DontCare */); }\n    /**\n    Move the cursor to this node's last child.\n    */\n    lastChild() { return this.enterChild(-1, 0, 4 /* Side.DontCare */); }\n    /**\n    Move the cursor to the first child that ends after `pos`.\n    */\n    childAfter(pos) { return this.enterChild(1, pos, 2 /* Side.After */); }\n    /**\n    Move to the last child that starts before `pos`.\n    */\n    childBefore(pos) { return this.enterChild(-1, pos, -2 /* Side.Before */); }\n    /**\n    Move the cursor to the child around `pos`. If side is -1 the\n    child may end at that position, when 1 it may start there. This\n    will also enter [overlaid](#common.MountedTree.overlay)\n    [mounted](#common.NodeProp^mounted) trees unless `overlays` is\n    set to false.\n    */\n    enter(pos, side, mode = this.mode) {\n        if (!this.buffer)\n            return this.yield(this._tree.enter(pos, side, mode));\n        return mode & IterMode.ExcludeBuffers ? false : this.enterChild(1, pos, side);\n    }\n    /**\n    Move to the node's parent node, if this isn't the top node.\n    */\n    parent() {\n        if (!this.buffer)\n            return this.yieldNode((this.mode & IterMode.IncludeAnonymous) ? this._tree._parent : this._tree.parent);\n        if (this.stack.length)\n            return this.yieldBuf(this.stack.pop());\n        let parent = (this.mode & IterMode.IncludeAnonymous) ? this.buffer.parent : this.buffer.parent.nextSignificantParent();\n        this.buffer = null;\n        return this.yieldNode(parent);\n    }\n    /**\n    @internal\n    */\n    sibling(dir) {\n        if (!this.buffer)\n            return !this._tree._parent ? false\n                : this.yield(this._tree.index < 0 ? null\n                    : this._tree._parent.nextChild(this._tree.index + dir, dir, 0, 4 /* Side.DontCare */, this.mode));\n        let { buffer } = this.buffer, d = this.stack.length - 1;\n        if (dir < 0) {\n            let parentStart = d < 0 ? 0 : this.stack[d] + 4;\n            if (this.index != parentStart)\n                return this.yieldBuf(buffer.findChild(parentStart, this.index, -1, 0, 4 /* Side.DontCare */));\n        }\n        else {\n            let after = buffer.buffer[this.index + 3];\n            if (after < (d < 0 ? buffer.buffer.length : buffer.buffer[this.stack[d] + 3]))\n                return this.yieldBuf(after);\n        }\n        return d < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + dir, dir, 0, 4 /* Side.DontCare */, this.mode)) : false;\n    }\n    /**\n    Move to this node's next sibling, if any.\n    */\n    nextSibling() { return this.sibling(1); }\n    /**\n    Move to this node's previous sibling, if any.\n    */\n    prevSibling() { return this.sibling(-1); }\n    atLastNode(dir) {\n        let index, parent, { buffer } = this;\n        if (buffer) {\n            if (dir > 0) {\n                if (this.index < buffer.buffer.buffer.length)\n                    return false;\n            }\n            else {\n                for (let i = 0; i < this.index; i++)\n                    if (buffer.buffer.buffer[i + 3] < this.index)\n                        return false;\n            }\n            ({ index, parent } = buffer);\n        }\n        else {\n            ({ index, _parent: parent } = this._tree);\n        }\n        for (; parent; { index, _parent: parent } = parent) {\n            if (index > -1)\n                for (let i = index + dir, e = dir < 0 ? -1 : parent._tree.children.length; i != e; i += dir) {\n                    let child = parent._tree.children[i];\n                    if ((this.mode & IterMode.IncludeAnonymous) ||\n                        child instanceof TreeBuffer ||\n                        !child.type.isAnonymous ||\n                        hasChild(child))\n                        return false;\n                }\n        }\n        return true;\n    }\n    move(dir, enter) {\n        if (enter && this.enterChild(dir, 0, 4 /* Side.DontCare */))\n            return true;\n        for (;;) {\n            if (this.sibling(dir))\n                return true;\n            if (this.atLastNode(dir) || !this.parent())\n                return false;\n        }\n    }\n    /**\n    Move to the next node in a\n    [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR)\n    traversal, going from a node to its first child or, if the\n    current node is empty or `enter` is false, its next sibling or\n    the next sibling of the first parent node that has one.\n    */\n    next(enter = true) { return this.move(1, enter); }\n    /**\n    Move to the next node in a last-to-first pre-order traversal. A\n    node is followed by its last child or, if it has none, its\n    previous sibling or the previous sibling of the first parent\n    node that has one.\n    */\n    prev(enter = true) { return this.move(-1, enter); }\n    /**\n    Move the cursor to the innermost node that covers `pos`. If\n    `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n    it will enter nodes that start at `pos`.\n    */\n    moveTo(pos, side = 0) {\n        // Move up to a node that actually holds the position, if possible\n        while (this.from == this.to ||\n            (side < 1 ? this.from >= pos : this.from > pos) ||\n            (side > -1 ? this.to <= pos : this.to < pos))\n            if (!this.parent())\n                break;\n        // Then scan down into child nodes as far as possible\n        while (this.enterChild(1, pos, side)) { }\n        return this;\n    }\n    /**\n    Get a [syntax node](#common.SyntaxNode) at the cursor's current\n    position.\n    */\n    get node() {\n        if (!this.buffer)\n            return this._tree;\n        let cache = this.bufferNode, result = null, depth = 0;\n        if (cache && cache.context == this.buffer) {\n            scan: for (let index = this.index, d = this.stack.length; d >= 0;) {\n                for (let c = cache; c; c = c._parent)\n                    if (c.index == index) {\n                        if (index == this.index)\n                            return c;\n                        result = c;\n                        depth = d + 1;\n                        break scan;\n                    }\n                index = this.stack[--d];\n            }\n        }\n        for (let i = depth; i < this.stack.length; i++)\n            result = new BufferNode(this.buffer, result, this.stack[i]);\n        return this.bufferNode = new BufferNode(this.buffer, result, this.index);\n    }\n    /**\n    Get the [tree](#common.Tree) that represents the current node, if\n    any. Will return null when the node is in a [tree\n    buffer](#common.TreeBuffer).\n    */\n    get tree() {\n        return this.buffer ? null : this._tree._tree;\n    }\n    /**\n    Iterate over the current node and all its descendants, calling\n    `enter` when entering a node and `leave`, if given, when leaving\n    one. When `enter` returns `false`, any children of that node are\n    skipped, and `leave` isn't called for it.\n    */\n    iterate(enter, leave) {\n        for (let depth = 0;;) {\n            let mustLeave = false;\n            if (this.type.isAnonymous || enter(this) !== false) {\n                if (this.firstChild()) {\n                    depth++;\n                    continue;\n                }\n                if (!this.type.isAnonymous)\n                    mustLeave = true;\n            }\n            for (;;) {\n                if (mustLeave && leave)\n                    leave(this);\n                mustLeave = this.type.isAnonymous;\n                if (!depth)\n                    return;\n                if (this.nextSibling())\n                    break;\n                this.parent();\n                depth--;\n                mustLeave = true;\n            }\n        }\n    }\n    /**\n    Test whether the current node matches a given context—a sequence\n    of direct parent node names. Empty strings in the context array\n    are treated as wildcards.\n    */\n    matchContext(context) {\n        if (!this.buffer)\n            return matchNodeContext(this.node.parent, context);\n        let { buffer } = this.buffer, { types } = buffer.set;\n        for (let i = context.length - 1, d = this.stack.length - 1; i >= 0; d--) {\n            if (d < 0)\n                return matchNodeContext(this._tree, context, i);\n            let type = types[buffer.buffer[this.stack[d]]];\n            if (!type.isAnonymous) {\n                if (context[i] && context[i] != type.name)\n                    return false;\n                i--;\n            }\n        }\n        return true;\n    }\n}\nfunction hasChild(tree) {\n    return tree.children.some(ch => ch instanceof TreeBuffer || !ch.type.isAnonymous || hasChild(ch));\n}\nfunction buildTree(data) {\n    var _a;\n    let { buffer, nodeSet, maxBufferLength = DefaultBufferLength, reused = [], minRepeatType = nodeSet.types.length } = data;\n    let cursor = Array.isArray(buffer) ? new FlatBufferCursor(buffer, buffer.length) : buffer;\n    let types = nodeSet.types;\n    let contextHash = 0, lookAhead = 0;\n    function takeNode(parentStart, minPos, children, positions, inRepeat, depth) {\n        let { id, start, end, size } = cursor;\n        let lookAheadAtStart = lookAhead, contextAtStart = contextHash;\n        while (size < 0) {\n            cursor.next();\n            if (size == -1 /* SpecialRecord.Reuse */) {\n                let node = reused[id];\n                children.push(node);\n                positions.push(start - parentStart);\n                return;\n            }\n            else if (size == -3 /* SpecialRecord.ContextChange */) { // Context change\n                contextHash = id;\n                return;\n            }\n            else if (size == -4 /* SpecialRecord.LookAhead */) {\n                lookAhead = id;\n                return;\n            }\n            else {\n                throw new RangeError(`Unrecognized record size: ${size}`);\n            }\n        }\n        let type = types[id], node, buffer;\n        let startPos = start - parentStart;\n        if (end - start <= maxBufferLength && (buffer = findBufferSize(cursor.pos - minPos, inRepeat))) {\n            // Small enough for a buffer, and no reused nodes inside\n            let data = new Uint16Array(buffer.size - buffer.skip);\n            let endPos = cursor.pos - buffer.size, index = data.length;\n            while (cursor.pos > endPos)\n                index = copyToBuffer(buffer.start, data, index);\n            node = new TreeBuffer(data, end - buffer.start, nodeSet);\n            startPos = buffer.start - parentStart;\n        }\n        else { // Make it a node\n            let endPos = cursor.pos - size;\n            cursor.next();\n            let localChildren = [], localPositions = [];\n            let localInRepeat = id >= minRepeatType ? id : -1;\n            let lastGroup = 0, lastEnd = end;\n            while (cursor.pos > endPos) {\n                if (localInRepeat >= 0 && cursor.id == localInRepeat && cursor.size >= 0) {\n                    if (cursor.end <= lastEnd - maxBufferLength) {\n                        makeRepeatLeaf(localChildren, localPositions, start, lastGroup, cursor.end, lastEnd, localInRepeat, lookAheadAtStart, contextAtStart);\n                        lastGroup = localChildren.length;\n                        lastEnd = cursor.end;\n                    }\n                    cursor.next();\n                }\n                else if (depth > 2500 /* CutOff.Depth */) {\n                    takeFlatNode(start, endPos, localChildren, localPositions);\n                }\n                else {\n                    takeNode(start, endPos, localChildren, localPositions, localInRepeat, depth + 1);\n                }\n            }\n            if (localInRepeat >= 0 && lastGroup > 0 && lastGroup < localChildren.length)\n                makeRepeatLeaf(localChildren, localPositions, start, lastGroup, start, lastEnd, localInRepeat, lookAheadAtStart, contextAtStart);\n            localChildren.reverse();\n            localPositions.reverse();\n            if (localInRepeat > -1 && lastGroup > 0) {\n                let make = makeBalanced(type, contextAtStart);\n                node = balanceRange(type, localChildren, localPositions, 0, localChildren.length, 0, end - start, make, make);\n            }\n            else {\n                node = makeTree(type, localChildren, localPositions, end - start, lookAheadAtStart - end, contextAtStart);\n            }\n        }\n        children.push(node);\n        positions.push(startPos);\n    }\n    function takeFlatNode(parentStart, minPos, children, positions) {\n        let nodes = []; // Temporary, inverted array of leaf nodes found, with absolute positions\n        let nodeCount = 0, stopAt = -1;\n        while (cursor.pos > minPos) {\n            let { id, start, end, size } = cursor;\n            if (size > 4) { // Not a leaf\n                cursor.next();\n            }\n            else if (stopAt > -1 && start < stopAt) {\n                break;\n            }\n            else {\n                if (stopAt < 0)\n                    stopAt = end - maxBufferLength;\n                nodes.push(id, start, end);\n                nodeCount++;\n                cursor.next();\n            }\n        }\n        if (nodeCount) {\n            let buffer = new Uint16Array(nodeCount * 4);\n            let start = nodes[nodes.length - 2];\n            for (let i = nodes.length - 3, j = 0; i >= 0; i -= 3) {\n                buffer[j++] = nodes[i];\n                buffer[j++] = nodes[i + 1] - start;\n                buffer[j++] = nodes[i + 2] - start;\n                buffer[j++] = j;\n            }\n            children.push(new TreeBuffer(buffer, nodes[2] - start, nodeSet));\n            positions.push(start - parentStart);\n        }\n    }\n    function makeBalanced(type, contextHash) {\n        return (children, positions, length) => {\n            let lookAhead = 0, lastI = children.length - 1, last, lookAheadProp;\n            if (lastI >= 0 && (last = children[lastI]) instanceof Tree) {\n                if (!lastI && last.type == type && last.length == length)\n                    return last;\n                if (lookAheadProp = last.prop(NodeProp.lookAhead))\n                    lookAhead = positions[lastI] + last.length + lookAheadProp;\n            }\n            return makeTree(type, children, positions, length, lookAhead, contextHash);\n        };\n    }\n    function makeRepeatLeaf(children, positions, base, i, from, to, type, lookAhead, contextHash) {\n        let localChildren = [], localPositions = [];\n        while (children.length > i) {\n            localChildren.push(children.pop());\n            localPositions.push(positions.pop() + base - from);\n        }\n        children.push(makeTree(nodeSet.types[type], localChildren, localPositions, to - from, lookAhead - to, contextHash));\n        positions.push(from - base);\n    }\n    function makeTree(type, children, positions, length, lookAhead, contextHash, props) {\n        if (contextHash) {\n            let pair = [NodeProp.contextHash, contextHash];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        if (lookAhead > 25) {\n            let pair = [NodeProp.lookAhead, lookAhead];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        return new Tree(type, children, positions, length, props);\n    }\n    function findBufferSize(maxSize, inRepeat) {\n        // Scan through the buffer to find previous siblings that fit\n        // together in a TreeBuffer, and don't contain any reused nodes\n        // (which can't be stored in a buffer).\n        // If `inRepeat` is > -1, ignore node boundaries of that type for\n        // nesting, but make sure the end falls either at the start\n        // (`maxSize`) or before such a node.\n        let fork = cursor.fork();\n        let size = 0, start = 0, skip = 0, minStart = fork.end - maxBufferLength;\n        let result = { size: 0, start: 0, skip: 0 };\n        scan: for (let minPos = fork.pos - maxSize; fork.pos > minPos;) {\n            let nodeSize = fork.size;\n            // Pretend nested repeat nodes of the same type don't exist\n            if (fork.id == inRepeat && nodeSize >= 0) {\n                // Except that we store the current state as a valid return\n                // value.\n                result.size = size;\n                result.start = start;\n                result.skip = skip;\n                skip += 4;\n                size += 4;\n                fork.next();\n                continue;\n            }\n            let startPos = fork.pos - nodeSize;\n            if (nodeSize < 0 || startPos < minPos || fork.start < minStart)\n                break;\n            let localSkipped = fork.id >= minRepeatType ? 4 : 0;\n            let nodeStart = fork.start;\n            fork.next();\n            while (fork.pos > startPos) {\n                if (fork.size < 0) {\n                    if (fork.size == -3 /* SpecialRecord.ContextChange */)\n                        localSkipped += 4;\n                    else\n                        break scan;\n                }\n                else if (fork.id >= minRepeatType) {\n                    localSkipped += 4;\n                }\n                fork.next();\n            }\n            start = nodeStart;\n            size += nodeSize;\n            skip += localSkipped;\n        }\n        if (inRepeat < 0 || size == maxSize) {\n            result.size = size;\n            result.start = start;\n            result.skip = skip;\n        }\n        return result.size > 4 ? result : undefined;\n    }\n    function copyToBuffer(bufferStart, buffer, index) {\n        let { id, start, end, size } = cursor;\n        cursor.next();\n        if (size >= 0 && id < minRepeatType) {\n            let startIndex = index;\n            if (size > 4) {\n                let endPos = cursor.pos - (size - 4);\n                while (cursor.pos > endPos)\n                    index = copyToBuffer(bufferStart, buffer, index);\n            }\n            buffer[--index] = startIndex;\n            buffer[--index] = end - bufferStart;\n            buffer[--index] = start - bufferStart;\n            buffer[--index] = id;\n        }\n        else if (size == -3 /* SpecialRecord.ContextChange */) {\n            contextHash = id;\n        }\n        else if (size == -4 /* SpecialRecord.LookAhead */) {\n            lookAhead = id;\n        }\n        return index;\n    }\n    let children = [], positions = [];\n    while (cursor.pos > 0)\n        takeNode(data.start || 0, data.bufferStart || 0, children, positions, -1, 0);\n    let length = (_a = data.length) !== null && _a !== void 0 ? _a : (children.length ? positions[0] + children[0].length : 0);\n    return new Tree(types[data.topID], children.reverse(), positions.reverse(), length);\n}\nconst nodeSizeCache = new WeakMap;\nfunction nodeSize(balanceType, node) {\n    if (!balanceType.isAnonymous || node instanceof TreeBuffer || node.type != balanceType)\n        return 1;\n    let size = nodeSizeCache.get(node);\n    if (size == null) {\n        size = 1;\n        for (let child of node.children) {\n            if (child.type != balanceType || !(child instanceof Tree)) {\n                size = 1;\n                break;\n            }\n            size += nodeSize(balanceType, child);\n        }\n        nodeSizeCache.set(node, size);\n    }\n    return size;\n}\nfunction balanceRange(\n// The type the balanced tree's inner nodes.\nbalanceType, \n// The direct children and their positions\nchildren, positions, \n// The index range in children/positions to use\nfrom, to, \n// The start position of the nodes, relative to their parent.\nstart, \n// Length of the outer node\nlength, \n// Function to build the top node of the balanced tree\nmkTop, \n// Function to build internal nodes for the balanced tree\nmkTree) {\n    let total = 0;\n    for (let i = from; i < to; i++)\n        total += nodeSize(balanceType, children[i]);\n    let maxChild = Math.ceil((total * 1.5) / 8 /* Balance.BranchFactor */);\n    let localChildren = [], localPositions = [];\n    function divide(children, positions, from, to, offset) {\n        for (let i = from; i < to;) {\n            let groupFrom = i, groupStart = positions[i], groupSize = nodeSize(balanceType, children[i]);\n            i++;\n            for (; i < to; i++) {\n                let nextSize = nodeSize(balanceType, children[i]);\n                if (groupSize + nextSize >= maxChild)\n                    break;\n                groupSize += nextSize;\n            }\n            if (i == groupFrom + 1) {\n                if (groupSize > maxChild) {\n                    let only = children[groupFrom]; // Only trees can have a size > 1\n                    divide(only.children, only.positions, 0, only.children.length, positions[groupFrom] + offset);\n                    continue;\n                }\n                localChildren.push(children[groupFrom]);\n            }\n            else {\n                let length = positions[i - 1] + children[i - 1].length - groupStart;\n                localChildren.push(balanceRange(balanceType, children, positions, groupFrom, i, groupStart, length, null, mkTree));\n            }\n            localPositions.push(groupStart + offset - start);\n        }\n    }\n    divide(children, positions, from, to, 0);\n    return (mkTop || mkTree)(localChildren, localPositions, length);\n}\n/**\nProvides a way to associate values with pieces of trees. As long\nas that part of the tree is reused, the associated values can be\nretrieved from an updated tree.\n*/\nclass NodeWeakMap {\n    constructor() {\n        this.map = new WeakMap();\n    }\n    setBuffer(buffer, index, value) {\n        let inner = this.map.get(buffer);\n        if (!inner)\n            this.map.set(buffer, inner = new Map);\n        inner.set(index, value);\n    }\n    getBuffer(buffer, index) {\n        let inner = this.map.get(buffer);\n        return inner && inner.get(index);\n    }\n    /**\n    Set the value for this syntax node.\n    */\n    set(node, value) {\n        if (node instanceof BufferNode)\n            this.setBuffer(node.context.buffer, node.index, value);\n        else if (node instanceof TreeNode)\n            this.map.set(node.tree, value);\n    }\n    /**\n    Retrieve value for this syntax node, if it exists in the map.\n    */\n    get(node) {\n        return node instanceof BufferNode ? this.getBuffer(node.context.buffer, node.index)\n            : node instanceof TreeNode ? this.map.get(node.tree) : undefined;\n    }\n    /**\n    Set the value for the node that a cursor currently points to.\n    */\n    cursorSet(cursor, value) {\n        if (cursor.buffer)\n            this.setBuffer(cursor.buffer.buffer, cursor.index, value);\n        else\n            this.map.set(cursor.tree, value);\n    }\n    /**\n    Retrieve the value for the node that a cursor currently points\n    to.\n    */\n    cursorGet(cursor) {\n        return cursor.buffer ? this.getBuffer(cursor.buffer.buffer, cursor.index) : this.map.get(cursor.tree);\n    }\n}\n\n/**\nTree fragments are used during [incremental\nparsing](#common.Parser.startParse) to track parts of old trees\nthat can be reused in a new parse. An array of fragments is used\nto track regions of an old tree whose nodes might be reused in new\nparses. Use the static\n[`applyChanges`](#common.TreeFragment^applyChanges) method to\nupdate fragments for document changes.\n*/\nclass TreeFragment {\n    /**\n    Construct a tree fragment. You'll usually want to use\n    [`addTree`](#common.TreeFragment^addTree) and\n    [`applyChanges`](#common.TreeFragment^applyChanges) instead of\n    calling this directly.\n    */\n    constructor(\n    /**\n    The start of the unchanged range pointed to by this fragment.\n    This refers to an offset in the _updated_ document (as opposed\n    to the original tree).\n    */\n    from, \n    /**\n    The end of the unchanged range.\n    */\n    to, \n    /**\n    The tree that this fragment is based on.\n    */\n    tree, \n    /**\n    The offset between the fragment's tree and the document that\n    this fragment can be used against. Add this when going from\n    document to tree positions, subtract it to go from tree to\n    document positions.\n    */\n    offset, openStart = false, openEnd = false) {\n        this.from = from;\n        this.to = to;\n        this.tree = tree;\n        this.offset = offset;\n        this.open = (openStart ? 1 /* Open.Start */ : 0) | (openEnd ? 2 /* Open.End */ : 0);\n    }\n    /**\n    Whether the start of the fragment represents the start of a\n    parse, or the end of a change. (In the second case, it may not\n    be safe to reuse some nodes at the start, depending on the\n    parsing algorithm.)\n    */\n    get openStart() { return (this.open & 1 /* Open.Start */) > 0; }\n    /**\n    Whether the end of the fragment represents the end of a\n    full-document parse, or the start of a change.\n    */\n    get openEnd() { return (this.open & 2 /* Open.End */) > 0; }\n    /**\n    Create a set of fragments from a freshly parsed tree, or update\n    an existing set of fragments by replacing the ones that overlap\n    with a tree with content from the new tree. When `partial` is\n    true, the parse is treated as incomplete, and the resulting\n    fragment has [`openEnd`](#common.TreeFragment.openEnd) set to\n    true.\n    */\n    static addTree(tree, fragments = [], partial = false) {\n        let result = [new TreeFragment(0, tree.length, tree, 0, false, partial)];\n        for (let f of fragments)\n            if (f.to > tree.length)\n                result.push(f);\n        return result;\n    }\n    /**\n    Apply a set of edits to an array of fragments, removing or\n    splitting fragments as necessary to remove edited ranges, and\n    adjusting offsets for fragments that moved.\n    */\n    static applyChanges(fragments, changes, minGap = 128) {\n        if (!changes.length)\n            return fragments;\n        let result = [];\n        let fI = 1, nextF = fragments.length ? fragments[0] : null;\n        for (let cI = 0, pos = 0, off = 0;; cI++) {\n            let nextC = cI < changes.length ? changes[cI] : null;\n            let nextPos = nextC ? nextC.fromA : 1e9;\n            if (nextPos - pos >= minGap)\n                while (nextF && nextF.from < nextPos) {\n                    let cut = nextF;\n                    if (pos >= cut.from || nextPos <= cut.to || off) {\n                        let fFrom = Math.max(cut.from, pos) - off, fTo = Math.min(cut.to, nextPos) - off;\n                        cut = fFrom >= fTo ? null : new TreeFragment(fFrom, fTo, cut.tree, cut.offset + off, cI > 0, !!nextC);\n                    }\n                    if (cut)\n                        result.push(cut);\n                    if (nextF.to > nextPos)\n                        break;\n                    nextF = fI < fragments.length ? fragments[fI++] : null;\n                }\n            if (!nextC)\n                break;\n            pos = nextC.toA;\n            off = nextC.toA - nextC.toB;\n        }\n        return result;\n    }\n}\n/**\nA superclass that parsers should extend.\n*/\nclass Parser {\n    /**\n    Start a parse, returning a [partial parse](#common.PartialParse)\n    object. [`fragments`](#common.TreeFragment) can be passed in to\n    make the parse incremental.\n    \n    By default, the entire input is parsed. You can pass `ranges`,\n    which should be a sorted array of non-empty, non-overlapping\n    ranges, to parse only those ranges. The tree returned in that\n    case will start at `ranges[0].from`.\n    */\n    startParse(input, fragments, ranges) {\n        if (typeof input == \"string\")\n            input = new StringInput(input);\n        ranges = !ranges ? [new Range(0, input.length)] : ranges.length ? ranges.map(r => new Range(r.from, r.to)) : [new Range(0, 0)];\n        return this.createParse(input, fragments || [], ranges);\n    }\n    /**\n    Run a full parse, returning the resulting tree.\n    */\n    parse(input, fragments, ranges) {\n        let parse = this.startParse(input, fragments, ranges);\n        for (;;) {\n            let done = parse.advance();\n            if (done)\n                return done;\n        }\n    }\n}\nclass StringInput {\n    constructor(string) {\n        this.string = string;\n    }\n    get length() { return this.string.length; }\n    chunk(from) { return this.string.slice(from); }\n    get lineChunks() { return false; }\n    read(from, to) { return this.string.slice(from, to); }\n}\n\n/**\nCreate a parse wrapper that, after the inner parse completes,\nscans its tree for mixed language regions with the `nest`\nfunction, runs the resulting [inner parses](#common.NestedParse),\nand then [mounts](#common.NodeProp^mounted) their results onto the\ntree.\n*/\nfunction parseMixed(nest) {\n    return (parse, input, fragments, ranges) => new MixedParse(parse, nest, input, fragments, ranges);\n}\nclass InnerParse {\n    constructor(parser, parse, overlay, target, from) {\n        this.parser = parser;\n        this.parse = parse;\n        this.overlay = overlay;\n        this.target = target;\n        this.from = from;\n    }\n}\nfunction checkRanges(ranges) {\n    if (!ranges.length || ranges.some(r => r.from >= r.to))\n        throw new RangeError(\"Invalid inner parse ranges given: \" + JSON.stringify(ranges));\n}\nclass ActiveOverlay {\n    constructor(parser, predicate, mounts, index, start, target, prev) {\n        this.parser = parser;\n        this.predicate = predicate;\n        this.mounts = mounts;\n        this.index = index;\n        this.start = start;\n        this.target = target;\n        this.prev = prev;\n        this.depth = 0;\n        this.ranges = [];\n    }\n}\nconst stoppedInner = new NodeProp({ perNode: true });\nclass MixedParse {\n    constructor(base, nest, input, fragments, ranges) {\n        this.nest = nest;\n        this.input = input;\n        this.fragments = fragments;\n        this.ranges = ranges;\n        this.inner = [];\n        this.innerDone = 0;\n        this.baseTree = null;\n        this.stoppedAt = null;\n        this.baseParse = base;\n    }\n    advance() {\n        if (this.baseParse) {\n            let done = this.baseParse.advance();\n            if (!done)\n                return null;\n            this.baseParse = null;\n            this.baseTree = done;\n            this.startInner();\n            if (this.stoppedAt != null)\n                for (let inner of this.inner)\n                    inner.parse.stopAt(this.stoppedAt);\n        }\n        if (this.innerDone == this.inner.length) {\n            let result = this.baseTree;\n            if (this.stoppedAt != null)\n                result = new Tree(result.type, result.children, result.positions, result.length, result.propValues.concat([[stoppedInner, this.stoppedAt]]));\n            return result;\n        }\n        let inner = this.inner[this.innerDone], done = inner.parse.advance();\n        if (done) {\n            this.innerDone++;\n            // This is a somewhat dodgy but super helpful hack where we\n            // patch up nodes created by the inner parse (and thus\n            // presumably not aliased anywhere else) to hold the information\n            // about the inner parse.\n            let props = Object.assign(Object.create(null), inner.target.props);\n            props[NodeProp.mounted.id] = new MountedTree(done, inner.overlay, inner.parser);\n            inner.target.props = props;\n        }\n        return null;\n    }\n    get parsedPos() {\n        if (this.baseParse)\n            return 0;\n        let pos = this.input.length;\n        for (let i = this.innerDone; i < this.inner.length; i++) {\n            if (this.inner[i].from < pos)\n                pos = Math.min(pos, this.inner[i].parse.parsedPos);\n        }\n        return pos;\n    }\n    stopAt(pos) {\n        this.stoppedAt = pos;\n        if (this.baseParse)\n            this.baseParse.stopAt(pos);\n        else\n            for (let i = this.innerDone; i < this.inner.length; i++)\n                this.inner[i].parse.stopAt(pos);\n    }\n    startInner() {\n        let fragmentCursor = new FragmentCursor(this.fragments);\n        let overlay = null;\n        let covered = null;\n        let cursor = new TreeCursor(new TreeNode(this.baseTree, this.ranges[0].from, 0, null), IterMode.IncludeAnonymous | IterMode.IgnoreMounts);\n        scan: for (let nest, isCovered;;) {\n            let enter = true, range;\n            if (this.stoppedAt != null && cursor.from >= this.stoppedAt) {\n                enter = false;\n            }\n            else if (fragmentCursor.hasNode(cursor)) {\n                if (overlay) {\n                    let match = overlay.mounts.find(m => m.frag.from <= cursor.from && m.frag.to >= cursor.to && m.mount.overlay);\n                    if (match)\n                        for (let r of match.mount.overlay) {\n                            let from = r.from + match.pos, to = r.to + match.pos;\n                            if (from >= cursor.from && to <= cursor.to && !overlay.ranges.some(r => r.from < to && r.to > from))\n                                overlay.ranges.push({ from, to });\n                        }\n                }\n                enter = false;\n            }\n            else if (covered && (isCovered = checkCover(covered.ranges, cursor.from, cursor.to))) {\n                enter = isCovered != 2 /* Cover.Full */;\n            }\n            else if (!cursor.type.isAnonymous && (nest = this.nest(cursor, this.input)) &&\n                (cursor.from < cursor.to || !nest.overlay)) {\n                if (!cursor.tree)\n                    materialize(cursor);\n                let oldMounts = fragmentCursor.findMounts(cursor.from, nest.parser);\n                if (typeof nest.overlay == \"function\") {\n                    overlay = new ActiveOverlay(nest.parser, nest.overlay, oldMounts, this.inner.length, cursor.from, cursor.tree, overlay);\n                }\n                else {\n                    let ranges = punchRanges(this.ranges, nest.overlay ||\n                        (cursor.from < cursor.to ? [new Range(cursor.from, cursor.to)] : []));\n                    if (ranges.length)\n                        checkRanges(ranges);\n                    if (ranges.length || !nest.overlay)\n                        this.inner.push(new InnerParse(nest.parser, ranges.length ? nest.parser.startParse(this.input, enterFragments(oldMounts, ranges), ranges)\n                            : nest.parser.startParse(\"\"), nest.overlay ? nest.overlay.map(r => new Range(r.from - cursor.from, r.to - cursor.from)) : null, cursor.tree, ranges.length ? ranges[0].from : cursor.from));\n                    if (!nest.overlay)\n                        enter = false;\n                    else if (ranges.length)\n                        covered = { ranges, depth: 0, prev: covered };\n                }\n            }\n            else if (overlay && (range = overlay.predicate(cursor))) {\n                if (range === true)\n                    range = new Range(cursor.from, cursor.to);\n                if (range.from < range.to) {\n                    let last = overlay.ranges.length - 1;\n                    if (last >= 0 && overlay.ranges[last].to == range.from)\n                        overlay.ranges[last] = { from: overlay.ranges[last].from, to: range.to };\n                    else\n                        overlay.ranges.push(range);\n                }\n            }\n            if (enter && cursor.firstChild()) {\n                if (overlay)\n                    overlay.depth++;\n                if (covered)\n                    covered.depth++;\n            }\n            else {\n                for (;;) {\n                    if (cursor.nextSibling())\n                        break;\n                    if (!cursor.parent())\n                        break scan;\n                    if (overlay && !--overlay.depth) {\n                        let ranges = punchRanges(this.ranges, overlay.ranges);\n                        if (ranges.length) {\n                            checkRanges(ranges);\n                            this.inner.splice(overlay.index, 0, new InnerParse(overlay.parser, overlay.parser.startParse(this.input, enterFragments(overlay.mounts, ranges), ranges), overlay.ranges.map(r => new Range(r.from - overlay.start, r.to - overlay.start)), overlay.target, ranges[0].from));\n                        }\n                        overlay = overlay.prev;\n                    }\n                    if (covered && !--covered.depth)\n                        covered = covered.prev;\n                }\n            }\n        }\n    }\n}\nfunction checkCover(covered, from, to) {\n    for (let range of covered) {\n        if (range.from >= to)\n            break;\n        if (range.to > from)\n            return range.from <= from && range.to >= to ? 2 /* Cover.Full */ : 1 /* Cover.Partial */;\n    }\n    return 0 /* Cover.None */;\n}\n// Take a piece of buffer and convert it into a stand-alone\n// TreeBuffer.\nfunction sliceBuf(buf, startI, endI, nodes, positions, off) {\n    if (startI < endI) {\n        let from = buf.buffer[startI + 1];\n        nodes.push(buf.slice(startI, endI, from));\n        positions.push(from - off);\n    }\n}\n// This function takes a node that's in a buffer, and converts it, and\n// its parent buffer nodes, into a Tree. This is again acting on the\n// assumption that the trees and buffers have been constructed by the\n// parse that was ran via the mix parser, and thus aren't shared with\n// any other code, making violations of the immutability safe.\nfunction materialize(cursor) {\n    let { node } = cursor, stack = [];\n    let buffer = node.context.buffer;\n    // Scan up to the nearest tree\n    do {\n        stack.push(cursor.index);\n        cursor.parent();\n    } while (!cursor.tree);\n    // Find the index of the buffer in that tree\n    let base = cursor.tree, i = base.children.indexOf(buffer);\n    let buf = base.children[i], b = buf.buffer, newStack = [i];\n    // Split a level in the buffer, putting the nodes before and after\n    // the child that contains `node` into new buffers.\n    function split(startI, endI, type, innerOffset, length, stackPos) {\n        let targetI = stack[stackPos];\n        let children = [], positions = [];\n        sliceBuf(buf, startI, targetI, children, positions, innerOffset);\n        let from = b[targetI + 1], to = b[targetI + 2];\n        newStack.push(children.length);\n        let child = stackPos\n            ? split(targetI + 4, b[targetI + 3], buf.set.types[b[targetI]], from, to - from, stackPos - 1)\n            : node.toTree();\n        children.push(child);\n        positions.push(from - innerOffset);\n        sliceBuf(buf, b[targetI + 3], endI, children, positions, innerOffset);\n        return new Tree(type, children, positions, length);\n    }\n    base.children[i] = split(0, b.length, NodeType.none, 0, buf.length, stack.length - 1);\n    // Move the cursor back to the target node\n    for (let index of newStack) {\n        let tree = cursor.tree.children[index], pos = cursor.tree.positions[index];\n        cursor.yield(new TreeNode(tree, pos + cursor.from, index, cursor._tree));\n    }\n}\nclass StructureCursor {\n    constructor(root, offset) {\n        this.offset = offset;\n        this.done = false;\n        this.cursor = root.cursor(IterMode.IncludeAnonymous | IterMode.IgnoreMounts);\n    }\n    // Move to the first node (in pre-order) that starts at or after `pos`.\n    moveTo(pos) {\n        let { cursor } = this, p = pos - this.offset;\n        while (!this.done && cursor.from < p) {\n            if (cursor.to >= pos && cursor.enter(p, 1, IterMode.IgnoreOverlays | IterMode.ExcludeBuffers)) ;\n            else if (!cursor.next(false))\n                this.done = true;\n        }\n    }\n    hasNode(cursor) {\n        this.moveTo(cursor.from);\n        if (!this.done && this.cursor.from + this.offset == cursor.from && this.cursor.tree) {\n            for (let tree = this.cursor.tree;;) {\n                if (tree == cursor.tree)\n                    return true;\n                if (tree.children.length && tree.positions[0] == 0 && tree.children[0] instanceof Tree)\n                    tree = tree.children[0];\n                else\n                    break;\n            }\n        }\n        return false;\n    }\n}\nclass FragmentCursor {\n    constructor(fragments) {\n        var _a;\n        this.fragments = fragments;\n        this.curTo = 0;\n        this.fragI = 0;\n        if (fragments.length) {\n            let first = this.curFrag = fragments[0];\n            this.curTo = (_a = first.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : first.to;\n            this.inner = new StructureCursor(first.tree, -first.offset);\n        }\n        else {\n            this.curFrag = this.inner = null;\n        }\n    }\n    hasNode(node) {\n        while (this.curFrag && node.from >= this.curTo)\n            this.nextFrag();\n        return this.curFrag && this.curFrag.from <= node.from && this.curTo >= node.to && this.inner.hasNode(node);\n    }\n    nextFrag() {\n        var _a;\n        this.fragI++;\n        if (this.fragI == this.fragments.length) {\n            this.curFrag = this.inner = null;\n        }\n        else {\n            let frag = this.curFrag = this.fragments[this.fragI];\n            this.curTo = (_a = frag.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : frag.to;\n            this.inner = new StructureCursor(frag.tree, -frag.offset);\n        }\n    }\n    findMounts(pos, parser) {\n        var _a;\n        let result = [];\n        if (this.inner) {\n            this.inner.cursor.moveTo(pos, 1);\n            for (let pos = this.inner.cursor.node; pos; pos = pos.parent) {\n                let mount = (_a = pos.tree) === null || _a === void 0 ? void 0 : _a.prop(NodeProp.mounted);\n                if (mount && mount.parser == parser) {\n                    for (let i = this.fragI; i < this.fragments.length; i++) {\n                        let frag = this.fragments[i];\n                        if (frag.from >= pos.to)\n                            break;\n                        if (frag.tree == this.curFrag.tree)\n                            result.push({\n                                frag,\n                                pos: pos.from - frag.offset,\n                                mount\n                            });\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}\nfunction punchRanges(outer, ranges) {\n    let copy = null, current = ranges;\n    for (let i = 1, j = 0; i < outer.length; i++) {\n        let gapFrom = outer[i - 1].to, gapTo = outer[i].from;\n        for (; j < current.length; j++) {\n            let r = current[j];\n            if (r.from >= gapTo)\n                break;\n            if (r.to <= gapFrom)\n                continue;\n            if (!copy)\n                current = copy = ranges.slice();\n            if (r.from < gapFrom) {\n                copy[j] = new Range(r.from, gapFrom);\n                if (r.to > gapTo)\n                    copy.splice(j + 1, 0, new Range(gapTo, r.to));\n            }\n            else if (r.to > gapTo) {\n                copy[j--] = new Range(gapTo, r.to);\n            }\n            else {\n                copy.splice(j--, 1);\n            }\n        }\n    }\n    return current;\n}\nfunction findCoverChanges(a, b, from, to) {\n    let iA = 0, iB = 0, inA = false, inB = false, pos = -1e9;\n    let result = [];\n    for (;;) {\n        let nextA = iA == a.length ? 1e9 : inA ? a[iA].to : a[iA].from;\n        let nextB = iB == b.length ? 1e9 : inB ? b[iB].to : b[iB].from;\n        if (inA != inB) {\n            let start = Math.max(pos, from), end = Math.min(nextA, nextB, to);\n            if (start < end)\n                result.push(new Range(start, end));\n        }\n        pos = Math.min(nextA, nextB);\n        if (pos == 1e9)\n            break;\n        if (nextA == pos) {\n            if (!inA)\n                inA = true;\n            else {\n                inA = false;\n                iA++;\n            }\n        }\n        if (nextB == pos) {\n            if (!inB)\n                inB = true;\n            else {\n                inB = false;\n                iB++;\n            }\n        }\n    }\n    return result;\n}\n// Given a number of fragments for the outer tree, and a set of ranges\n// to parse, find fragments for inner trees mounted around those\n// ranges, if any.\nfunction enterFragments(mounts, ranges) {\n    let result = [];\n    for (let { pos, mount, frag } of mounts) {\n        let startPos = pos + (mount.overlay ? mount.overlay[0].from : 0), endPos = startPos + mount.tree.length;\n        let from = Math.max(frag.from, startPos), to = Math.min(frag.to, endPos);\n        if (mount.overlay) {\n            let overlay = mount.overlay.map(r => new Range(r.from + pos, r.to + pos));\n            let changes = findCoverChanges(ranges, overlay, from, to);\n            for (let i = 0, pos = from;; i++) {\n                let last = i == changes.length, end = last ? to : changes[i].from;\n                if (end > pos)\n                    result.push(new TreeFragment(pos, end, mount.tree, -startPos, frag.from >= pos || frag.openStart, frag.to <= end || frag.openEnd));\n                if (last)\n                    break;\n                pos = changes[i].to;\n            }\n        }\n        else {\n            result.push(new TreeFragment(from, to, mount.tree, -startPos, frag.from >= startPos || frag.openStart, frag.to <= endPos || frag.openEnd));\n        }\n    }\n    return result;\n}\n\nexport { DefaultBufferLength, IterMode, MountedTree, NodeProp, NodeSet, NodeType, NodeWeakMap, Parser, Tree, TreeBuffer, TreeCursor, TreeFragment, parseMixed };\n","import { Parser, NodeProp, NodeSet, NodeType, DefaultBufferLength, Tree, IterMode } from '@lezer/common';\n\n/**\nA parse stack. These are used internally by the parser to track\nparsing progress. They also provide some properties and methods\nthat external code such as a tokenizer can use to get information\nabout the parse state.\n*/\nclass Stack {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The parse that this stack is part of @internal\n    */\n    p, \n    /**\n    Holds state, input pos, buffer index triplets for all but the\n    top state @internal\n    */\n    stack, \n    /**\n    The current parse state @internal\n    */\n    state, \n    // The position at which the next reduce should take place. This\n    // can be less than `this.pos` when skipped expressions have been\n    // added to the stack (which should be moved outside of the next\n    // reduction)\n    /**\n    @internal\n    */\n    reducePos, \n    /**\n    The input position up to which this stack has parsed.\n    */\n    pos, \n    /**\n    The dynamic score of the stack, including dynamic precedence\n    and error-recovery penalties\n    @internal\n    */\n    score, \n    // The output buffer. Holds (type, start, end, size) quads\n    // representing nodes created by the parser, where `size` is\n    // amount of buffer array entries covered by this node.\n    /**\n    @internal\n    */\n    buffer, \n    // The base offset of the buffer. When stacks are split, the split\n    // instance shared the buffer history with its parent up to\n    // `bufferBase`, which is the absolute offset (including the\n    // offset of previous splits) into the buffer at which this stack\n    // starts writing.\n    /**\n    @internal\n    */\n    bufferBase, \n    /**\n    @internal\n    */\n    curContext, \n    /**\n    @internal\n    */\n    lookAhead = 0, \n    // A parent stack from which this was split off, if any. This is\n    // set up so that it always points to a stack that has some\n    // additional buffer content, never to a stack with an equal\n    // `bufferBase`.\n    /**\n    @internal\n    */\n    parent) {\n        this.p = p;\n        this.stack = stack;\n        this.state = state;\n        this.reducePos = reducePos;\n        this.pos = pos;\n        this.score = score;\n        this.buffer = buffer;\n        this.bufferBase = bufferBase;\n        this.curContext = curContext;\n        this.lookAhead = lookAhead;\n        this.parent = parent;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return `[${this.stack.filter((_, i) => i % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? \"!\" + this.score : \"\"}`;\n    }\n    // Start an empty stack\n    /**\n    @internal\n    */\n    static start(p, state, pos = 0) {\n        let cx = p.parser.context;\n        return new Stack(p, [], state, pos, pos, 0, [], 0, cx ? new StackContext(cx, cx.start) : null, 0, null);\n    }\n    /**\n    The stack's current [context](#lr.ContextTracker) value, if\n    any. Its type will depend on the context tracker's type\n    parameter, or it will be `null` if there is no context\n    tracker.\n    */\n    get context() { return this.curContext ? this.curContext.context : null; }\n    // Push a state onto the stack, tracking its start position as well\n    // as the buffer base at that point.\n    /**\n    @internal\n    */\n    pushState(state, start) {\n        this.stack.push(this.state, start, this.bufferBase + this.buffer.length);\n        this.state = state;\n    }\n    // Apply a reduce action\n    /**\n    @internal\n    */\n    reduce(action) {\n        var _a;\n        let depth = action >> 19 /* Action.ReduceDepthShift */, type = action & 65535 /* Action.ValueMask */;\n        let { parser } = this.p;\n        let lookaheadRecord = this.reducePos < this.pos - 25 /* Lookahead.Margin */;\n        if (lookaheadRecord)\n            this.setLookAhead(this.pos);\n        let dPrec = parser.dynamicPrecedence(type);\n        if (dPrec)\n            this.score += dPrec;\n        if (depth == 0) {\n            this.pushState(parser.getGoto(this.state, type, true), this.reducePos);\n            // Zero-depth reductions are a special case—they add stuff to\n            // the stack without popping anything off.\n            if (type < parser.minRepeatTerm)\n                this.storeNode(type, this.reducePos, this.reducePos, lookaheadRecord ? 8 : 4, true);\n            this.reduceContext(type, this.reducePos);\n            return;\n        }\n        // Find the base index into `this.stack`, content after which will\n        // be dropped. Note that with `StayFlag` reductions we need to\n        // consume two extra frames (the dummy parent node for the skipped\n        // expression and the state that we'll be staying in, which should\n        // be moved to `this.state`).\n        let base = this.stack.length - ((depth - 1) * 3) - (action & 262144 /* Action.StayFlag */ ? 6 : 0);\n        let start = base ? this.stack[base - 2] : this.p.ranges[0].from, size = this.reducePos - start;\n        // This is a kludge to try and detect overly deep left-associative\n        // trees, which will not increase the parse stack depth and thus\n        // won't be caught by the regular stack-depth limit check.\n        if (size >= 2000 /* Recover.MinBigReduction */ && !((_a = this.p.parser.nodeSet.types[type]) === null || _a === void 0 ? void 0 : _a.isAnonymous)) {\n            if (start == this.p.lastBigReductionStart) {\n                this.p.bigReductionCount++;\n                this.p.lastBigReductionSize = size;\n            }\n            else if (this.p.lastBigReductionSize < size) {\n                this.p.bigReductionCount = 1;\n                this.p.lastBigReductionStart = start;\n                this.p.lastBigReductionSize = size;\n            }\n        }\n        let bufferBase = base ? this.stack[base - 1] : 0, count = this.bufferBase + this.buffer.length - bufferBase;\n        // Store normal terms or `R -> R R` repeat reductions\n        if (type < parser.minRepeatTerm || (action & 131072 /* Action.RepeatFlag */)) {\n            let pos = parser.stateFlag(this.state, 1 /* StateFlag.Skipped */) ? this.pos : this.reducePos;\n            this.storeNode(type, start, pos, count + 4, true);\n        }\n        if (action & 262144 /* Action.StayFlag */) {\n            this.state = this.stack[base];\n        }\n        else {\n            let baseStateID = this.stack[base - 3];\n            this.state = parser.getGoto(baseStateID, type, true);\n        }\n        while (this.stack.length > base)\n            this.stack.pop();\n        this.reduceContext(type, start);\n    }\n    // Shift a value into the buffer\n    /**\n    @internal\n    */\n    storeNode(term, start, end, size = 4, mustSink = false) {\n        if (term == 0 /* Term.Err */ &&\n            (!this.stack.length || this.stack[this.stack.length - 1] < this.buffer.length + this.bufferBase)) {\n            // Try to omit/merge adjacent error nodes\n            let cur = this, top = this.buffer.length;\n            if (top == 0 && cur.parent) {\n                top = cur.bufferBase - cur.parent.bufferBase;\n                cur = cur.parent;\n            }\n            if (top > 0 && cur.buffer[top - 4] == 0 /* Term.Err */ && cur.buffer[top - 1] > -1) {\n                if (start == end)\n                    return;\n                if (cur.buffer[top - 2] >= start) {\n                    cur.buffer[top - 2] = end;\n                    return;\n                }\n            }\n        }\n        if (!mustSink || this.pos == end) { // Simple case, just append\n            this.buffer.push(term, start, end, size);\n        }\n        else { // There may be skipped nodes that have to be moved forward\n            let index = this.buffer.length;\n            if (index > 0 && this.buffer[index - 4] != 0 /* Term.Err */) {\n                let mustMove = false;\n                for (let scan = index; scan > 0 && this.buffer[scan - 2] > end; scan -= 4) {\n                    if (this.buffer[scan - 1] >= 0) {\n                        mustMove = true;\n                        break;\n                    }\n                }\n                if (mustMove)\n                    while (index > 0 && this.buffer[index - 2] > end) {\n                        // Move this record forward\n                        this.buffer[index] = this.buffer[index - 4];\n                        this.buffer[index + 1] = this.buffer[index - 3];\n                        this.buffer[index + 2] = this.buffer[index - 2];\n                        this.buffer[index + 3] = this.buffer[index - 1];\n                        index -= 4;\n                        if (size > 4)\n                            size -= 4;\n                    }\n            }\n            this.buffer[index] = term;\n            this.buffer[index + 1] = start;\n            this.buffer[index + 2] = end;\n            this.buffer[index + 3] = size;\n        }\n    }\n    // Apply a shift action\n    /**\n    @internal\n    */\n    shift(action, type, start, end) {\n        if (action & 131072 /* Action.GotoFlag */) {\n            this.pushState(action & 65535 /* Action.ValueMask */, this.pos);\n        }\n        else if ((action & 262144 /* Action.StayFlag */) == 0) { // Regular shift\n            let nextState = action, { parser } = this.p;\n            if (end > this.pos || type <= parser.maxNode) {\n                this.pos = end;\n                if (!parser.stateFlag(nextState, 1 /* StateFlag.Skipped */))\n                    this.reducePos = end;\n            }\n            this.pushState(nextState, start);\n            this.shiftContext(type, start);\n            if (type <= parser.maxNode)\n                this.buffer.push(type, start, end, 4);\n        }\n        else { // Shift-and-stay, which means this is a skipped token\n            this.pos = end;\n            this.shiftContext(type, start);\n            if (type <= this.p.parser.maxNode)\n                this.buffer.push(type, start, end, 4);\n        }\n    }\n    // Apply an action\n    /**\n    @internal\n    */\n    apply(action, next, nextStart, nextEnd) {\n        if (action & 65536 /* Action.ReduceFlag */)\n            this.reduce(action);\n        else\n            this.shift(action, next, nextStart, nextEnd);\n    }\n    // Add a prebuilt (reused) node into the buffer.\n    /**\n    @internal\n    */\n    useNode(value, next) {\n        let index = this.p.reused.length - 1;\n        if (index < 0 || this.p.reused[index] != value) {\n            this.p.reused.push(value);\n            index++;\n        }\n        let start = this.pos;\n        this.reducePos = this.pos = start + value.length;\n        this.pushState(next, start);\n        this.buffer.push(index, start, this.reducePos, -1 /* size == -1 means this is a reused value */);\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.reuse(this.curContext.context, value, this, this.p.stream.reset(this.pos - value.length)));\n    }\n    // Split the stack. Due to the buffer sharing and the fact\n    // that `this.stack` tends to stay quite shallow, this isn't very\n    // expensive.\n    /**\n    @internal\n    */\n    split() {\n        let parent = this;\n        let off = parent.buffer.length;\n        // Because the top of the buffer (after this.pos) may be mutated\n        // to reorder reductions and skipped tokens, and shared buffers\n        // should be immutable, this copies any outstanding skipped tokens\n        // to the new buffer, and puts the base pointer before them.\n        while (off > 0 && parent.buffer[off - 2] > parent.reducePos)\n            off -= 4;\n        let buffer = parent.buffer.slice(off), base = parent.bufferBase + off;\n        // Make sure parent points to an actual parent with content, if there is such a parent.\n        while (parent && base == parent.bufferBase)\n            parent = parent.parent;\n        return new Stack(this.p, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, buffer, base, this.curContext, this.lookAhead, parent);\n    }\n    // Try to recover from an error by 'deleting' (ignoring) one token.\n    /**\n    @internal\n    */\n    recoverByDelete(next, nextEnd) {\n        let isNode = next <= this.p.parser.maxNode;\n        if (isNode)\n            this.storeNode(next, this.pos, nextEnd, 4);\n        this.storeNode(0 /* Term.Err */, this.pos, nextEnd, isNode ? 8 : 4);\n        this.pos = this.reducePos = nextEnd;\n        this.score -= 190 /* Recover.Delete */;\n    }\n    /**\n    Check if the given term would be able to be shifted (optionally\n    after some reductions) on this stack. This can be useful for\n    external tokenizers that want to make sure they only provide a\n    given token when it applies.\n    */\n    canShift(term) {\n        for (let sim = new SimulatedStack(this);;) {\n            let action = this.p.parser.stateSlot(sim.state, 4 /* ParseState.DefaultReduce */) || this.p.parser.hasAction(sim.state, term);\n            if (action == 0)\n                return false;\n            if ((action & 65536 /* Action.ReduceFlag */) == 0)\n                return true;\n            sim.reduce(action);\n        }\n    }\n    // Apply up to Recover.MaxNext recovery actions that conceptually\n    // inserts some missing token or rule.\n    /**\n    @internal\n    */\n    recoverByInsert(next) {\n        if (this.stack.length >= 300 /* Recover.MaxInsertStackDepth */)\n            return [];\n        let nextStates = this.p.parser.nextStates(this.state);\n        if (nextStates.length > 4 /* Recover.MaxNext */ << 1 || this.stack.length >= 120 /* Recover.DampenInsertStackDepth */) {\n            let best = [];\n            for (let i = 0, s; i < nextStates.length; i += 2) {\n                if ((s = nextStates[i + 1]) != this.state && this.p.parser.hasAction(s, next))\n                    best.push(nextStates[i], s);\n            }\n            if (this.stack.length < 120 /* Recover.DampenInsertStackDepth */)\n                for (let i = 0; best.length < 4 /* Recover.MaxNext */ << 1 && i < nextStates.length; i += 2) {\n                    let s = nextStates[i + 1];\n                    if (!best.some((v, i) => (i & 1) && v == s))\n                        best.push(nextStates[i], s);\n                }\n            nextStates = best;\n        }\n        let result = [];\n        for (let i = 0; i < nextStates.length && result.length < 4 /* Recover.MaxNext */; i += 2) {\n            let s = nextStates[i + 1];\n            if (s == this.state)\n                continue;\n            let stack = this.split();\n            stack.pushState(s, this.pos);\n            stack.storeNode(0 /* Term.Err */, stack.pos, stack.pos, 4, true);\n            stack.shiftContext(nextStates[i], this.pos);\n            stack.reducePos = this.pos;\n            stack.score -= 200 /* Recover.Insert */;\n            result.push(stack);\n        }\n        return result;\n    }\n    // Force a reduce, if possible. Return false if that can't\n    // be done.\n    /**\n    @internal\n    */\n    forceReduce() {\n        let { parser } = this.p;\n        let reduce = parser.stateSlot(this.state, 5 /* ParseState.ForcedReduce */);\n        if ((reduce & 65536 /* Action.ReduceFlag */) == 0)\n            return false;\n        if (!parser.validAction(this.state, reduce)) {\n            let depth = reduce >> 19 /* Action.ReduceDepthShift */, term = reduce & 65535 /* Action.ValueMask */;\n            let target = this.stack.length - depth * 3;\n            if (target < 0 || parser.getGoto(this.stack[target], term, false) < 0) {\n                let backup = this.findForcedReduction();\n                if (backup == null)\n                    return false;\n                reduce = backup;\n            }\n            this.storeNode(0 /* Term.Err */, this.pos, this.pos, 4, true);\n            this.score -= 100 /* Recover.Reduce */;\n        }\n        this.reducePos = this.pos;\n        this.reduce(reduce);\n        return true;\n    }\n    /**\n    Try to scan through the automaton to find some kind of reduction\n    that can be applied. Used when the regular ForcedReduce field\n    isn't a valid action. @internal\n    */\n    findForcedReduction() {\n        let { parser } = this.p, seen = [];\n        let explore = (state, depth) => {\n            if (seen.includes(state))\n                return;\n            seen.push(state);\n            return parser.allActions(state, (action) => {\n                if (action & (262144 /* Action.StayFlag */ | 131072 /* Action.GotoFlag */)) ;\n                else if (action & 65536 /* Action.ReduceFlag */) {\n                    let rDepth = (action >> 19 /* Action.ReduceDepthShift */) - depth;\n                    if (rDepth > 1) {\n                        let term = action & 65535 /* Action.ValueMask */, target = this.stack.length - rDepth * 3;\n                        if (target >= 0 && parser.getGoto(this.stack[target], term, false) >= 0)\n                            return (rDepth << 19 /* Action.ReduceDepthShift */) | 65536 /* Action.ReduceFlag */ | term;\n                    }\n                }\n                else {\n                    let found = explore(action, depth + 1);\n                    if (found != null)\n                        return found;\n                }\n            });\n        };\n        return explore(this.state, 0);\n    }\n    /**\n    @internal\n    */\n    forceAll() {\n        while (!this.p.parser.stateFlag(this.state, 2 /* StateFlag.Accepting */)) {\n            if (!this.forceReduce()) {\n                this.storeNode(0 /* Term.Err */, this.pos, this.pos, 4, true);\n                break;\n            }\n        }\n        return this;\n    }\n    /**\n    Check whether this state has no further actions (assumed to be a direct descendant of the\n    top state, since any other states must be able to continue\n    somehow). @internal\n    */\n    get deadEnd() {\n        if (this.stack.length != 3)\n            return false;\n        let { parser } = this.p;\n        return parser.data[parser.stateSlot(this.state, 1 /* ParseState.Actions */)] == 65535 /* Seq.End */ &&\n            !parser.stateSlot(this.state, 4 /* ParseState.DefaultReduce */);\n    }\n    /**\n    Restart the stack (put it back in its start state). Only safe\n    when this.stack.length == 3 (state is directly below the top\n    state). @internal\n    */\n    restart() {\n        this.storeNode(0 /* Term.Err */, this.pos, this.pos, 4, true);\n        this.state = this.stack[0];\n        this.stack.length = 0;\n    }\n    /**\n    @internal\n    */\n    sameState(other) {\n        if (this.state != other.state || this.stack.length != other.stack.length)\n            return false;\n        for (let i = 0; i < this.stack.length; i += 3)\n            if (this.stack[i] != other.stack[i])\n                return false;\n        return true;\n    }\n    /**\n    Get the parser used by this stack.\n    */\n    get parser() { return this.p.parser; }\n    /**\n    Test whether a given dialect (by numeric ID, as exported from\n    the terms file) is enabled.\n    */\n    dialectEnabled(dialectID) { return this.p.parser.dialect.flags[dialectID]; }\n    shiftContext(term, start) {\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.shift(this.curContext.context, term, this, this.p.stream.reset(start)));\n    }\n    reduceContext(term, start) {\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.reduce(this.curContext.context, term, this, this.p.stream.reset(start)));\n    }\n    /**\n    @internal\n    */\n    emitContext() {\n        let last = this.buffer.length - 1;\n        if (last < 0 || this.buffer[last] != -3)\n            this.buffer.push(this.curContext.hash, this.pos, this.pos, -3);\n    }\n    /**\n    @internal\n    */\n    emitLookAhead() {\n        let last = this.buffer.length - 1;\n        if (last < 0 || this.buffer[last] != -4)\n            this.buffer.push(this.lookAhead, this.pos, this.pos, -4);\n    }\n    updateContext(context) {\n        if (context != this.curContext.context) {\n            let newCx = new StackContext(this.curContext.tracker, context);\n            if (newCx.hash != this.curContext.hash)\n                this.emitContext();\n            this.curContext = newCx;\n        }\n    }\n    /**\n    @internal\n    */\n    setLookAhead(lookAhead) {\n        if (lookAhead > this.lookAhead) {\n            this.emitLookAhead();\n            this.lookAhead = lookAhead;\n        }\n    }\n    /**\n    @internal\n    */\n    close() {\n        if (this.curContext && this.curContext.tracker.strict)\n            this.emitContext();\n        if (this.lookAhead > 0)\n            this.emitLookAhead();\n    }\n}\nclass StackContext {\n    constructor(tracker, context) {\n        this.tracker = tracker;\n        this.context = context;\n        this.hash = tracker.strict ? tracker.hash(context) : 0;\n    }\n}\n// Used to cheaply run some reductions to scan ahead without mutating\n// an entire stack\nclass SimulatedStack {\n    constructor(start) {\n        this.start = start;\n        this.state = start.state;\n        this.stack = start.stack;\n        this.base = this.stack.length;\n    }\n    reduce(action) {\n        let term = action & 65535 /* Action.ValueMask */, depth = action >> 19 /* Action.ReduceDepthShift */;\n        if (depth == 0) {\n            if (this.stack == this.start.stack)\n                this.stack = this.stack.slice();\n            this.stack.push(this.state, 0, 0);\n            this.base += 3;\n        }\n        else {\n            this.base -= (depth - 1) * 3;\n        }\n        let goto = this.start.p.parser.getGoto(this.stack[this.base - 3], term, true);\n        this.state = goto;\n    }\n}\n// This is given to `Tree.build` to build a buffer, and encapsulates\n// the parent-stack-walking necessary to read the nodes.\nclass StackBufferCursor {\n    constructor(stack, pos, index) {\n        this.stack = stack;\n        this.pos = pos;\n        this.index = index;\n        this.buffer = stack.buffer;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    static create(stack, pos = stack.bufferBase + stack.buffer.length) {\n        return new StackBufferCursor(stack, pos, pos - stack.bufferBase);\n    }\n    maybeNext() {\n        let next = this.stack.parent;\n        if (next != null) {\n            this.index = this.stack.bufferBase - next.bufferBase;\n            this.stack = next;\n            this.buffer = next.buffer;\n        }\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    next() {\n        this.index -= 4;\n        this.pos -= 4;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    fork() {\n        return new StackBufferCursor(this.stack, this.pos, this.index);\n    }\n}\n\n// See lezer-generator/src/encode.ts for comments about the encoding\n// used here\nfunction decodeArray(input, Type = Uint16Array) {\n    if (typeof input != \"string\")\n        return input;\n    let array = null;\n    for (let pos = 0, out = 0; pos < input.length;) {\n        let value = 0;\n        for (;;) {\n            let next = input.charCodeAt(pos++), stop = false;\n            if (next == 126 /* Encode.BigValCode */) {\n                value = 65535 /* Encode.BigVal */;\n                break;\n            }\n            if (next >= 92 /* Encode.Gap2 */)\n                next--;\n            if (next >= 34 /* Encode.Gap1 */)\n                next--;\n            let digit = next - 32 /* Encode.Start */;\n            if (digit >= 46 /* Encode.Base */) {\n                digit -= 46 /* Encode.Base */;\n                stop = true;\n            }\n            value += digit;\n            if (stop)\n                break;\n            value *= 46 /* Encode.Base */;\n        }\n        if (array)\n            array[out++] = value;\n        else\n            array = new Type(value);\n    }\n    return array;\n}\n\nclass CachedToken {\n    constructor() {\n        this.start = -1;\n        this.value = -1;\n        this.end = -1;\n        this.extended = -1;\n        this.lookAhead = 0;\n        this.mask = 0;\n        this.context = 0;\n    }\n}\nconst nullToken = new CachedToken;\n/**\n[Tokenizers](#lr.ExternalTokenizer) interact with the input\nthrough this interface. It presents the input as a stream of\ncharacters, tracking lookahead and hiding the complexity of\n[ranges](#common.Parser.parse^ranges) from tokenizer code.\n*/\nclass InputStream {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    input, \n    /**\n    @internal\n    */\n    ranges) {\n        this.input = input;\n        this.ranges = ranges;\n        /**\n        @internal\n        */\n        this.chunk = \"\";\n        /**\n        @internal\n        */\n        this.chunkOff = 0;\n        /**\n        Backup chunk\n        */\n        this.chunk2 = \"\";\n        this.chunk2Pos = 0;\n        /**\n        The character code of the next code unit in the input, or -1\n        when the stream is at the end of the input.\n        */\n        this.next = -1;\n        /**\n        @internal\n        */\n        this.token = nullToken;\n        this.rangeIndex = 0;\n        this.pos = this.chunkPos = ranges[0].from;\n        this.range = ranges[0];\n        this.end = ranges[ranges.length - 1].to;\n        this.readNext();\n    }\n    /**\n    @internal\n    */\n    resolveOffset(offset, assoc) {\n        let range = this.range, index = this.rangeIndex;\n        let pos = this.pos + offset;\n        while (pos < range.from) {\n            if (!index)\n                return null;\n            let next = this.ranges[--index];\n            pos -= range.from - next.to;\n            range = next;\n        }\n        while (assoc < 0 ? pos > range.to : pos >= range.to) {\n            if (index == this.ranges.length - 1)\n                return null;\n            let next = this.ranges[++index];\n            pos += next.from - range.to;\n            range = next;\n        }\n        return pos;\n    }\n    /**\n    @internal\n    */\n    clipPos(pos) {\n        if (pos >= this.range.from && pos < this.range.to)\n            return pos;\n        for (let range of this.ranges)\n            if (range.to > pos)\n                return Math.max(pos, range.from);\n        return this.end;\n    }\n    /**\n    Look at a code unit near the stream position. `.peek(0)` equals\n    `.next`, `.peek(-1)` gives you the previous character, and so\n    on.\n    \n    Note that looking around during tokenizing creates dependencies\n    on potentially far-away content, which may reduce the\n    effectiveness incremental parsing—when looking forward—or even\n    cause invalid reparses when looking backward more than 25 code\n    units, since the library does not track lookbehind.\n    */\n    peek(offset) {\n        let idx = this.chunkOff + offset, pos, result;\n        if (idx >= 0 && idx < this.chunk.length) {\n            pos = this.pos + offset;\n            result = this.chunk.charCodeAt(idx);\n        }\n        else {\n            let resolved = this.resolveOffset(offset, 1);\n            if (resolved == null)\n                return -1;\n            pos = resolved;\n            if (pos >= this.chunk2Pos && pos < this.chunk2Pos + this.chunk2.length) {\n                result = this.chunk2.charCodeAt(pos - this.chunk2Pos);\n            }\n            else {\n                let i = this.rangeIndex, range = this.range;\n                while (range.to <= pos)\n                    range = this.ranges[++i];\n                this.chunk2 = this.input.chunk(this.chunk2Pos = pos);\n                if (pos + this.chunk2.length > range.to)\n                    this.chunk2 = this.chunk2.slice(0, range.to - pos);\n                result = this.chunk2.charCodeAt(0);\n            }\n        }\n        if (pos >= this.token.lookAhead)\n            this.token.lookAhead = pos + 1;\n        return result;\n    }\n    /**\n    Accept a token. By default, the end of the token is set to the\n    current stream position, but you can pass an offset (relative to\n    the stream position) to change that.\n    */\n    acceptToken(token, endOffset = 0) {\n        let end = endOffset ? this.resolveOffset(endOffset, -1) : this.pos;\n        if (end == null || end < this.token.start)\n            throw new RangeError(\"Token end out of bounds\");\n        this.token.value = token;\n        this.token.end = end;\n    }\n    /**\n    Accept a token ending at a specific given position.\n    */\n    acceptTokenTo(token, endPos) {\n        this.token.value = token;\n        this.token.end = endPos;\n    }\n    getChunk() {\n        if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {\n            let { chunk, chunkPos } = this;\n            this.chunk = this.chunk2;\n            this.chunkPos = this.chunk2Pos;\n            this.chunk2 = chunk;\n            this.chunk2Pos = chunkPos;\n            this.chunkOff = this.pos - this.chunkPos;\n        }\n        else {\n            this.chunk2 = this.chunk;\n            this.chunk2Pos = this.chunkPos;\n            let nextChunk = this.input.chunk(this.pos);\n            let end = this.pos + nextChunk.length;\n            this.chunk = end > this.range.to ? nextChunk.slice(0, this.range.to - this.pos) : nextChunk;\n            this.chunkPos = this.pos;\n            this.chunkOff = 0;\n        }\n    }\n    readNext() {\n        if (this.chunkOff >= this.chunk.length) {\n            this.getChunk();\n            if (this.chunkOff == this.chunk.length)\n                return this.next = -1;\n        }\n        return this.next = this.chunk.charCodeAt(this.chunkOff);\n    }\n    /**\n    Move the stream forward N (defaults to 1) code units. Returns\n    the new value of [`next`](#lr.InputStream.next).\n    */\n    advance(n = 1) {\n        this.chunkOff += n;\n        while (this.pos + n >= this.range.to) {\n            if (this.rangeIndex == this.ranges.length - 1)\n                return this.setDone();\n            n -= this.range.to - this.pos;\n            this.range = this.ranges[++this.rangeIndex];\n            this.pos = this.range.from;\n        }\n        this.pos += n;\n        if (this.pos >= this.token.lookAhead)\n            this.token.lookAhead = this.pos + 1;\n        return this.readNext();\n    }\n    setDone() {\n        this.pos = this.chunkPos = this.end;\n        this.range = this.ranges[this.rangeIndex = this.ranges.length - 1];\n        this.chunk = \"\";\n        return this.next = -1;\n    }\n    /**\n    @internal\n    */\n    reset(pos, token) {\n        if (token) {\n            this.token = token;\n            token.start = pos;\n            token.lookAhead = pos + 1;\n            token.value = token.extended = -1;\n        }\n        else {\n            this.token = nullToken;\n        }\n        if (this.pos != pos) {\n            this.pos = pos;\n            if (pos == this.end) {\n                this.setDone();\n                return this;\n            }\n            while (pos < this.range.from)\n                this.range = this.ranges[--this.rangeIndex];\n            while (pos >= this.range.to)\n                this.range = this.ranges[++this.rangeIndex];\n            if (pos >= this.chunkPos && pos < this.chunkPos + this.chunk.length) {\n                this.chunkOff = pos - this.chunkPos;\n            }\n            else {\n                this.chunk = \"\";\n                this.chunkOff = 0;\n            }\n            this.readNext();\n        }\n        return this;\n    }\n    /**\n    @internal\n    */\n    read(from, to) {\n        if (from >= this.chunkPos && to <= this.chunkPos + this.chunk.length)\n            return this.chunk.slice(from - this.chunkPos, to - this.chunkPos);\n        if (from >= this.chunk2Pos && to <= this.chunk2Pos + this.chunk2.length)\n            return this.chunk2.slice(from - this.chunk2Pos, to - this.chunk2Pos);\n        if (from >= this.range.from && to <= this.range.to)\n            return this.input.read(from, to);\n        let result = \"\";\n        for (let r of this.ranges) {\n            if (r.from >= to)\n                break;\n            if (r.to > from)\n                result += this.input.read(Math.max(r.from, from), Math.min(r.to, to));\n        }\n        return result;\n    }\n}\n/**\n@internal\n*/\nclass TokenGroup {\n    constructor(data, id) {\n        this.data = data;\n        this.id = id;\n    }\n    token(input, stack) {\n        let { parser } = stack.p;\n        readToken(this.data, input, stack, this.id, parser.data, parser.tokenPrecTable);\n    }\n}\nTokenGroup.prototype.contextual = TokenGroup.prototype.fallback = TokenGroup.prototype.extend = false;\n/**\n@hide\n*/\nclass LocalTokenGroup {\n    constructor(data, precTable, elseToken) {\n        this.precTable = precTable;\n        this.elseToken = elseToken;\n        this.data = typeof data == \"string\" ? decodeArray(data) : data;\n    }\n    token(input, stack) {\n        let start = input.pos, skipped = 0;\n        for (;;) {\n            let atEof = input.next < 0, nextPos = input.resolveOffset(1, 1);\n            readToken(this.data, input, stack, 0, this.data, this.precTable);\n            if (input.token.value > -1)\n                break;\n            if (this.elseToken == null)\n                return;\n            if (!atEof)\n                skipped++;\n            if (nextPos == null)\n                break;\n            input.reset(nextPos, input.token);\n        }\n        if (skipped) {\n            input.reset(start, input.token);\n            input.acceptToken(this.elseToken, skipped);\n        }\n    }\n}\nLocalTokenGroup.prototype.contextual = TokenGroup.prototype.fallback = TokenGroup.prototype.extend = false;\n/**\n`@external tokens` declarations in the grammar should resolve to\nan instance of this class.\n*/\nclass ExternalTokenizer {\n    /**\n    Create a tokenizer. The first argument is the function that,\n    given an input stream, scans for the types of tokens it\n    recognizes at the stream's position, and calls\n    [`acceptToken`](#lr.InputStream.acceptToken) when it finds\n    one.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    token, options = {}) {\n        this.token = token;\n        this.contextual = !!options.contextual;\n        this.fallback = !!options.fallback;\n        this.extend = !!options.extend;\n    }\n}\n// Tokenizer data is stored a big uint16 array containing, for each\n// state:\n//\n//  - A group bitmask, indicating what token groups are reachable from\n//    this state, so that paths that can only lead to tokens not in\n//    any of the current groups can be cut off early.\n//\n//  - The position of the end of the state's sequence of accepting\n//    tokens\n//\n//  - The number of outgoing edges for the state\n//\n//  - The accepting tokens, as (token id, group mask) pairs\n//\n//  - The outgoing edges, as (start character, end character, state\n//    index) triples, with end character being exclusive\n//\n// This function interprets that data, running through a stream as\n// long as new states with the a matching group mask can be reached,\n// and updating `input.token` when it matches a token.\nfunction readToken(data, input, stack, group, precTable, precOffset) {\n    let state = 0, groupMask = 1 << group, { dialect } = stack.p.parser;\n    scan: for (;;) {\n        if ((groupMask & data[state]) == 0)\n            break;\n        let accEnd = data[state + 1];\n        // Check whether this state can lead to a token in the current group\n        // Accept tokens in this state, possibly overwriting\n        // lower-precedence / shorter tokens\n        for (let i = state + 3; i < accEnd; i += 2)\n            if ((data[i + 1] & groupMask) > 0) {\n                let term = data[i];\n                if (dialect.allows(term) &&\n                    (input.token.value == -1 || input.token.value == term ||\n                        overrides(term, input.token.value, precTable, precOffset))) {\n                    input.acceptToken(term);\n                    break;\n                }\n            }\n        let next = input.next, low = 0, high = data[state + 2];\n        // Special case for EOF\n        if (input.next < 0 && high > low && data[accEnd + high * 3 - 3] == 65535 /* Seq.End */) {\n            state = data[accEnd + high * 3 - 1];\n            continue scan;\n        }\n        // Do a binary search on the state's edges\n        for (; low < high;) {\n            let mid = (low + high) >> 1;\n            let index = accEnd + mid + (mid << 1);\n            let from = data[index], to = data[index + 1] || 0x10000;\n            if (next < from)\n                high = mid;\n            else if (next >= to)\n                low = mid + 1;\n            else {\n                state = data[index + 2];\n                input.advance();\n                continue scan;\n            }\n        }\n        break;\n    }\n}\nfunction findOffset(data, start, term) {\n    for (let i = start, next; (next = data[i]) != 65535 /* Seq.End */; i++)\n        if (next == term)\n            return i - start;\n    return -1;\n}\nfunction overrides(token, prev, tableData, tableOffset) {\n    let iPrev = findOffset(tableData, tableOffset, prev);\n    return iPrev < 0 || findOffset(tableData, tableOffset, token) < iPrev;\n}\n\n// Environment variable used to control console output\nconst verbose = typeof process != \"undefined\" && process.env && /\\bparse\\b/.test(process.env.LOG);\nlet stackIDs = null;\nfunction cutAt(tree, pos, side) {\n    let cursor = tree.cursor(IterMode.IncludeAnonymous);\n    cursor.moveTo(pos);\n    for (;;) {\n        if (!(side < 0 ? cursor.childBefore(pos) : cursor.childAfter(pos)))\n            for (;;) {\n                if ((side < 0 ? cursor.to < pos : cursor.from > pos) && !cursor.type.isError)\n                    return side < 0 ? Math.max(0, Math.min(cursor.to - 1, pos - 25 /* Lookahead.Margin */))\n                        : Math.min(tree.length, Math.max(cursor.from + 1, pos + 25 /* Lookahead.Margin */));\n                if (side < 0 ? cursor.prevSibling() : cursor.nextSibling())\n                    break;\n                if (!cursor.parent())\n                    return side < 0 ? 0 : tree.length;\n            }\n    }\n}\nclass FragmentCursor {\n    constructor(fragments, nodeSet) {\n        this.fragments = fragments;\n        this.nodeSet = nodeSet;\n        this.i = 0;\n        this.fragment = null;\n        this.safeFrom = -1;\n        this.safeTo = -1;\n        this.trees = [];\n        this.start = [];\n        this.index = [];\n        this.nextFragment();\n    }\n    nextFragment() {\n        let fr = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];\n        if (fr) {\n            this.safeFrom = fr.openStart ? cutAt(fr.tree, fr.from + fr.offset, 1) - fr.offset : fr.from;\n            this.safeTo = fr.openEnd ? cutAt(fr.tree, fr.to + fr.offset, -1) - fr.offset : fr.to;\n            while (this.trees.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n            }\n            this.trees.push(fr.tree);\n            this.start.push(-fr.offset);\n            this.index.push(0);\n            this.nextStart = this.safeFrom;\n        }\n        else {\n            this.nextStart = 1e9;\n        }\n    }\n    // `pos` must be >= any previously given `pos` for this cursor\n    nodeAt(pos) {\n        if (pos < this.nextStart)\n            return null;\n        while (this.fragment && this.safeTo <= pos)\n            this.nextFragment();\n        if (!this.fragment)\n            return null;\n        for (;;) {\n            let last = this.trees.length - 1;\n            if (last < 0) { // End of tree\n                this.nextFragment();\n                return null;\n            }\n            let top = this.trees[last], index = this.index[last];\n            if (index == top.children.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n                continue;\n            }\n            let next = top.children[index];\n            let start = this.start[last] + top.positions[index];\n            if (start > pos) {\n                this.nextStart = start;\n                return null;\n            }\n            if (next instanceof Tree) {\n                if (start == pos) {\n                    if (start < this.safeFrom)\n                        return null;\n                    let end = start + next.length;\n                    if (end <= this.safeTo) {\n                        let lookAhead = next.prop(NodeProp.lookAhead);\n                        if (!lookAhead || end + lookAhead < this.fragment.to)\n                            return next;\n                    }\n                }\n                this.index[last]++;\n                if (start + next.length >= Math.max(this.safeFrom, pos)) { // Enter this node\n                    this.trees.push(next);\n                    this.start.push(start);\n                    this.index.push(0);\n                }\n            }\n            else {\n                this.index[last]++;\n                this.nextStart = start + next.length;\n            }\n        }\n    }\n}\nclass TokenCache {\n    constructor(parser, stream) {\n        this.stream = stream;\n        this.tokens = [];\n        this.mainToken = null;\n        this.actions = [];\n        this.tokens = parser.tokenizers.map(_ => new CachedToken);\n    }\n    getActions(stack) {\n        let actionIndex = 0;\n        let main = null;\n        let { parser } = stack.p, { tokenizers } = parser;\n        let mask = parser.stateSlot(stack.state, 3 /* ParseState.TokenizerMask */);\n        let context = stack.curContext ? stack.curContext.hash : 0;\n        let lookAhead = 0;\n        for (let i = 0; i < tokenizers.length; i++) {\n            if (((1 << i) & mask) == 0)\n                continue;\n            let tokenizer = tokenizers[i], token = this.tokens[i];\n            if (main && !tokenizer.fallback)\n                continue;\n            if (tokenizer.contextual || token.start != stack.pos || token.mask != mask || token.context != context) {\n                this.updateCachedToken(token, tokenizer, stack);\n                token.mask = mask;\n                token.context = context;\n            }\n            if (token.lookAhead > token.end + 25 /* Lookahead.Margin */)\n                lookAhead = Math.max(token.lookAhead, lookAhead);\n            if (token.value != 0 /* Term.Err */) {\n                let startIndex = actionIndex;\n                if (token.extended > -1)\n                    actionIndex = this.addActions(stack, token.extended, token.end, actionIndex);\n                actionIndex = this.addActions(stack, token.value, token.end, actionIndex);\n                if (!tokenizer.extend) {\n                    main = token;\n                    if (actionIndex > startIndex)\n                        break;\n                }\n            }\n        }\n        while (this.actions.length > actionIndex)\n            this.actions.pop();\n        if (lookAhead)\n            stack.setLookAhead(lookAhead);\n        if (!main && stack.pos == this.stream.end) {\n            main = new CachedToken;\n            main.value = stack.p.parser.eofTerm;\n            main.start = main.end = stack.pos;\n            actionIndex = this.addActions(stack, main.value, main.end, actionIndex);\n        }\n        this.mainToken = main;\n        return this.actions;\n    }\n    getMainToken(stack) {\n        if (this.mainToken)\n            return this.mainToken;\n        let main = new CachedToken, { pos, p } = stack;\n        main.start = pos;\n        main.end = Math.min(pos + 1, p.stream.end);\n        main.value = pos == p.stream.end ? p.parser.eofTerm : 0 /* Term.Err */;\n        return main;\n    }\n    updateCachedToken(token, tokenizer, stack) {\n        let start = this.stream.clipPos(stack.pos);\n        tokenizer.token(this.stream.reset(start, token), stack);\n        if (token.value > -1) {\n            let { parser } = stack.p;\n            for (let i = 0; i < parser.specialized.length; i++)\n                if (parser.specialized[i] == token.value) {\n                    let result = parser.specializers[i](this.stream.read(token.start, token.end), stack);\n                    if (result >= 0 && stack.p.parser.dialect.allows(result >> 1)) {\n                        if ((result & 1) == 0 /* Specialize.Specialize */)\n                            token.value = result >> 1;\n                        else\n                            token.extended = result >> 1;\n                        break;\n                    }\n                }\n        }\n        else {\n            token.value = 0 /* Term.Err */;\n            token.end = this.stream.clipPos(start + 1);\n        }\n    }\n    putAction(action, token, end, index) {\n        // Don't add duplicate actions\n        for (let i = 0; i < index; i += 3)\n            if (this.actions[i] == action)\n                return index;\n        this.actions[index++] = action;\n        this.actions[index++] = token;\n        this.actions[index++] = end;\n        return index;\n    }\n    addActions(stack, token, end, index) {\n        let { state } = stack, { parser } = stack.p, { data } = parser;\n        for (let set = 0; set < 2; set++) {\n            for (let i = parser.stateSlot(state, set ? 2 /* ParseState.Skip */ : 1 /* ParseState.Actions */);; i += 3) {\n                if (data[i] == 65535 /* Seq.End */) {\n                    if (data[i + 1] == 1 /* Seq.Next */) {\n                        i = pair(data, i + 2);\n                    }\n                    else {\n                        if (index == 0 && data[i + 1] == 2 /* Seq.Other */)\n                            index = this.putAction(pair(data, i + 2), token, end, index);\n                        break;\n                    }\n                }\n                if (data[i] == token)\n                    index = this.putAction(pair(data, i + 1), token, end, index);\n            }\n        }\n        return index;\n    }\n}\nclass Parse {\n    constructor(parser, input, fragments, ranges) {\n        this.parser = parser;\n        this.input = input;\n        this.ranges = ranges;\n        this.recovering = 0;\n        this.nextStackID = 0x2654; // ♔, ♕, ♖, ♗, ♘, ♙, ♠, ♡, ♢, ♣, ♤, ♥, ♦, ♧\n        this.minStackPos = 0;\n        this.reused = [];\n        this.stoppedAt = null;\n        this.lastBigReductionStart = -1;\n        this.lastBigReductionSize = 0;\n        this.bigReductionCount = 0;\n        this.stream = new InputStream(input, ranges);\n        this.tokens = new TokenCache(parser, this.stream);\n        this.topTerm = parser.top[1];\n        let { from } = ranges[0];\n        this.stacks = [Stack.start(this, parser.top[0], from)];\n        this.fragments = fragments.length && this.stream.end - from > parser.bufferLength * 4\n            ? new FragmentCursor(fragments, parser.nodeSet) : null;\n    }\n    get parsedPos() {\n        return this.minStackPos;\n    }\n    // Move the parser forward. This will process all parse stacks at\n    // `this.pos` and try to advance them to a further position. If no\n    // stack for such a position is found, it'll start error-recovery.\n    //\n    // When the parse is finished, this will return a syntax tree. When\n    // not, it returns `null`.\n    advance() {\n        let stacks = this.stacks, pos = this.minStackPos;\n        // This will hold stacks beyond `pos`.\n        let newStacks = this.stacks = [];\n        let stopped, stoppedTokens;\n        // If a large amount of reductions happened with the same start\n        // position, force the stack out of that production in order to\n        // avoid creating a tree too deep to recurse through.\n        // (This is an ugly kludge, because unfortunately there is no\n        // straightforward, cheap way to check for this happening, due to\n        // the history of reductions only being available in an\n        // expensive-to-access format in the stack buffers.)\n        if (this.bigReductionCount > 300 /* Rec.MaxLeftAssociativeReductionCount */ && stacks.length == 1) {\n            let [s] = stacks;\n            while (s.forceReduce() && s.stack.length && s.stack[s.stack.length - 2] >= this.lastBigReductionStart) { }\n            this.bigReductionCount = this.lastBigReductionSize = 0;\n        }\n        // Keep advancing any stacks at `pos` until they either move\n        // forward or can't be advanced. Gather stacks that can't be\n        // advanced further in `stopped`.\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i];\n            for (;;) {\n                this.tokens.mainToken = null;\n                if (stack.pos > pos) {\n                    newStacks.push(stack);\n                }\n                else if (this.advanceStack(stack, newStacks, stacks)) {\n                    continue;\n                }\n                else {\n                    if (!stopped) {\n                        stopped = [];\n                        stoppedTokens = [];\n                    }\n                    stopped.push(stack);\n                    let tok = this.tokens.getMainToken(stack);\n                    stoppedTokens.push(tok.value, tok.end);\n                }\n                break;\n            }\n        }\n        if (!newStacks.length) {\n            let finished = stopped && findFinished(stopped);\n            if (finished) {\n                if (verbose)\n                    console.log(\"Finish with \" + this.stackID(finished));\n                return this.stackToTree(finished);\n            }\n            if (this.parser.strict) {\n                if (verbose && stopped)\n                    console.log(\"Stuck with token \" + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : \"none\"));\n                throw new SyntaxError(\"No parse at \" + pos);\n            }\n            if (!this.recovering)\n                this.recovering = 5 /* Rec.Distance */;\n        }\n        if (this.recovering && stopped) {\n            let finished = this.stoppedAt != null && stopped[0].pos > this.stoppedAt ? stopped[0]\n                : this.runRecovery(stopped, stoppedTokens, newStacks);\n            if (finished) {\n                if (verbose)\n                    console.log(\"Force-finish \" + this.stackID(finished));\n                return this.stackToTree(finished.forceAll());\n            }\n        }\n        if (this.recovering) {\n            let maxRemaining = this.recovering == 1 ? 1 : this.recovering * 3 /* Rec.MaxRemainingPerStep */;\n            if (newStacks.length > maxRemaining) {\n                newStacks.sort((a, b) => b.score - a.score);\n                while (newStacks.length > maxRemaining)\n                    newStacks.pop();\n            }\n            if (newStacks.some(s => s.reducePos > pos))\n                this.recovering--;\n        }\n        else if (newStacks.length > 1) {\n            // Prune stacks that are in the same state, or that have been\n            // running without splitting for a while, to avoid getting stuck\n            // with multiple successful stacks running endlessly on.\n            outer: for (let i = 0; i < newStacks.length - 1; i++) {\n                let stack = newStacks[i];\n                for (let j = i + 1; j < newStacks.length; j++) {\n                    let other = newStacks[j];\n                    if (stack.sameState(other) ||\n                        stack.buffer.length > 500 /* Rec.MinBufferLengthPrune */ && other.buffer.length > 500 /* Rec.MinBufferLengthPrune */) {\n                        if (((stack.score - other.score) || (stack.buffer.length - other.buffer.length)) > 0) {\n                            newStacks.splice(j--, 1);\n                        }\n                        else {\n                            newStacks.splice(i--, 1);\n                            continue outer;\n                        }\n                    }\n                }\n            }\n            if (newStacks.length > 12 /* Rec.MaxStackCount */)\n                newStacks.splice(12 /* Rec.MaxStackCount */, newStacks.length - 12 /* Rec.MaxStackCount */);\n        }\n        this.minStackPos = newStacks[0].pos;\n        for (let i = 1; i < newStacks.length; i++)\n            if (newStacks[i].pos < this.minStackPos)\n                this.minStackPos = newStacks[i].pos;\n        return null;\n    }\n    stopAt(pos) {\n        if (this.stoppedAt != null && this.stoppedAt < pos)\n            throw new RangeError(\"Can't move stoppedAt forward\");\n        this.stoppedAt = pos;\n    }\n    // Returns an updated version of the given stack, or null if the\n    // stack can't advance normally. When `split` and `stacks` are\n    // given, stacks split off by ambiguous operations will be pushed to\n    // `split`, or added to `stacks` if they move `pos` forward.\n    advanceStack(stack, stacks, split) {\n        let start = stack.pos, { parser } = this;\n        let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n        if (this.stoppedAt != null && start > this.stoppedAt)\n            return stack.forceReduce() ? stack : null;\n        if (this.fragments) {\n            let strictCx = stack.curContext && stack.curContext.tracker.strict, cxHash = strictCx ? stack.curContext.hash : 0;\n            for (let cached = this.fragments.nodeAt(start); cached;) {\n                let match = this.parser.nodeSet.types[cached.type.id] == cached.type ? parser.getGoto(stack.state, cached.type.id) : -1;\n                if (match > -1 && cached.length && (!strictCx || (cached.prop(NodeProp.contextHash) || 0) == cxHash)) {\n                    stack.useNode(cached, match);\n                    if (verbose)\n                        console.log(base + this.stackID(stack) + ` (via reuse of ${parser.getName(cached.type.id)})`);\n                    return true;\n                }\n                if (!(cached instanceof Tree) || cached.children.length == 0 || cached.positions[0] > 0)\n                    break;\n                let inner = cached.children[0];\n                if (inner instanceof Tree && cached.positions[0] == 0)\n                    cached = inner;\n                else\n                    break;\n            }\n        }\n        let defaultReduce = parser.stateSlot(stack.state, 4 /* ParseState.DefaultReduce */);\n        if (defaultReduce > 0) {\n            stack.reduce(defaultReduce);\n            if (verbose)\n                console.log(base + this.stackID(stack) + ` (via always-reduce ${parser.getName(defaultReduce & 65535 /* Action.ValueMask */)})`);\n            return true;\n        }\n        if (stack.stack.length >= 8400 /* Rec.CutDepth */) {\n            while (stack.stack.length > 6000 /* Rec.CutTo */ && stack.forceReduce()) { }\n        }\n        let actions = this.tokens.getActions(stack);\n        for (let i = 0; i < actions.length;) {\n            let action = actions[i++], term = actions[i++], end = actions[i++];\n            let last = i == actions.length || !split;\n            let localStack = last ? stack : stack.split();\n            let main = this.tokens.mainToken;\n            localStack.apply(action, term, main ? main.start : localStack.pos, end);\n            if (verbose)\n                console.log(base + this.stackID(localStack) + ` (via ${(action & 65536 /* Action.ReduceFlag */) == 0 ? \"shift\"\n                    : `reduce of ${parser.getName(action & 65535 /* Action.ValueMask */)}`} for ${parser.getName(term)} @ ${start}${localStack == stack ? \"\" : \", split\"})`);\n            if (last)\n                return true;\n            else if (localStack.pos > start)\n                stacks.push(localStack);\n            else\n                split.push(localStack);\n        }\n        return false;\n    }\n    // Advance a given stack forward as far as it will go. Returns the\n    // (possibly updated) stack if it got stuck, or null if it moved\n    // forward and was given to `pushStackDedup`.\n    advanceFully(stack, newStacks) {\n        let pos = stack.pos;\n        for (;;) {\n            if (!this.advanceStack(stack, null, null))\n                return false;\n            if (stack.pos > pos) {\n                pushStackDedup(stack, newStacks);\n                return true;\n            }\n        }\n    }\n    runRecovery(stacks, tokens, newStacks) {\n        let finished = null, restarted = false;\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i], token = tokens[i << 1], tokenEnd = tokens[(i << 1) + 1];\n            let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n            if (stack.deadEnd) {\n                if (restarted)\n                    continue;\n                restarted = true;\n                stack.restart();\n                if (verbose)\n                    console.log(base + this.stackID(stack) + \" (restarted)\");\n                let done = this.advanceFully(stack, newStacks);\n                if (done)\n                    continue;\n            }\n            let force = stack.split(), forceBase = base;\n            for (let j = 0; force.forceReduce() && j < 10 /* Rec.ForceReduceLimit */; j++) {\n                if (verbose)\n                    console.log(forceBase + this.stackID(force) + \" (via force-reduce)\");\n                let done = this.advanceFully(force, newStacks);\n                if (done)\n                    break;\n                if (verbose)\n                    forceBase = this.stackID(force) + \" -> \";\n            }\n            for (let insert of stack.recoverByInsert(token)) {\n                if (verbose)\n                    console.log(base + this.stackID(insert) + \" (via recover-insert)\");\n                this.advanceFully(insert, newStacks);\n            }\n            if (this.stream.end > stack.pos) {\n                if (tokenEnd == stack.pos) {\n                    tokenEnd++;\n                    token = 0 /* Term.Err */;\n                }\n                stack.recoverByDelete(token, tokenEnd);\n                if (verbose)\n                    console.log(base + this.stackID(stack) + ` (via recover-delete ${this.parser.getName(token)})`);\n                pushStackDedup(stack, newStacks);\n            }\n            else if (!finished || finished.score < stack.score) {\n                finished = stack;\n            }\n        }\n        return finished;\n    }\n    // Convert the stack's buffer to a syntax tree.\n    stackToTree(stack) {\n        stack.close();\n        return Tree.build({ buffer: StackBufferCursor.create(stack),\n            nodeSet: this.parser.nodeSet,\n            topID: this.topTerm,\n            maxBufferLength: this.parser.bufferLength,\n            reused: this.reused,\n            start: this.ranges[0].from,\n            length: stack.pos - this.ranges[0].from,\n            minRepeatType: this.parser.minRepeatTerm });\n    }\n    stackID(stack) {\n        let id = (stackIDs || (stackIDs = new WeakMap)).get(stack);\n        if (!id)\n            stackIDs.set(stack, id = String.fromCodePoint(this.nextStackID++));\n        return id + stack;\n    }\n}\nfunction pushStackDedup(stack, newStacks) {\n    for (let i = 0; i < newStacks.length; i++) {\n        let other = newStacks[i];\n        if (other.pos == stack.pos && other.sameState(stack)) {\n            if (newStacks[i].score < stack.score)\n                newStacks[i] = stack;\n            return;\n        }\n    }\n    newStacks.push(stack);\n}\nclass Dialect {\n    constructor(source, flags, disabled) {\n        this.source = source;\n        this.flags = flags;\n        this.disabled = disabled;\n    }\n    allows(term) { return !this.disabled || this.disabled[term] == 0; }\n}\nconst id = x => x;\n/**\nContext trackers are used to track stateful context (such as\nindentation in the Python grammar, or parent elements in the XML\ngrammar) needed by external tokenizers. You declare them in a\ngrammar file as `@context exportName from \"module\"`.\n\nContext values should be immutable, and can be updated (replaced)\non shift or reduce actions.\n\nThe export used in a `@context` declaration should be of this\ntype.\n*/\nclass ContextTracker {\n    /**\n    Define a context tracker.\n    */\n    constructor(spec) {\n        this.start = spec.start;\n        this.shift = spec.shift || id;\n        this.reduce = spec.reduce || id;\n        this.reuse = spec.reuse || id;\n        this.hash = spec.hash || (() => 0);\n        this.strict = spec.strict !== false;\n    }\n}\n/**\nHolds the parse tables for a given grammar, as generated by\n`lezer-generator`, and provides [methods](#common.Parser) to parse\ncontent with.\n*/\nclass LRParser extends Parser {\n    /**\n    @internal\n    */\n    constructor(spec) {\n        super();\n        /**\n        @internal\n        */\n        this.wrappers = [];\n        if (spec.version != 14 /* File.Version */)\n            throw new RangeError(`Parser version (${spec.version}) doesn't match runtime version (${14 /* File.Version */})`);\n        let nodeNames = spec.nodeNames.split(\" \");\n        this.minRepeatTerm = nodeNames.length;\n        for (let i = 0; i < spec.repeatNodeCount; i++)\n            nodeNames.push(\"\");\n        let topTerms = Object.keys(spec.topRules).map(r => spec.topRules[r][1]);\n        let nodeProps = [];\n        for (let i = 0; i < nodeNames.length; i++)\n            nodeProps.push([]);\n        function setProp(nodeID, prop, value) {\n            nodeProps[nodeID].push([prop, prop.deserialize(String(value))]);\n        }\n        if (spec.nodeProps)\n            for (let propSpec of spec.nodeProps) {\n                let prop = propSpec[0];\n                if (typeof prop == \"string\")\n                    prop = NodeProp[prop];\n                for (let i = 1; i < propSpec.length;) {\n                    let next = propSpec[i++];\n                    if (next >= 0) {\n                        setProp(next, prop, propSpec[i++]);\n                    }\n                    else {\n                        let value = propSpec[i + -next];\n                        for (let j = -next; j > 0; j--)\n                            setProp(propSpec[i++], prop, value);\n                        i++;\n                    }\n                }\n            }\n        this.nodeSet = new NodeSet(nodeNames.map((name, i) => NodeType.define({\n            name: i >= this.minRepeatTerm ? undefined : name,\n            id: i,\n            props: nodeProps[i],\n            top: topTerms.indexOf(i) > -1,\n            error: i == 0,\n            skipped: spec.skippedNodes && spec.skippedNodes.indexOf(i) > -1\n        })));\n        if (spec.propSources)\n            this.nodeSet = this.nodeSet.extend(...spec.propSources);\n        this.strict = false;\n        this.bufferLength = DefaultBufferLength;\n        let tokenArray = decodeArray(spec.tokenData);\n        this.context = spec.context;\n        this.specializerSpecs = spec.specialized || [];\n        this.specialized = new Uint16Array(this.specializerSpecs.length);\n        for (let i = 0; i < this.specializerSpecs.length; i++)\n            this.specialized[i] = this.specializerSpecs[i].term;\n        this.specializers = this.specializerSpecs.map(getSpecializer);\n        this.states = decodeArray(spec.states, Uint32Array);\n        this.data = decodeArray(spec.stateData);\n        this.goto = decodeArray(spec.goto);\n        this.maxTerm = spec.maxTerm;\n        this.tokenizers = spec.tokenizers.map(value => typeof value == \"number\" ? new TokenGroup(tokenArray, value) : value);\n        this.topRules = spec.topRules;\n        this.dialects = spec.dialects || {};\n        this.dynamicPrecedences = spec.dynamicPrecedences || null;\n        this.tokenPrecTable = spec.tokenPrec;\n        this.termNames = spec.termNames || null;\n        this.maxNode = this.nodeSet.types.length - 1;\n        this.dialect = this.parseDialect();\n        this.top = this.topRules[Object.keys(this.topRules)[0]];\n    }\n    createParse(input, fragments, ranges) {\n        let parse = new Parse(this, input, fragments, ranges);\n        for (let w of this.wrappers)\n            parse = w(parse, input, fragments, ranges);\n        return parse;\n    }\n    /**\n    Get a goto table entry @internal\n    */\n    getGoto(state, term, loose = false) {\n        let table = this.goto;\n        if (term >= table[0])\n            return -1;\n        for (let pos = table[term + 1];;) {\n            let groupTag = table[pos++], last = groupTag & 1;\n            let target = table[pos++];\n            if (last && loose)\n                return target;\n            for (let end = pos + (groupTag >> 1); pos < end; pos++)\n                if (table[pos] == state)\n                    return target;\n            if (last)\n                return -1;\n        }\n    }\n    /**\n    Check if this state has an action for a given terminal @internal\n    */\n    hasAction(state, terminal) {\n        let data = this.data;\n        for (let set = 0; set < 2; set++) {\n            for (let i = this.stateSlot(state, set ? 2 /* ParseState.Skip */ : 1 /* ParseState.Actions */), next;; i += 3) {\n                if ((next = data[i]) == 65535 /* Seq.End */) {\n                    if (data[i + 1] == 1 /* Seq.Next */)\n                        next = data[i = pair(data, i + 2)];\n                    else if (data[i + 1] == 2 /* Seq.Other */)\n                        return pair(data, i + 2);\n                    else\n                        break;\n                }\n                if (next == terminal || next == 0 /* Term.Err */)\n                    return pair(data, i + 1);\n            }\n        }\n        return 0;\n    }\n    /**\n    @internal\n    */\n    stateSlot(state, slot) {\n        return this.states[(state * 6 /* ParseState.Size */) + slot];\n    }\n    /**\n    @internal\n    */\n    stateFlag(state, flag) {\n        return (this.stateSlot(state, 0 /* ParseState.Flags */) & flag) > 0;\n    }\n    /**\n    @internal\n    */\n    validAction(state, action) {\n        return !!this.allActions(state, a => a == action ? true : null);\n    }\n    /**\n    @internal\n    */\n    allActions(state, action) {\n        let deflt = this.stateSlot(state, 4 /* ParseState.DefaultReduce */);\n        let result = deflt ? action(deflt) : undefined;\n        for (let i = this.stateSlot(state, 1 /* ParseState.Actions */); result == null; i += 3) {\n            if (this.data[i] == 65535 /* Seq.End */) {\n                if (this.data[i + 1] == 1 /* Seq.Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    break;\n            }\n            result = action(pair(this.data, i + 1));\n        }\n        return result;\n    }\n    /**\n    Get the states that can follow this one through shift actions or\n    goto jumps. @internal\n    */\n    nextStates(state) {\n        let result = [];\n        for (let i = this.stateSlot(state, 1 /* ParseState.Actions */);; i += 3) {\n            if (this.data[i] == 65535 /* Seq.End */) {\n                if (this.data[i + 1] == 1 /* Seq.Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    break;\n            }\n            if ((this.data[i + 2] & (65536 /* Action.ReduceFlag */ >> 16)) == 0) {\n                let value = this.data[i + 1];\n                if (!result.some((v, i) => (i & 1) && v == value))\n                    result.push(this.data[i], value);\n            }\n        }\n        return result;\n    }\n    /**\n    Configure the parser. Returns a new parser instance that has the\n    given settings modified. Settings not provided in `config` are\n    kept from the original parser.\n    */\n    configure(config) {\n        // Hideous reflection-based kludge to make it easy to create a\n        // slightly modified copy of a parser.\n        let copy = Object.assign(Object.create(LRParser.prototype), this);\n        if (config.props)\n            copy.nodeSet = this.nodeSet.extend(...config.props);\n        if (config.top) {\n            let info = this.topRules[config.top];\n            if (!info)\n                throw new RangeError(`Invalid top rule name ${config.top}`);\n            copy.top = info;\n        }\n        if (config.tokenizers)\n            copy.tokenizers = this.tokenizers.map(t => {\n                let found = config.tokenizers.find(r => r.from == t);\n                return found ? found.to : t;\n            });\n        if (config.specializers) {\n            copy.specializers = this.specializers.slice();\n            copy.specializerSpecs = this.specializerSpecs.map((s, i) => {\n                let found = config.specializers.find(r => r.from == s.external);\n                if (!found)\n                    return s;\n                let spec = Object.assign(Object.assign({}, s), { external: found.to });\n                copy.specializers[i] = getSpecializer(spec);\n                return spec;\n            });\n        }\n        if (config.contextTracker)\n            copy.context = config.contextTracker;\n        if (config.dialect)\n            copy.dialect = this.parseDialect(config.dialect);\n        if (config.strict != null)\n            copy.strict = config.strict;\n        if (config.wrap)\n            copy.wrappers = copy.wrappers.concat(config.wrap);\n        if (config.bufferLength != null)\n            copy.bufferLength = config.bufferLength;\n        return copy;\n    }\n    /**\n    Tells you whether any [parse wrappers](#lr.ParserConfig.wrap)\n    are registered for this parser.\n    */\n    hasWrappers() {\n        return this.wrappers.length > 0;\n    }\n    /**\n    Returns the name associated with a given term. This will only\n    work for all terms when the parser was generated with the\n    `--names` option. By default, only the names of tagged terms are\n    stored.\n    */\n    getName(term) {\n        return this.termNames ? this.termNames[term] : String(term <= this.maxNode && this.nodeSet.types[term].name || term);\n    }\n    /**\n    The eof term id is always allocated directly after the node\n    types. @internal\n    */\n    get eofTerm() { return this.maxNode + 1; }\n    /**\n    The type of top node produced by the parser.\n    */\n    get topNode() { return this.nodeSet.types[this.top[1]]; }\n    /**\n    @internal\n    */\n    dynamicPrecedence(term) {\n        let prec = this.dynamicPrecedences;\n        return prec == null ? 0 : prec[term] || 0;\n    }\n    /**\n    @internal\n    */\n    parseDialect(dialect) {\n        let values = Object.keys(this.dialects), flags = values.map(() => false);\n        if (dialect)\n            for (let part of dialect.split(\" \")) {\n                let id = values.indexOf(part);\n                if (id >= 0)\n                    flags[id] = true;\n            }\n        let disabled = null;\n        for (let i = 0; i < values.length; i++)\n            if (!flags[i]) {\n                for (let j = this.dialects[values[i]], id; (id = this.data[j++]) != 65535 /* Seq.End */;)\n                    (disabled || (disabled = new Uint8Array(this.maxTerm + 1)))[id] = 1;\n            }\n        return new Dialect(dialect, flags, disabled);\n    }\n    /**\n    Used by the output of the parser generator. Not available to\n    user code. @hide\n    */\n    static deserialize(spec) {\n        return new LRParser(spec);\n    }\n}\nfunction pair(data, off) { return data[off] | (data[off + 1] << 16); }\nfunction findFinished(stacks) {\n    let best = null;\n    for (let stack of stacks) {\n        let stopped = stack.p.stoppedAt;\n        if ((stack.pos == stack.p.stream.end || stopped != null && stack.pos > stopped) &&\n            stack.p.parser.stateFlag(stack.state, 2 /* StateFlag.Accepting */) &&\n            (!best || best.score < stack.score))\n            best = stack;\n    }\n    return best;\n}\nfunction getSpecializer(spec) {\n    if (spec.external) {\n        let mask = spec.extend ? 1 /* Specialize.Extend */ : 0 /* Specialize.Specialize */;\n        return (value, stack) => (spec.external(value, stack) << 1) | mask;\n    }\n    return spec.get;\n}\n\nexport { ContextTracker, ExternalTokenizer, InputStream, LRParser, LocalTokenGroup, Stack };\n","import { LRParser } from '@lezer/lr';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst Json$1 = 1,\n  Logfmt$1 = 2,\n  Unpack$1 = 3,\n  Pattern$1 = 4,\n  Regexp$1 = 5,\n  Unwrap$1 = 6,\n  LabelFormat$1 = 7,\n  LineFormat$1 = 8,\n  LabelReplace$1 = 9,\n  Vector$1 = 10,\n  Offset$1 = 11,\n  Bool$1 = 12,\n  On$1 = 13,\n  Ignoring$1 = 14,\n  GroupLeft$1 = 15,\n  GroupRight$1 = 16,\n  Decolorize$1 = 17,\n  Drop$1 = 18,\n  Keep$1 = 19,\n  By$1 = 20,\n  Without$1 = 21,\n  And$1 = 22,\n  Or$1 = 23,\n  Unless$1 = 24,\n  Sum$1 = 25,\n  Avg$1 = 26,\n  Count$1 = 27,\n  Max$1 = 28,\n  Min$1 = 29,\n  Stddev$1 = 30,\n  Stdvar$1 = 31,\n  Bottomk$1 = 32,\n  Topk$1 = 33,\n  Sort$1 = 34,\n  Sort_Desc$1 = 35;\n\nconst keywordTokens = {\n  json: Json$1,\n  logfmt: Logfmt$1,\n  unpack: Unpack$1,\n  pattern: Pattern$1,\n  regexp: Regexp$1,\n  label_format: LabelFormat$1,\n  line_format: LineFormat$1,\n  label_replace: LabelReplace$1,\n  vector: Vector$1,\n  offset: Offset$1,\n  bool: Bool$1,\n  on: On$1,\n  ignoring: Ignoring$1,\n  group_left: GroupLeft$1,\n  group_right: GroupRight$1,\n  unwrap: Unwrap$1,\n  decolorize: Decolorize$1,\n  drop: Drop$1,\n  keep: Keep$1,\n};\n\nconst specializeIdentifier = (value) => {\n  return keywordTokens[value.toLowerCase()] || -1;\n};\n\nconst contextualKeywordTokens = {\n  by: By$1,\n  without: Without$1,\n  and: And$1,\n  or: Or$1,\n  unless: Unless$1,\n  sum: Sum$1,\n  avg: Avg$1,\n  count: Count$1,\n  max: Max$1,\n  min: Min$1,\n  stddev: Stddev$1,\n  stdvar: Stdvar$1,\n  bottomk: Bottomk$1,\n  topk: Topk$1,\n  sort: Sort$1,\n  sort_desc: Sort_Desc$1,\n};\n\nconst extendIdentifier = (value) => {\n  return contextualKeywordTokens[value.toLowerCase()] || -1;\n};\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_Identifier = {__proto__:null,ip:295, count_over_time:301, rate:303, rate_counter:305, bytes_over_time:307, bytes_rate:309, avg_over_time:311, sum_over_time:313, min_over_time:315, max_over_time:317, stddev_over_time:319, stdvar_over_time:321, quantile_over_time:323, first_over_time:325, last_over_time:327, absent_over_time:329, bytes:335, duration:337, duration_seconds:339};\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"EtOYQPOOO#cQPO'#DUOOQO'#ER'#ERO#hQPO'#ERO$}QPO'#DTOYQPO'#DTOOQO'#Ed'#EdO%[QPO'#EcOOQO'#FP'#FPO%aQPO'#FOQ%lQPOOO&mQPO'#F]O&rQPO'#F^OOQO'#Eb'#EbOOQO'#DS'#DSOOQO'#Ee'#EeOOQO'#Ef'#EfOOQO'#Eg'#EgOOQO'#Eh'#EhOOQO'#Ei'#EiOOQO'#Ej'#EjOOQO'#Ek'#EkOOQO'#El'#ElOOQO'#Em'#EmOOQO'#En'#EnOOQO'#Eo'#EoOOQO'#Ep'#EpOOQO'#Eq'#EqOOQO'#Er'#ErOOQO'#Es'#EsO&wQPO'#DWOOQO'#DV'#DVO'VQPO,59pOOQO,5:m,5:mOOQO'#Dc'#DcO'_QPO'#DbO'gQPO'#DaO)lQPO'#D`O*{QPO'#D`OOQO'#D_'#D_O+sQPO,59oO-}QPO,59oO.UQPO,5:|O.]QPO,5:}O.hQPO'#E|O0sQPO,5;jO0zQPO,5;jO1PQPO,5;lO1PQPO,5;lO1PQPO,5;lO1PQPO,5;lO1PQPO,5;lO1PQPO,5;lOYQPO,5;wO3cQPO,5;xO3hQPO,59rO#cQPO,59qOOQO1G/[1G/[OOQO'#Dh'#DhO3mQPO,59|O5^QPO,59|OOQO'#Di'#DiO5cQPO,59{OOQO,59{,59{O5kQPO'#DWO6YQPO'#DlO8PQPO'#DoO9sQPO'#DoOOQO'#Do'#DoOOQO'#Dv'#DvOOQO'#Dt'#DtO+kQPO'#DtO9xQPO,59zO;iQPO'#EVO;nQPO'#EWOOQO'#EZ'#EZO;sQPO'#E[O;xQPO'#E_OOQO,59z,59zOOQO,59y,59yOOQO1G/Z1G/ZOOQO1G0h1G0hO;}QPO'#EtO.`QPO'#EtO<XQPO1G0iO<^QPO1G0iO<cQPO,5;hO=oQPO1G1UO=vQPO1G1UO=}QPO1G1UO>UQPO'#FSO@dQPO'#FRO@nQPO'#FROYQPO1G1WOYQPO1G1WOYQPO1G1WOYQPO1G1WOYQPO1G1WOYQPO1G1WO@xQPO1G1cOAPQPO1G1dOOQO1G/^1G/^OOQO1G/]1G/]O5cQPO1G/hOAUQPO1G/hOAZQPO'#DjOBzQPO'#DjOOQO1G/g1G/gOCbQPO,59rOCPQPO,5:cOOQO'#Dm'#DmOClQPO,5:WOEcQPO'#DrOOQO'#Dq'#DqOGVQPO,5:_OHvQPO,5:[OOQO,5:Z,5:ZOJgQPO,5:`O+kQPO,5:`O+kQPO,5:`OOQO,5:q,5:qOJuQPO'#EYOOQO'#EX'#EXOJzQPO,5:rOLkQPO'#E^OOQO'#E^'#E^OOQO'#E]'#E]ONbQPO,5:vO!!RQPO'#EaOOQO'#Ea'#EaOOQO'#E`'#E`O!#xQPO,5:yO!%iQPO'#D`O;}QPO,5;`O!%pQPO'#EuO!%uQPO,5;`O!%}QPO,5;`O!&[QPO,5;`O!&iQPO,5;`O!&nQPO7+&TO.`QPO7+&TOOQO'#E}'#E}O!(OQPO1G1SOOQO1G1S1G1SOYQPO7+&pO!(WQPO7+&pO!)hQPO7+&pO!)oQPO7+&pO!)vQQO'#FTOOQO,5;n,5;nO!,UQPO,5;mO!,]QPO,5;mO!-nQPO7+&rO!-uQPO7+&rOOQO7+&r7+&rO!.SQPO7+&rO!.ZQPO7+&rO!/`QPO7+&rO!/pQPO7+&}OOQO7+'O7+'OOOQO7+%S7+%SO!/uQPO7+%SO5cQPO,5:UO!/zQPO,5:UO!0PQPO1G/{OOQO1G/}1G/}OOQO1G0U1G0UOOQO1G0W1G0WOOQO,5:X,5:XO!0UQPO1G/yO!1uQPO,5:^O!1zQPO,5:]OOQO1G/z1G/zO!2PQPO1G/zO!3pQPO,5:tO;nQPO,5:sO;sQPO,5:wO;xQPO,5:zO!3xQPO,5;cO!%uQPO1G0zO!4WQPO1G0zO!4`QPO,5;aO+kQPO,5;cO!4eQPO1G0zO!4oQPO'#EvO!4tQPO1G0zO!4eQPO1G0zO!4|QPO1G0zO!5ZQPO1G0zO!%xQPO1G0zOOQO1G0z1G0zOOQO<<Io<<IoO!5fQPO<<IoO!5kQPO,5;iOOQO7+&n7+&nO!5pQPO<<J[OOQO<<J[<<J[OYQPO<<J[OOQO'#FV'#FVO!5wQPO,5;oOOQO'#FU'#FUOOQO,5;o,5;oOOQO1G1X1G1XO!6PQPO1G1XO!8YQPO<<JiOOQO<<Hn<<HnOOQO1G/p1G/pO!8_QPO1G/pO!8dQPO7+%gOOQO1G/x1G/xOOQO1G/w1G/wOOQO1G0`1G0`OOQO1G0_1G0_OOQO1G0c1G0cOOQO1G0f1G0fOOQO'#Ex'#ExOOQO1G0}1G0}O!8iQPO1G0}OOQO'#Ey'#EyOOQO'#Ez'#EzOOQO'#E{'#E{OOQO7+&f7+&fOOQO1G0{1G0{O!8nQPO1G0}O!9SQPO7+&fOOQO,5;b,5;bO!9[QPO7+&fO!%xQPO7+&fO!9fQPO7+&fO!9qQPOAN?ZOOQO1G1T1G1TO!;RQPOAN?vO!<cQPOAN?vO!<jQQO1G1ZOOQO1G1Z1G1ZOOQO7+&s7+&sO!<rQPOAN@TOOQO7+%[7+%[O!<wQPO<<IRO!<|QPO7+&iO!=RQPO<<JQO!=ZQPO<<JQO!=cQPO'#EwO!=hQPO<<JQOOQOG24uG24uOOQOG25bG25bOOQO1G1[1G1[OOQO7+&u7+&uO!=pQPOG25oOOQOAN>mAN>mO!=uQPO<<JTOOQOAN?lAN?lO!=zQPOAN?lO!>SQPOLD+ZOOQOAN?oAN?oOOQO,5:r,5:rO!>XQPO!$'NuO!>^QPO!)9DaO!>cQPO!.K9{OOQO!4//g!4//gO;nQPO'#EWO!>hQPO'#D`O!?`QPO,59oO!@fQPO'#DTOYQPO1G1WOYQPO1G1WOYQPO1G1WOYQPO1G1WOYQPO1G1WOYQPO1G1WO1PQPO,5;lO1PQPO,5;lO1PQPO,5;lO1PQPO,5;lO1PQPO,5;lO1PQPO,5;lO!AqQPO7+&rO!AxQPO7+&rO!BVQPO7+&rO!C_QPO7+&rO!CfQPO7+&rO!B^QPO'#FQ\",\n  stateData: \"!Cs~O$TOStOS~OXZOY[OiWOjWOkWOlWOmWOnWOoWOpWOqWOrWOsWO!vQO!wRO!xRO$UPO$YTO$[_O$]`O$^aO$_bO$`cO$adO$beO$cfO$dgO$ehO$fiO$gjO$hkO$ilO$jmO~O{nO~O!vqO~O!OrO!QrO!WrO!XrO!YrO!ZrOfwXgwXhwX!lwX!nwX!owX!pwX!qwX!wwX!xwX#{wX#|wX#}wX$OwX~O!_vO$RwX$ZwX~P#mO$Y{O~Od|Oe|O$Y}O~Of!QOg!POh!QO!O!UO!l!UO!n!UO!o!UO!p!UO!q!UO!w!RO!x!RO#{!SO#|!SO#}!SO$O!TO~O$Y!VO~O$Y!WO~O|!XO!O!XO!P!XO!Q!XO~O$V!YO$W!ZO~O}!]O$X!_O~Og!`Of!TXh!TX!O!TX!Q!TX!W!TX!X!TX!Y!TX!Z!TX!_!TX!l!TX!n!TX!o!TX!p!TX!q!TX!w!TX!x!TX#{!TX#|!TX#}!TX$O!TX$R!TX$Z!TX$k!TX$V!TX~O!OrO!QrO!WrO!XrO!YrO!ZrO~Of!SXg!SXh!SX!_!SX!l!SX!n!SX!o!SX!p!SX!q!SX!w!SX!x!SX#{!SX#|!SX#}!SX$O!SX$R!SX$Z!SX$k!SX$V!SX~P)WOP!dOQ!cOR!fOS!eOT!eOV!lOW!kOa!mOb!nOc!oO{!bO$Y!iO~O!_vOfwagwahwa!lwa!nwa!owa!pwa!qwa!wwa!xwa#{wa#|wa#}wa$Owa$Rwa$Zwa~P)WOfvXgvXhvX!OvX!lvX!nvX!ovX!pvX!qvX!wvX!xvX#{vX#|vX#}vX$OvX~O$Z!rO~P,|O$Z!sO~P,|O!v!wO$UPO$Y!uO~O$Y!xO~OXZOY[OiWOjWOkWOlWOmWOnWOoWOpWOqWOrWOsWO!wRO!xRO$UPO$YTO$[_O$]`O$^aO$_bO$`cO$adO$beO$cfO$dgO$ehO$fiO$gjO$hkO$ilO$jmO~O!v!yO~P.mO$Y!{O~O[#OO]!|O^!|OX#uPY#uPi#uPj#uPk#uPl#uPm#uPn#uPo#uPp#uPq#uPr#uPs#uP!v#uP!w#uP!x#uP$U#uP$Y#uP$[#uP$]#uP$^#uP$_#uP$`#uP$a#uP$b#uP$c#uP$d#uP$e#uP$f#uP$g#uP$h#uP$i#uP$j#uP~O!v#WO~O}#XO~Og#ZOf!Uah!Ua!O!Ua!Q!Ua!W!Ua!X!Ua!Y!Ua!Z!Ua!_!Ua!l!Ua!n!Ua!o!Ua!p!Ua!q!Ua!w!Ua!x!Ua#{!Ua#|!Ua#}!Ua$O!Ua$R!Ua$Z!Ua$k!Ua$V!Ua~O$Y#[O~O}#]O$X!_O~O|#`O!O#`O!P!XO!Q!XO!l#aO!n#aO!o#aO!p#aO!q#aO~O{#dO!b#bOf!`Xg!`Xh!`X!O!`X!Q!`X!W!`X!X!`X!Y!`X!Z!`X!_!`X!l!`X!n!`X!o!`X!p!`X!q!`X!w!`X!x!`X#{!`X#|!`X#}!`X$O!`X$R!`X$Z!`X$k!`X$V!`X~O{#dOf!cXg!cXh!cX!O!cX!Q!cX!W!cX!X!cX!Y!cX!Z!cX!_!cX!l!cX!n!cX!o!cX!p!cX!q!cX!w!cX!x!cX#{!cX#|!cX#}!cX$O!cX$R!cX$Z!cX$k!cX$V!cX~O}#hO~Of#jOg#kO$V#jOh!Sa!O!Sa!Q!Sa!W!Sa!X!Sa!Y!Sa!Z!Sa!_!Sa!l!Sa!n!Sa!o!Sa!p!Sa!q!Sa!w!Sa!x!Sa#{!Sa#|!Sa#}!Sa$O!Sa$R!Sa$Z!Sa$k!Sa~O}#lO~O{#mO~O{#pO~O{#tO~O!_#xO$k#zO~P)WO$Z$PO~O$V$QO~O{$RO$Z$TO~Of!uXg!uXh!uX!O!uX!l!uX!n!uX!o!uX!p!uX!q!uX!w!uX!x!uX#{!uX#|!uX#}!uX$O!uX$Z!uX~O$V$UO~P<kO$Z$VO~P,|O!v$WO~P.mO$Y$YO~OX#uXY#uXi#uXj#uXk#uXl#uXm#uXn#uXo#uXp#uXq#uXr#uXs#uX!v#uX!w#uX!x#uX$U#uX$Y#uX$[#uX$]#uX$^#uX$_#uX$`#uX$a#uX$b#uX$c#uX$d#uX$e#uX$f#uX$g#uX$h#uX$i#uX$j#uX~O_$[O`$[O~P>ZO]!|O^!|O~P>ZO$V$dO~P,|O$Z$eO~O}$gO~Og$hOf!^Xh!^X!O!^X!Q!^X!W!^X!X!^X!Y!^X!Z!^X!_!^X!l!^X!n!^X!o!^X!p!^X!q!^X!w!^X!x!^X#{!^X#|!^X#}!^X$O!^X$R!^X$Z!^X$k!^X$V!^X~O$Y$iO~O!m$kO!s$lO!vQO!wRO!xRO~O}#XO$X!_O~PCPO{#dO!b$nOf!`ag!`ah!`a!O!`a!Q!`a!W!`a!X!`a!Y!`a!Z!`a!_!`a!l!`a!n!`a!o!`a!p!`a!q!`a!w!`a!x!`a#{!`a#|!`a#}!`a$O!`a$R!`a$Z!`a$k!`a$V!`a~O|$pOf!fXg!fXh!fX!O!fX!Q!fX!W!fX!X!fX!Y!fX!Z!fX!_!fX!l!fX!n!fX!o!fX!p!fX!q!fX!w!fX!x!fX#{!fX#|!fX#}!fX$O!fX$R!fX$V!fX$Z!fX$k!fX~O$V$qOf!gag!gah!ga!O!ga!Q!ga!W!ga!X!ga!Y!ga!Z!ga!_!ga!l!ga!n!ga!o!ga!p!ga!q!ga!w!ga!x!ga#{!ga#|!ga#}!ga$O!ga$R!ga$Z!ga$k!ga~O$V$qOf!dag!dah!da!O!da!Q!da!W!da!X!da!Y!da!Z!da!_!da!l!da!n!da!o!da!p!da!q!da!w!da!x!da#{!da#|!da#}!da$O!da$R!da$Z!da$k!da~Of#jOg#kO$V#jO$Z$rO~O|$tO~O$V$uOf!zag!zah!za!O!za!Q!za!W!za!X!za!Y!za!Z!za!_!za!l!za!n!za!o!za!p!za!q!za!w!za!x!za#{!za#|!za#}!za$O!za$R!za$Z!za$k!za~O|!XO!O!XO!P!XO!Q!XOf#QXg#QXh#QX!W#QX!X#QX!Y#QX!Z#QX!_#QX!l#QX!n#QX!o#QX!p#QX!q#QX!w#QX!x#QX#{#QX#|#QX#}#QX$O#QX$R#QX$V#QX$Z#QX$k#QX~O$V$vOf#Oag#Oah#Oa!O#Oa!Q#Oa!W#Oa!X#Oa!Y#Oa!Z#Oa!_#Oa!l#Oa!n#Oa!o#Oa!p#Oa!q#Oa!w#Oa!x#Oa#{#Oa#|#Oa#}#Oa$O#Oa$R#Oa$Z#Oa$k#Oa~O|!XO!O!XO!P!XO!Q!XOf#TXg#TXh#TX!W#TX!X#TX!Y#TX!Z#TX!_#TX!l#TX!n#TX!o#TX!p#TX!q#TX!w#TX!x#TX#{#TX#|#TX#}#TX$O#TX$R#TX$V#TX$Z#TX$k#TX~O$V$wOf#Rag#Rah#Ra!O#Ra!Q#Ra!W#Ra!X#Ra!Y#Ra!Z#Ra!_#Ra!l#Ra!n#Ra!o#Ra!p#Ra!q#Ra!w#Ra!x#Ra#{#Ra#|#Ra#}#Ra$O#Ra$R#Ra$Z#Ra$k#Ra~OU$xO~P*{O!m${O~O!_$|O$k#zO~OZ%OO!_#xO$Z#ha~P)WO!_#xO$Z%TO$k#zO~P)WO$Z%UO~Od|Oe|Of#Vqg#Vqh#Vq!O#Vq!l#Vq!n#Vq!o#Vq!p#Vq!q#Vq!w#Vq!x#Vq#{#Vq#|#Vq#}#Vq$O#Vq$R#Vq$Z#Vq$V#Vq~O$V%XO$Z%YO~Od|Oe|Of#rqg#rqh#rq!O#rq!l#rq!n#rq!o#rq!p#rq!q#rq!w#rq!x#rq#{#rq#|#rq#}#rq$O#rq$R#rq$Z#rq$V#rq~O$V%]O~P<kO$Z%[O~P,|O#z%^O$Z%aO~OX#uaY#uai#uaj#uak#ual#uam#uan#uao#uap#uaq#uar#uas#ua!v#ua!w#ua!x#ua$U#ua$[#ua$]#ua$^#ua$_#ua$`#ua$a#ua$b#ua$c#ua$d#ua$e#ua$f#ua$g#ua$h#ua$i#ua$j#ua~O$Y$YO~P!*OO_%cO`%cO$Y#ua~P!*OOf!QOh!QO!O!UO!l!UO!n!UO!o!UO!p!UO!q!UO!w!RO!x!RO#{#tq#|#tq#}#tq$O#tq$R#tq$Z#tq~Og#tq~P!,jOf#tqg#tqh#tq~P!,pOg!PO~P!,jO$R#tq$Z#tq~P%lOf#tqg#tqh#tq!O#tq!l#tq!n#tq!o#tq!p#tq!q#tq#{#tq#|#tq#}#tq$O#tq~O!w!RO!x!RO$R#tq$Z#tq~P!.eO}%dO~O$Z%eO~O}%gO~O$Y%hO~O$V$qOf!gig!gih!gi!O!gi!Q!gi!W!gi!X!gi!Y!gi!Z!gi!_!gi!l!gi!n!gi!o!gi!p!gi!q!gi!w!gi!x!gi#{!gi#|!gi#}!gi$O!gi$R!gi$Z!gi$k!gi~O}%iO~O{#dO~Of#jO$V#jOg!hih!hi!O!hi!Q!hi!W!hi!X!hi!Y!hi!Z!hi!_!hi!l!hi!n!hi!o!hi!p!hi!q!hi!w!hi!x!hi#{!hi#|!hi#}!hi$O!hi$R!hi$Z!hi$k!hi~O{%kO}%kO~O{%pO$m%rO$n%sO$o%tO~OZ%OO$Z#hi~O$l%vO~O!_#xO$Z#hi~P)WO!m%yO~O!_$|O$Z#hi~O!_#xO$Z%{O$k#zO~P)WO!_$|O$Z%{O$k#zO~O$Z%}O~O{&OO~O$Z&PO~P,|O$V&RO$Z&SO~O$Y$YOX#uiY#uii#uij#uik#uil#uim#uin#uio#uip#uiq#uir#uis#ui!v#ui!w#ui!x#ui$U#ui$[#ui$]#ui$^#ui$_#ui$`#ui$a#ui$b#ui$c#ui$d#ui$e#ui$f#ui$g#ui$h#ui$i#ui$j#ui~O$V&UO~O$Z&VO~O}&WO~O$Y&XO~Of#jOg#kO$V#jO!_#ki$k#ki$Z#ki~O!_$|O$Z#hq~O!_#xO$Z#hq~P)WOZ%OO!_&[O$Z#hq~Od|Oe|Of#V!Rg#V!Rh#V!R!O#V!R!l#V!R!n#V!R!o#V!R!p#V!R!q#V!R!w#V!R!x#V!R#{#V!R#|#V!R#}#V!R$O#V!R$R#V!R$Z#V!R$V#V!R~Od|Oe|Of#r!Rg#r!Rh#r!R!O#r!R!l#r!R!n#r!R!o#r!R!p#r!R!q#r!R!w#r!R!x#r!R#{#r!R#|#r!R#}#r!R$O#r!R$R#r!R$Z#r!R$V#r!R~O$Z&_O~P,|O#z%^O$Z&aO~O}&bO~O$Z&cO~O{&dO~O!_$|O$Z#hy~OZ%OO$Z#hy~OU$xO~O!_&[O$Z#hy~O$V&gO~O$Z&hO~O!_$|O$Z#h!R~O}&jO~O$V&kO~O}&lO~O$Z&mO~OP!dOQ!cOR!fOS!eOT!eOV&nOW!kOa!mOb!nOc!oO{!bO$Y!iO~O!_&oOfwagwahwa!lwa!nwa!owa!pwa!qwa!wwa!xwa#{wa#|wa#}wa$Owa$Vwa~P)WO!_&oO$VwX~P#mOf&yOh&yO!O&}O!l&}O!n&}O!o&}O!p&}O!q&}O!w&zO!x&zO#{#tq#|#tq#}#tq$O#tq$V#tq~Og#tq~P!@pOf#tqg#tqh#tq~P!@vOg&xO~P!@pOf&yOg&xOh&yO!O&}O!l&}O!n&}O!o&}O!p&}O!q&}O!w&zO!x&zO#{&{O#|&{O#}&{O$O&|O~O$V#tq~P!B^O!w&zO!x&zO$V#tq~P!.eO\",\n  goto: \"1l$RPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP$S%R%j&Y&]PPPPPP&t'W'h'v(XPPPP(h(p(yP)S)XP)S)S)[)e)S)m*O*O*XPPPPPP*XP*O*bPPP)S)S*{+R)S)S+Y+])S+c+f+l,_,t-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-Z-p-y.^.j/S/V/V/V/Y/i,_/l,_0R0w1Y1c1fPPPPP,_,_[YOT}!{$U%]Q$^#PQ$_#QS$`#R&tQ$a#SQ$b#TQ$c#UQ'O&rQ'P&sQ'Q&uQ'R&vQ'S&wR'T!Vt^O}!V!{#P#Q#R#S#T#U$U%]&r&s&t&u&v&wRyTjSOT}!V!{#P#Q#R#S#T#U$U%]S!t{$QQ#}!u]&q&r&s&t&u&v&wRpPQoP^!hv!i#j#k#x$|&oQ#Y!YS#q!n$vT#u!o$wQxSQ#y!tQ$}#|Q%R#}Q%z%QR&p&q[wS!t#|#}%Q&q]!qx#y$}%R%z&piuSx!t#y#|#}$}%Q%R%z&p&qhtSx!t#y#|#}$}%Q%R%z&p&qR!auksSux!t#y#|#}$}%Q%R%z&p&qQ!^sV#^!`#Z$hW![s!`#Z$hR$j#`Q#_!`Q$f#ZR%f$hV!pv#x&oR#c!cQ#f!cQ#g!dR$o#cU#e!c!d#cR%j$qU!jv#x&oQ#i!iQ$r#jQ$s#kR%w$|_!hv!i#j#k#x$|&o_!gv!i#j#k#x$|&ov]OT}!V!{#P#Q#R#S#T#U$U%]&r&s&t&u&v&wT$m#`#aQ#o!lR&i&nS#n!l&nR%l$uR#s!nQ#r!nR%m$vR#w!oQ#v!oR%n$wj^O#P#Q#R#S#T#U&r&s&t&u&v&wQzTQ!z}Q#V!VQ$X!{Q%Z$UR&Q%]w]OT}!V!{#P#Q#R#S#T#U$U%]&r&s&t&u&v&wwVOT}!V!{#P#Q#R#S#T#U$U%]&r&s&t&u&v&wwUOT}!V!{#P#Q#R#S#T#U$U%]&r&s&t&u&v&wQ!v{Q$O!uR%W$QS#|!t#}W$z#y#{%R%SQ%u$yQ%|%TR&Z%{Q%Q#|Q%u$zQ&]%|R&e&ZQ#{!tS$y#y%RQ%P#|Q%S#}S%x$}%QS&Y%z%|R&f&]R%q$xR%o$xQ!OXQ%V$PQ%[$VQ&^%}R&_&PR$S!xwXOT}!V!{#P#Q#R#S#T#U$U%]&r&s&t&u&v&wQ#P!PQ#Q!QQ#R!RQ#S!SQ#T!TQ#U!UQ&r&xQ&s&yQ&t&zQ&u&{Q&v&|R&w&}h!}!P!Q!R!S!T!U&x&y&z&{&|&}R$]#OQ$Z!|Q%b$[R&T%cR%_$YQ%`$YR&`&R\",\n  nodeNames: \"⚠ Json Logfmt Unpack Pattern Regexp Unwrap LabelFormat LineFormat LabelReplace Vector Offset Bool On Ignoring GroupLeft GroupRight Decolorize Drop Keep By Without And Or Unless Sum Avg Count Max Min Stddev Stdvar Bottomk Topk Sort Sort_Desc LineComment LogQL Expr LogExpr Selector Matchers Matcher Identifier Eq String Neq Re Nre PipelineExpr PipelineStage LineFilters LineFilter Filter PipeExact PipeMatch PipePattern Npa FilterOp Ip OrFilter Pipe LogfmtParser LogfmtParserFlags ParserFlag LabelParser JsonExpressionParser LabelExtractionExpressionList LabelExtractionExpression LogfmtExpressionParser LabelFilter IpLabelFilter UnitFilter DurationFilter Gtr Duration Gte Lss Lte Eql BytesFilter Bytes NumberFilter LiteralExpr Number Add Sub LineFormatExpr LabelFormatExpr LabelsFormat LabelFormatMatcher DecolorizeExpr DropLabelsExpr DropLabels DropLabel KeepLabelsExpr KeepLabels KeepLabel MetricExpr RangeAggregationExpr RangeOp CountOverTime Rate RateCounter BytesOverTime BytesRate AvgOverTime SumOverTime MinOverTime MaxOverTime StddevOverTime StdvarOverTime QuantileOverTime FirstOverTime LastOverTime AbsentOverTime LogRangeExpr Range OffsetExpr UnwrapExpr ConvOp BytesConv DurationConv DurationSecondsConv Grouping Labels VectorAggregationExpr VectorOp BinOpExpr BinOpModifier OnOrIgnoringModifier GroupingLabels GroupingLabelList GroupingLabel LabelName Mul Div Mod Pow LabelReplaceExpr VectorExpr\",\n  maxTerm: 169,\n  skippedNodes: [0,36],\n  repeatNodeCount: 0,\n  tokenData: \"<n~RvX^#ipq#iqr$^rs$yst%kuv%vxy%{yz&Qz{&V{|&[|}&a}!O&f!O!P2v!P!Q3v!Q!R3{!R![7^![!]9]!^!_9q!_!`:O!`!a:e!c!}:r!}#O;Y#P#Q;_#Q#R;d#R#S:r#S#T;i#T#o:r#o#p;u#p#q;z#q#r<i#y#z#i$f$g#i#BY#BZ#i$IS$I_#i$I|$JO#i$JT$JU#i$KV$KW#i&FU&FV#i~#nY$T~X^#ipq#i#y#z#i$f$g#i#BY#BZ#i$IS$I_#i$I|$JO#i$JT$JU#i$KV$KW#i&FU&FV#i~$aR!_!`$j!`!a$o#r#s$t~$oO!O~~$tO!Z~~$yO!Q~~$|UOY$yZr$yrs%`s#O$y#O#P%e#P~$y~%eO}~~%hPO~$y~%pQt~OY%kZ~%k~%{O#}~~&QO$Y~~&VO$Z~~&[O#{~~&aO!w~~&fO$V~~&kQ!x~}!O&q!Q![(w~&tQ#_#`&z#g#h(X~&}P#X#Y'Q~'TP#X#Y'W~'ZP#d#e'^~'aP}!O'd~'gP#X#Y'j~'mP#a#b'p~'sP#d#e'v~'yP#h#i'|~(PP#m#n(S~(XO!b~~([P#h#i(_~(bP#f#g(e~(hP#]#^(k~(nP#V#W(q~(tP#h#i(S~(zZ!O!P)m!Q![(w#W#X0`#[#]*]#a#b+j#b#c.R#g#h/X#i#j.^#k#l1T#m#n1{${$|.^~)pP!Q![)s~)vV!Q![)s#[#]*]#a#b+j#b#c.R#g#h/X#i#j.^${$|.^~*bP!m~!Q![*e~*hV!O!P*}!Q![*e#a#b+j#b#c.R#g#h/X#i#j.^${$|.^~+QP!Q![+T~+WU!Q![+T#a#b+j#b#c.R#g#h/X#i#j.^${$|.^~+oQ!m~!Q![+u#g#h-Q~+xV!O!P,_!Q![+u#a#b,z#b#c.R#g#h/X#i#j.^${$|.^~,bP!Q![,e~,hU!Q![,e#a#b,z#b#c.R#g#h/X#i#j.^${$|.^~,}P#g#h-Q~-VP!m~!Q![-Y~-]T!O!P-l!Q![-Y#b#c.R#i#j.^${$|.^~-oP!Q![-r~-uS!Q![-r#b#c.R#i#j.^${$|.^~.UP#g#h.X~.^O!m~~.aP#g#h.d~.iP!m~!Q![.l~.oR!O!P.x!Q![.l#b#c.R~.{P!Q![/O~/RQ!Q![/O#b#c.R~/^P!m~!Q![/a~/dU!O!P/v!Q![/a#a#b,z#b#c.R#i#j.^${$|.^~/yP!Q![/|~0PT!Q![/|#a#b,z#b#c.R#i#j.^${$|.^~0eP!m~!Q![0h~0kW!O!P)m!Q![0h#[#]*]#a#b+j#b#c.R#g#h/X#i#j.^${$|.^~1YP!m~!Q![1]~1`X!O!P)m!Q![1]#W#X0`#[#]*]#a#b+j#b#c.R#g#h/X#i#j.^${$|.^~2QP!m~!Q![2T~2WY!O!P)m!Q![2T#W#X0`#[#]*]#a#b+j#b#c.R#g#h/X#i#j.^#k#l1T${$|.^~2yP!Q![2|~3RR!v~!Q![2|!g!h3[#X#Y3[~3_R{|3h}!O3h!Q![3n~3kP!Q![3n~3sP!v~!Q![3n~3{O#|~~4Qe!v~!O!P5c!Q![7^!d!e6x!g!h3[!i!j6}!m!n6}!o!p6}!r!s6}!v!w6}#W#X0`#X#Y3[#[#]*]#_#`7W#a#b+j#b#c.R#g#h/X#i#j.^#k#l1T#l#m8q#m#n1{${$|.^~5hR!v~!Q![5q!g!h3[#X#Y3[~5v`!v~!Q![5q!d!e6x!g!h3[!i!j6}!m!n6}!o!p6}!r!s6}!v!w6}#X#Y3[#[#]*]#_#`7W#a#b+j#b#c.R#g#h/X#i#j.^${$|.^~6}O!s~~7QQ!d!e6x#]#^7W~7ZP!d!e6x~7cd!v~!O!P5c!Q![7^!d!e6x!g!h3[!i!j6}!m!n6}!o!p6}!r!s6}!v!w6}#W#X0`#X#Y3[#[#]*]#_#`7W#a#b+j#b#c.R#g#h/X#i#j.^#k#l1T#m#n1{${$|.^~8tR!Q![8}!c!i8}#T#Z8}~9SR!v~!Q![8}!c!i8}#T#Z8}P9bT{P!Q![9]![!]9]!c!}9]#R#S9]#T#o9]~9vP!o~!_!`9y~:OO!p~~:TQ|~!_!`:Z#r#s:`~:`O!q~~:eO!P~~:jP!l~!_!`:m~:rO!n~R:yT{P#zQ!Q![:r![!]9]!c!}:r#R#S:r#T#o:r~;_O$k~~;dO$l~~;iO$O~~;lRO#S;i#S#T%`#T~;i~;zO$U~~<PR!_~!_!`<Y!`!a<_#r#s<d~<_O!W~~<dO!Y~~<iO!X~~<nO$W~\",\n  tokenizers: [0, 1],\n  topRules: {\"LogQL\":[0,37]},\n  specialized: [{term: 43, get: (value, stack) => (specializeIdentifier(value) << 1)},{term: 43, get: (value, stack) => (extendIdentifier(value) << 1) | 1},{term: 43, get: value => spec_Identifier[value] || -1}],\n  tokenPrec: 0\n});\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst Json = 1,\n  Logfmt = 2,\n  Unpack = 3,\n  Pattern = 4,\n  Regexp = 5,\n  Unwrap = 6,\n  LabelFormat = 7,\n  LineFormat = 8,\n  LabelReplace = 9,\n  Vector = 10,\n  Offset = 11,\n  Bool = 12,\n  On = 13,\n  Ignoring = 14,\n  GroupLeft = 15,\n  GroupRight = 16,\n  Decolorize = 17,\n  Drop = 18,\n  Keep = 19,\n  By = 20,\n  Without = 21,\n  And = 22,\n  Or = 23,\n  Unless = 24,\n  Sum = 25,\n  Avg = 26,\n  Count = 27,\n  Max = 28,\n  Min = 29,\n  Stddev = 30,\n  Stdvar = 31,\n  Bottomk = 32,\n  Topk = 33,\n  Sort = 34,\n  Sort_Desc = 35,\n  LineComment = 36,\n  LogQL = 37,\n  Expr = 38,\n  LogExpr = 39,\n  Selector = 40,\n  Matchers = 41,\n  Matcher = 42,\n  Identifier = 43,\n  Eq = 44,\n  String = 45,\n  Neq = 46,\n  Re = 47,\n  Nre = 48,\n  PipelineExpr = 49,\n  PipelineStage = 50,\n  LineFilters = 51,\n  LineFilter = 52,\n  Filter = 53,\n  PipeExact = 54,\n  PipeMatch = 55,\n  PipePattern = 56,\n  Npa = 57,\n  FilterOp = 58,\n  Ip = 59,\n  OrFilter = 60,\n  Pipe = 61,\n  LogfmtParser = 62,\n  LogfmtParserFlags = 63,\n  ParserFlag = 64,\n  LabelParser = 65,\n  JsonExpressionParser = 66,\n  LabelExtractionExpressionList = 67,\n  LabelExtractionExpression = 68,\n  LogfmtExpressionParser = 69,\n  LabelFilter = 70,\n  IpLabelFilter = 71,\n  UnitFilter = 72,\n  DurationFilter = 73,\n  Gtr = 74,\n  Duration = 75,\n  Gte = 76,\n  Lss = 77,\n  Lte = 78,\n  Eql = 79,\n  BytesFilter = 80,\n  Bytes = 81,\n  NumberFilter = 82,\n  LiteralExpr = 83,\n  Number = 84,\n  Add = 85,\n  Sub = 86,\n  LineFormatExpr = 87,\n  LabelFormatExpr = 88,\n  LabelsFormat = 89,\n  LabelFormatMatcher = 90,\n  DecolorizeExpr = 91,\n  DropLabelsExpr = 92,\n  DropLabels = 93,\n  DropLabel = 94,\n  KeepLabelsExpr = 95,\n  KeepLabels = 96,\n  KeepLabel = 97,\n  MetricExpr = 98,\n  RangeAggregationExpr = 99,\n  RangeOp = 100,\n  CountOverTime = 101,\n  Rate = 102,\n  RateCounter = 103,\n  BytesOverTime = 104,\n  BytesRate = 105,\n  AvgOverTime = 106,\n  SumOverTime = 107,\n  MinOverTime = 108,\n  MaxOverTime = 109,\n  StddevOverTime = 110,\n  StdvarOverTime = 111,\n  QuantileOverTime = 112,\n  FirstOverTime = 113,\n  LastOverTime = 114,\n  AbsentOverTime = 115,\n  LogRangeExpr = 116,\n  Range = 117,\n  OffsetExpr = 118,\n  UnwrapExpr = 119,\n  ConvOp = 120,\n  BytesConv = 121,\n  DurationConv = 122,\n  DurationSecondsConv = 123,\n  Grouping = 124,\n  Labels = 125,\n  VectorAggregationExpr = 126,\n  VectorOp = 127,\n  BinOpExpr = 128,\n  BinOpModifier = 129,\n  OnOrIgnoringModifier = 130,\n  GroupingLabels = 131,\n  GroupingLabelList = 132,\n  GroupingLabel = 133,\n  LabelName = 134,\n  Mul = 135,\n  Div = 136,\n  Mod = 137,\n  Pow = 138,\n  LabelReplaceExpr = 139,\n  VectorExpr = 140;\n\nexport { AbsentOverTime, Add, And, Avg, AvgOverTime, BinOpExpr, BinOpModifier, Bool, Bottomk, By, Bytes, BytesConv, BytesFilter, BytesOverTime, BytesRate, ConvOp, Count, CountOverTime, Decolorize, DecolorizeExpr, Div, Drop, DropLabel, DropLabels, DropLabelsExpr, Duration, DurationConv, DurationFilter, DurationSecondsConv, Eq, Eql, Expr, Filter, FilterOp, FirstOverTime, GroupLeft, GroupRight, Grouping, GroupingLabel, GroupingLabelList, GroupingLabels, Gte, Gtr, Identifier, Ignoring, Ip, IpLabelFilter, Json, JsonExpressionParser, Keep, KeepLabel, KeepLabels, KeepLabelsExpr, LabelExtractionExpression, LabelExtractionExpressionList, LabelFilter, LabelFormat, LabelFormatExpr, LabelFormatMatcher, LabelName, LabelParser, LabelReplace, LabelReplaceExpr, Labels, LabelsFormat, LastOverTime, LineComment, LineFilter, LineFilters, LineFormat, LineFormatExpr, LiteralExpr, LogExpr, LogQL, LogRangeExpr, Logfmt, LogfmtExpressionParser, LogfmtParser, LogfmtParserFlags, Lss, Lte, Matcher, Matchers, Max, MaxOverTime, MetricExpr, Min, MinOverTime, Mod, Mul, Neq, Npa, Nre, Number, NumberFilter, Offset, OffsetExpr, On, OnOrIgnoringModifier, Or, OrFilter, ParserFlag, Pattern, Pipe, PipeExact, PipeMatch, PipePattern, PipelineExpr, PipelineStage, Pow, QuantileOverTime, Range, RangeAggregationExpr, RangeOp, Rate, RateCounter, Re, Regexp, Selector, Sort, Sort_Desc, Stddev, StddevOverTime, Stdvar, StdvarOverTime, String, Sub, Sum, SumOverTime, Topk, UnitFilter, Unless, Unpack, Unwrap, UnwrapExpr, Vector, VectorAggregationExpr, VectorExpr, VectorOp, Without, parser };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js?_cache=\" + {\"2\":\"e9d7b1edaa67e4bf06d2\",\"7\":\"7c439383b5579d93190b\",\"64\":\"804e8346f7b248b614e8\",\"70\":\"7f8d3e9c637143e61333\",\"74\":\"91d0488d9415c848f478\",\"82\":\"c95017024c91718765ab\",\"150\":\"944bf052068f91131f23\",\"156\":\"c3b599d3fba70dd4885e\",\"190\":\"e1bbf92c5bebc9a9bf5d\",\"206\":\"acaeaa3da238b0f63e39\",\"220\":\"b76431d1c9585014d17b\",\"327\":\"bd25024e96e068e0a0b3\",\"328\":\"0b919897b3685161ebbb\",\"341\":\"cfbba4106496f117e2ed\",\"353\":\"73600224addf98d5b0f9\",\"470\":\"29dd26bce42815d67980\",\"489\":\"f595b5ee90729da480b1\",\"546\":\"810d946f2213fe3deeaf\",\"549\":\"6a1ccd16cd8888ace033\",\"582\":\"298ebd40d2a7c9af1030\",\"644\":\"ea768357cc51452a2b98\",\"660\":\"ef8c0cefe96d9e8a41f6\",\"677\":\"212c1ea885ae6d839340\",\"697\":\"5de36e4acb7ef045d1c9\",\"727\":\"aabd8c04658defa794ff\",\"767\":\"a95659cc39491dfcf997\",\"826\":\"91e39090c5611938563c\",\"854\":\"9da793b3efc18875808d\",\"864\":\"c7042e4fc7e1fc7aad94\",\"876\":\"1c25c3565e17d51c7c99\",\"919\":\"bd81f138ef86a6ac7696\",\"944\":\"c9770b9500ce5eb4bbe7\",\"980\":\"2e611672b5c88b9207e9\"}[chunkId] + \"\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"public/plugins/grafana-lokiexplore-app/\";","\n__webpack_require__.sriHashes = {\"2\":\"*-*-*-CHUNK-SRI-HASH-KxNH5obYlaW+JIxVYXIF3l/pEoEIo=\",\"7\":\"*-*-*-CHUNK-SRI-HASH-7F8zVqWsNOHcsmIWQKVJ6PROg7jSM=\",\"64\":\"*-*-*-CHUNK-SRI-HASH-vvn0BuWiqRwTVtSNskzASY3JWWAmM=\",\"70\":\"*-*-*-CHUNK-SRI-HASH-xWY8doE1DeLaJIFCgLMPYsD8HihIE=\",\"74\":\"*-*-*-CHUNK-SRI-HASH-skm3VwtRP9NPbFQdsfQ/Uy4dHqxbE=\",\"82\":\"*-*-*-CHUNK-SRI-HASH-EQQjepNKyKKHggNWDI+9nHc8T6ovg=\",\"150\":\"*-*-*-CHUNK-SRI-HASH-E+ZTFEbbKUgQemR1JnK804vNGQjkk=\",\"156\":\"*-*-*-CHUNK-SRI-HASH-WJmP/duASTPVeH/OvHeiWm+SND7Ec=\",\"190\":\"*-*-*-CHUNK-SRI-HASH-rcoc/4A13kdAxL9r9KoniYNj/vtcw=\",\"206\":\"*-*-*-CHUNK-SRI-HASH-7PNiM9mPFm6C4aghznMp1ZHWpqZeQ=\",\"220\":\"*-*-*-CHUNK-SRI-HASH-sfCYb85hcih1PMaboIql0g/Z3wGHI=\",\"327\":\"*-*-*-CHUNK-SRI-HASH-9zMyS+diS2CyXaoRqNdc/NbCYv6oA=\",\"328\":\"*-*-*-CHUNK-SRI-HASH-HP0RIrpXqzYxxeeTwj5+o/GRsLRxE=\",\"341\":\"*-*-*-CHUNK-SRI-HASH-siU9z7Fk8PJe2H4v/JPs960N+cKCk=\",\"353\":\"*-*-*-CHUNK-SRI-HASH-tgN5/QOMm8ifd8033CuZOHps9gF6A=\",\"470\":\"*-*-*-CHUNK-SRI-HASH-DLC92l8qdycD4Ua87OV1W1EmkNCnU=\",\"489\":\"*-*-*-CHUNK-SRI-HASH-Zi0UdrKF6a6zLFYf0hmDZ3nMozZyk=\",\"546\":\"*-*-*-CHUNK-SRI-HASH-SGxEKWjXIi8J7KnveGHhrAGvn0JRw=\",\"549\":\"*-*-*-CHUNK-SRI-HASH-YfO3ingByoiwIRIBQ3v9rdV0FEv2o=\",\"582\":\"*-*-*-CHUNK-SRI-HASH-EkDdVQ8/qjxubh09/7fUAzY9yI3uQ=\",\"644\":\"*-*-*-CHUNK-SRI-HASH-HLXY6EmvZRln0lQHo6omPffglC5AA=\",\"660\":\"*-*-*-CHUNK-SRI-HASH-1ly/20R4RqQr5zvwxTDMSaeS/XJTc=\",\"677\":\"*-*-*-CHUNK-SRI-HASH-5AAWXVXE9/tolnBeqrK3+9cHOkFO8=\",\"697\":\"*-*-*-CHUNK-SRI-HASH-WsrimxVu+QuwfDMblpzpy9Rfwm4x4=\",\"727\":\"*-*-*-CHUNK-SRI-HASH-64vLUAncV763v/pYKf4avM0q+3oYk=\",\"767\":\"*-*-*-CHUNK-SRI-HASH-jEdaJjIgLKHmuiiv6R1fFNJ1L0eGE=\",\"826\":\"*-*-*-CHUNK-SRI-HASH-TD9ZyoD08pRdcHFno3E1sZN/8NxwE=\",\"854\":\"*-*-*-CHUNK-SRI-HASH-CO8yIHolx/3g3nglKHNgio0QWCR/E=\",\"864\":\"*-*-*-CHUNK-SRI-HASH-yWxbkjxSn+1LO1sy5eo44f5jeHdaE=\",\"876\":\"*-*-*-CHUNK-SRI-HASH-mMbqRLoGPYdDBz0JZlF3EBhcttSgI=\",\"919\":\"*-*-*-CHUNK-SRI-HASH-E0zoKbm1MOaKexO/750XsMkg7RxhQ=\",\"944\":\"*-*-*-CHUNK-SRI-HASH-9Nvrh568fe5XpRS5Cb19/W6QCSzAA=\",\"980\":\"*-*-*-CHUNK-SRI-HASH-zPx4fI1achF6v46my37UzjKWrbUts=\"};","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t231: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkgrafana_lokiexplore_app\"] = self[\"webpackChunkgrafana_lokiexplore_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6709);\n"],"names":["leafPrototypes","getProto","inProgress","dataWebpackPrefix","slice","lastIndexOf","OpenInLogsDrilldownButton","lazy","EmbeddedLogsExploration","App","initPluginTranslations","pluginJson","wasmSupported","default","initRuntimeDs","initChangepoint","initOutlier","Promise","all","AppConfig","plugin","AppPlugin","setRootPage","addConfigPage","body","icon","id","title","linkConfig","linkConfigs","addLink","exposeComponent","component","props","Suspense","fallback","LinkButton","variant","disabled","description","div","f","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","_owner","current","exports","jsx","jsxs","module","pageSlugUrlKey","drilldownLabelUrlKey","TabNames","PageSlugs","ValueSlugs","PRODUCT_NAME","ExtensionPoints","MetricInvestigation","targets","PluginExtensionPoints","DashboardPanelMenu","ExploreToolbarAction","path","createAppUrl","configure","context","lokiQuery","find","target","datasource","templateSrv","getTemplateSrv","dataSourceUid","replace","uid","scopedVars","expr","interpolateQueryExpr","fields","labelFilters","lineFilters","patternFilters","getMatcherFromQuery","labelSelector","selector","isOperatorInclusive","operator","labelValue","replaceSlash","value","split","labelName","SERVICE_NAME","sort","params","setUrlParameter","UrlParameters","DatasourceId","URLSearchParams","TimeRangeFrom","timeRange","from","valueOf","toString","TimeRangeTo","to","setUrlParamsFromLabelFilters","lineFilter","appendUrlParameter","LineFilters","escapeURLDelimiters","stringifyValues","setLineFilterUrlParams","length","field","LabelType","StructuredMetadata","LEVEL_VARIABLE_VALUE","Levels","Metadata","stringifyAdHocValues","replaceEscapeChars","fieldValue","parser","adHocFilterURLString","JSON","stringify","stringifyAdHocValueLabels","Fields","setUrlParamsFromFieldFilters","patterns","push","PatternFilterOp","match","pattern","patternsString","renderPatternFilters","Patterns","PatternsVariable","setUrlParamsFromPatterns","EMPTY_VARIABLE_VALUE","addAdHocFilterUserInputPrefix","labelFilter","Indexed","labelsAdHocFilterURLString","Labels","urlParams","VAR_DATASOURCE","VAR_LABELS","VAR_FIELDS","VAR_METADATA","VAR_LEVELS","VAR_LINE_FILTERS","VAR_PATTERNS","initalParams","searchParams","locationService","getSearch","set","location","getLocation","search","append","parameter","stripAdHocFilterUserInputPrefix","escapeUrlCommaDelimiters","escapeUrlPipeDelimiters","variable","multi","includeAll","escapeLabelValueInExactSelector","lodashMap","lokiSpecialRegexEscape","join","LabelFilterOp","LineFormatFilterOp","NumericFilterOp","FilterOp","LineFilterOp","LineFilterCaseSensitive","defaultContext","app","version","logger","error","err","ctx","console","attemptFaroErr","info","msg","attemptFaroInfo","warn","attemptFaroWarn","logInfo","logWarning","context2","isRecord","keys","forEach","hasData","data","populateFetchErrorContext","Error","logError","NodePosition","fromNode","node","contains","position","this","getExpression","query","substring","constructor","syntaxNode","getNodesFromQuery","nodeTypes","nodes","parse","iterate","enter","undefined","includes","getAllPositionsInNodeByType","positions","pos","child","childAfter","parseNonPatternFilters","lineFilterValue","quoteString","index","isRegexSelector","regex","negativeRegex","isCaseInsensitive","replaceDoubleEscape","RegExp","replaceDoubleQuoteEscape","caseInsensitive","caseSensitive","parsePatternFilters","getNumericFieldOperator","matcher","Lte","FilterOperator","lte","Lss","lt","Gte","gte","Gtr","gt","getStringFieldOperator","Eq","Equal","Neq","NotEqual","Re","RegexEqual","Nre","RegexNotEqual","filter","Selector","filters","allMatcher","Matcher","identifierPosition","Identifier","valuePosition","String","map","parseLabelFilters","dataFrame","series","frame","refId","allFields","LabelFilter","fieldNameNode","expression","getChild","logFmtParser","Logfmt","jsonParser","Json","fieldName","fieldStringValue","fieldNumberValue","Number","fieldBytesValue","Bytes","fieldDurationValue","Duration","labelType","getLabelTypeFromFrame","Parsed","parseFields","allLineFilters","LineFilter","entries","equal","PipeExact","pipeRegExp","PipeMatch","notEqual","notEqualRegExp","patternInclude","PipePattern","patternExclude","Npa","lineFilterValueNodes","getStringsFromLineFilter","lineFilterValueNode","negativeMatch","parseLineFilters","ErrorId","isValidQuery","nodeType","isQueryWithNode","string","OrFilter","LokiQueryDirection","labelKey","typeField","name","values","isObj","o","hasProp","prop","isString","s","obj","unknownToStrings","strings","Array","isArray","i","narrowSelectedTableRow","narrowed","row","narrowLogsVisualizationType","narrowLogsSortOrder","LogsSortOrder","Ascending","Descending","narrowFieldValue","narrowRecordStringNumber","returnRecord","narrowTimeRange","unknownRange","range","narrowErrorMessage","narrowFilterOperator","op","NarrowingError","narrowPageOrValueSlug","input","narrowPageSlug","narrowValueSlug","label","toLowerCase","labels","logs","narrowDrilldownLabelFromSearchParams","narrowPageSlugFromSearchParams","narrowJsonDerivedFieldLinkPayload","payload","href","isOperatorExclusive","isOperatorRegex","isOperatorNumeric","numericOperatorArray","getOperatorDescription","operators","array","includeOperators","numericOperators","lineFilterOperators","excludePatternsLine","trim","includePatterns","includePatternsLine","VAR_LABELS_EXPR","VAR_LABELS_REPLICA","VAR_LABELS_REPLICA_EXPR","VAR_FIELDS_EXPR","PENDING_FIELDS_EXPR","PENDING_METADATA_EXPR","VAR_FIELDS_AND_METADATA","VAR_METADATA_EXPR","VAR_PATTERNS_EXPR","VAR_LEVELS_EXPR","VAR_FIELD_GROUP_BY","VAR_LABEL_GROUP_BY","VAR_LABEL_GROUP_BY_EXPR","VAR_PRIMARY_LABEL_SEARCH","VAR_PRIMARY_LABEL","VAR_PRIMARY_LABEL_EXPR","VAR_DATASOURCE_EXPR","VAR_JSON_FIELDS","VAR_JSON_FIELDS_EXPR","VAR_LINE_FORMAT","VAR_LINE_FORMAT_EXPR","MIXED_FORMAT_EXPR","JSON_FORMAT_EXPR","LOGS_FORMAT_EXPR","VAR_LOGS_FORMAT","VAR_LOGS_FORMAT_EXPR","VAR_LINE_FILTER","VAR_LINE_FILTERS_EXPR","LOG_STREAM_SELECTOR_EXPR","DETECTED_FIELD_VALUES_EXPR","DETECTED_FIELD_AND_METADATA_VALUES_EXPR","DETECTED_LEVELS_VALUES_EXPR","PATTERNS_SAMPLE_SELECTOR_EXPR","PRETTY_LOG_STREAM_SELECTOR_EXPR","EXPLORATION_DS","ALL_VARIABLE_VALUE","SERVICE_UI_LABEL","VAR_AGGREGATED_METRICS","USER_INPUT_ADHOC_VALUE_PREFIX","startsWith","isAdHocFilterValueUserInput","__WEBPACK_EXTERNAL_MODULE__6089__","__WEBPACK_EXTERNAL_MODULE__7781__","__WEBPACK_EXTERNAL_MODULE__8531__","__WEBPACK_EXTERNAL_MODULE__2007__","__WEBPACK_EXTERNAL_MODULE__211__","__WEBPACK_EXTERNAL_MODULE__3241__","__WEBPACK_EXTERNAL_MODULE__1308__","__WEBPACK_EXTERNAL_MODULE__5959__","__WEBPACK_EXTERNAL_MODULE__8398__","__WEBPACK_EXTERNAL_MODULE__200__","__WEBPACK_EXTERNAL_MODULE__1159__","__WEBPACK_EXTERNAL_MODULE__7694__","__WEBPACK_EXTERNAL_MODULE__1269__","ENGLISH_US","FRENCH_FRANCE","SPANISH_SPAIN","GERMAN_GERMANY","BRAZILIAN_PORTUGUESE","CHINESE_SIMPLIFIED","ITALIAN_ITALY","JAPANESE_JAPAN","INDONESIAN_INDONESIA","KOREAN_KOREA","RUSSIAN_RUSSIA","CZECH_CZECHIA","DUTCH_NETHERLANDS","HUNGARIAN_HUNGARY","PORTUGUESE_PORTUGAL","POLISH_POLAND","SWEDISH_SWEDEN","TURKISH_TURKEY","CHINESE_TRADITIONAL","DEFAULT_LANGUAGE","PSEUDO_LOCALE","canCookies","document","cookie","order","splice","t","r","voidElement","attrs","children","charAt","indexOf","comment","exec","lastIndex","create","content","reduce","components","u","v","x","test","i18n","code","rest","args","services","forward","alreadyWarned","Date","matchHtmlEntity","htmlEntities","unescapeHtmlEntity","defaultOptions","bindI18n","bindI18nStore","transEmptyNodeValue","transSupportBasicHtmlNodes","transWrapTextNodes","transKeepBasicHtmlNodesFor","useSuspense","unescape","text","setDefaults","options","i18nInstance","setI18n","instance","hasChildren","checkLength","base","getChildren","i18nIsDynamicList","getAsArray","nodesToString","i18nOptions","i18nKey","stringNode","childrenArray","keepArray","childIndex","isValidElement","childPropsCount","shouldKeepChild","childChildren","format","clone","renderNodes","knownComponentsMap","targetString","combinedTOpts","shouldUnescape","emptyChildrenButNeedsHandling","keep","getData","childs","assign","ast","opts","renderInner","rootReactNode","mappedChildren","mapAST","every","hasValidReactChildren","pushTranslatedJSX","inner","mem","isVoid","dummy","cloneElement","Children","createElement","reactNode","astNode","reactNodes","translationContent","interpolator","interpolate","language","tmp","parseInt","source","newTarget","mergeProps","isElement","isValidTranslationWithChildren","isEmptyTransWithHTML","isKnownComponent","isNaN","parseFloat","wrapTextNodes","result","fixComponentProps","translation","componentKey","comp","Fragment","generateComponents","generateArrayComponents","componentMap","generateObjectComponents","isComponentsMap","object","acc","init","react","createContext","count","parent","tOptions","defaults","ns","i18nFromProps","tFromProps","additionalProps","i18nFromContext","defaultNS","defaultNSFromContext","useContext","bind","reactI18nextOptions","namespaces","nodeAsString","defaultValue","hashTransKey","interpolation","defaultVariables","interpolationOverride","alwaysFormat","prefix","suffix","generatedComponents","indexedChildren","componentsMap","useAsParent","defaultTransParent","Trans","tFunc","transComponent","initTFuncAndTransComponent","getI18nInstance","getFixedT","async","loadNamespacedResources","namespace","loaders","resolvedLanguage","loader","resources","addResourceBundle","initDefaultI18nInstance","_a","initPromise","use","returnEmptyString","lng","_b","initDefaultReactI18nInstance","getResolvedLanguage","defaultMessage","Component","LANGUAGES","DefaultBufferLength","nextPropID","Range","NodeProp","config","perNode","deserialize","add","RangeError","NodeType","closedBy","str","openedBy","group","isolate","contextHash","lookAhead","mounted","MountedTree","tree","overlay","get","noProps","flags","define","spec","top","skipped","src","isTop","isSkipped","isError","isAnonymous","is","direct","groups","found","none","NodeSet","types","extend","newTypes","newProps","CachedNode","WeakMap","CachedInnerNode","IterMode","Tree","ch","cursor","mode","TreeCursor","topNode","cursorAt","side","scope","moveTo","_tree","TreeNode","resolve","resolveNode","resolveInner","resolveStack","layers","scan","mount","root","iterStack","stackIterator","leave","anon","IncludeAnonymous","entered","firstChild","nextSibling","propValues","balance","balanceRange","makeTree","build","buffer","nodeSet","maxBufferLength","reused","minRepeatType","FlatBufferCursor","takeNode","parentStart","minPos","inRepeat","depth","start","end","size","lookAheadAtStart","contextAtStart","next","startPos","findBufferSize","Uint16Array","skip","endPos","copyToBuffer","TreeBuffer","localChildren","localPositions","localInRepeat","lastGroup","lastEnd","makeRepeatLeaf","takeFlatNode","reverse","make","makeBalanced","nodeCount","stopAt","j","last","lookAheadProp","lastI","pop","pair","concat","maxSize","fork","minStart","nodeSize","localSkipped","nodeStart","bufferStart","startIndex","topID","buildTree","empty","childString","endIndex","findChild","dir","pick","checkSide","startI","endI","copy","len","Math","max","overlays","IgnoreOverlays","BaseNode","before","after","matchContext","matchNodeContext","enterUnfinishedNodesBefore","childBefore","lastChild","prevSibling","_parent","super","nextChild","ExcludeBuffers","BufferNode","BufferContext","hasChild","IgnoreMounts","rPos","nextSignificantParent","val","toTree","cur","externalSibling","heads","picked","newHeads","StackIterator","stack","bufferNode","yieldNode","unshift","yieldBuf","yield","enterChild","sibling","atLastNode","move","prev","cache","mustLeave","some","nodeSizeCache","balanceType","mkTop","mkTree","total","maxChild","ceil","divide","offset","groupFrom","groupStart","groupSize","nextSize","only","Parser","startParse","fragments","ranges","StringInput","createParse","done","advance","chunk","lineChunks","read","Stack","state","reducePos","score","bufferBase","curContext","_","cx","StackContext","pushState","action","lookaheadRecord","setLookAhead","dPrec","dynamicPrecedence","getGoto","minRepeatTerm","storeNode","reduceContext","lastBigReductionStart","bigReductionCount","lastBigReductionSize","stateFlag","baseStateID","term","mustSink","mustMove","shift","shiftContext","maxNode","nextState","apply","nextStart","nextEnd","useNode","updateContext","tracker","reuse","stream","reset","off","recoverByDelete","isNode","canShift","sim","SimulatedStack","stateSlot","hasAction","recoverByInsert","nextStates","best","forceReduce","validAction","backup","findForcedReduction","seen","explore","allActions","rDepth","forceAll","deadEnd","restart","sameState","other","dialectEnabled","dialectID","dialect","emitContext","hash","emitLookAhead","newCx","close","strict","goto","StackBufferCursor","maybeNext","decodeArray","Type","out","charCodeAt","stop","digit","CachedToken","extended","mask","nullToken","InputStream","chunkOff","chunk2","chunk2Pos","token","rangeIndex","chunkPos","readNext","resolveOffset","assoc","clipPos","peek","idx","resolved","acceptToken","endOffset","acceptTokenTo","getChunk","nextChunk","setDone","min","TokenGroup","readToken","tokenPrecTable","contextual","precTable","precOffset","groupMask","accEnd","allows","overrides","low","high","mid","findOffset","tableData","tableOffset","iPrev","verbose","process","env","LOG","stackIDs","cutAt","fragment","safeFrom","safeTo","trees","nextFragment","fr","openStart","openEnd","nodeAt","TokenCache","tokens","mainToken","actions","tokenizers","getActions","actionIndex","main","tokenizer","updateCachedToken","addActions","eofTerm","getMainToken","specialized","specializers","putAction","Parse","recovering","nextStackID","minStackPos","stoppedAt","topTerm","stacks","bufferLength","parsedPos","stopped","stoppedTokens","newStacks","advanceStack","tok","finished","findFinished","stackToTree","SyntaxError","runRecovery","maxRemaining","outer","stackID","strictCx","cxHash","cached","defaultReduce","localStack","advanceFully","pushStackDedup","restarted","tokenEnd","force","forceBase","insert","fromCodePoint","Dialect","LRParser","wrappers","nodeNames","repeatNodeCount","topTerms","topRules","nodeProps","setProp","nodeID","propSpec","skippedNodes","propSources","tokenArray","tokenData","specializerSpecs","getSpecializer","states","Uint32Array","stateData","maxTerm","dialects","dynamicPrecedences","tokenPrec","termNames","parseDialect","w","loose","table","groupTag","terminal","slot","flag","deflt","external","contextTracker","wrap","hasWrappers","getName","prec","part","Uint8Array","keywordTokens","json","logfmt","unpack","regexp","label_format","line_format","label_replace","vector","bool","on","ignoring","group_left","group_right","unwrap","decolorize","drop","contextualKeywordTokens","by","without","and","or","unless","sum","avg","stddev","stdvar","bottomk","topk","sort_desc","spec_Identifier","__proto__","ip","count_over_time","rate","rate_counter","bytes_over_time","bytes_rate","avg_over_time","sum_over_time","min_over_time","max_over_time","stddev_over_time","stdvar_over_time","quantile_over_time","first_over_time","last_over_time","absent_over_time","bytes","duration","duration_seconds","specializeIdentifier","extendIdentifier","MetricExpr","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","getter","__esModule","getPrototypeOf","then","def","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","promises","globalThis","Function","window","url","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","timeout","nc","setAttribute","origin","crossOrigin","integrity","sriHashes","onScriptComplete","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","fn","setTimeout","head","appendChild","toStringTag","nmd","paths","baseURI","self","installedChunks","installedChunkData","promise","reject","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","chunkLoadingGlobal"],"sourceRoot":""}